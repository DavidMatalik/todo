(()=>{class t{constructor(s){this.text=s,this.id=t.countInstances()}static countInstances(){return t.count=(t.count||0)+1,t.count}}class s extends t{constructor(t){super(t),this.taskList=[],this.active=!0}appendTask(t){this.taskList.push(t)}removeTask(t){const s=this.taskList.findIndex((s=>s.id===t.id));this.taskList.splice(s,1)}}const i=new class{constructor(t,s,i,e){this.todoDisplay=t,this.Task=s,this.Context=i,this.contextList=new e(this.Context),this.init()}init(){this.loadContext()}loadContext(){this.activeContext=this.contextList.getActiveContext()}createNewTask(t){const s=new this.Task(t);this.activeContext.appendTask(s)}}("",class extends t{constructor(t){super(t),this.favorite=!1}},s,class{constructor(t){this.Context=t,this.list=[],this.init()}init(){const t=new s("inbox");this.appendContext(t),this.setActiveContext(t)}appendContext(t){this.list.push(t)}setActiveContext(t){this.activeContext=t}getActiveContext(){return this.activeContext}});console.log(i)})();
//# sourceMappingURL=main.js.map