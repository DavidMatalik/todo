(()=>{class t{constructor(e){this.text=e,this.id=t.countInstances()}static countInstances(){return t.count=(t.count||0)+1,t.count}}class e extends t{constructor(t){super(t),this.taskList=[],this.active=!0}appendTask(t){this.taskList.push(t)}deleteTask(t){const e=this.taskList.findIndex((e=>e.id===t.id));this.taskList.splice(e,1)}}const n=new class{constructor(t,e,n,i){this.Task=e,this.Context=n,this.contextList=new i(this.Context),this.todoDisplay=new t,this.init()}init(){this.todoDisplay.onClickAddContext=this.onClickAddContext.bind(this),this.todoDisplay.onClickDeleteContext=this.onClickDeleteContext.bind(null,this),this.todoDisplay.onDclickEditContext=this.onDclickEditContext.bind(null,this),this.todoDisplay.initListeners(),this.loadStartPage()}onClickAddContext(){const t=this.todoDisplay.contextInput.value;this.createNewContext(t)}loadStartPage(){this.activeContext=this.contextList.getActiveContext(),this.todoDisplay.renderAllContexts(this.contextList.getAllContexts())}createNewTask(t){const e=new this.Task(t);this.contextList.getActiveContext().appendTask(e)}createNewContext(t){const e=new this.Context(t);this.contextList.addNewContext(e),this.todoDisplay.appendNewContext(e)}onClickDeleteContext(t,e){const n=e.target.parentNode,i=e.target.dataset.itemid;t.contextList.deleteContext(i),t.todoDisplay.removeContext(n)}onDclickEditContext(t,e){t.todoDisplay.prepareContextEdit(e.target)}removeTask(t){this.contextList.getActiveContext().deleteTask(t)}}(class{constructor(){this.contextContainer=document.getElementById("context-container"),this.contextInput=document.getElementById("context-input"),this.contextButton=document.getElementById("context-add"),this.taskContainer=document.getElementById("task-container"),this.taskInput=document.getElementById("task-input"),this.taskButton=document.getElementById("task-add"),this.onClickAddContext=null,this.onClickDeleteContext=null,this.onDclickEditContext=null}initListeners(){this.contextButton.addEventListener("click",this.onClickAddContext)}renderAllContexts(t){t.forEach(this.appendNewContext.bind(this))}appendNewContext(t){const e=document.createElement("p"),n=document.createElement("span");n.innerHTML=t.text,e.appendChild(n),e.classList.add("context"),this.addDeleteButton(e,t),e.addEventListener("dblclick",this.onDclickEditContext),this.contextContainer.appendChild(e)}addDeleteButton(t,e){const n=document.createElement("button");n.innerHTML="del",n.dataset.itemid=e.id,n.addEventListener("click",this.onClickDeleteContext),t.appendChild(n)}prepareContextEdit(t){const e=document.createElement("input"),n=t.firstChild.textContent;e.type="text",e.placeholder=n,t.innerHTML="",t.appendChild(e)}removeContext(t){t.remove()}renderTasks(t){}},class extends t{constructor(t){super(t),this.favorite=!1}},e,class{constructor(t){this.Context=t,this.list=[],this.init()}init(){const t=new e("inbox");this.addNewContext(t),this.setActiveContext(t)}addNewContext(t){this.list.push(t)}deleteContext(t){t=parseInt(t);const e=this.list.findIndex((function(e){if(e.id===t)return!0}));this.list.splice(e,1)}setActiveContext(t){this.activeContext=t}getActiveContext(){return this.activeContext}getAllContexts(){return this.list}});n.createNewTask("taskA"),n.createNewTask("taskB"),n.createNewContext("contextB"),n.createNewContext("contextC")})();
//# sourceMappingURL=main.js.map