{"version":3,"sources":["webpack://todo/./src/index.js"],"names":["Item","text","this","id","countInstances","count","todoControlloer","todoDisplay","Task","Context","init","loadContext","activeContext","task","appendTask","console","log","super","favorite","taskList","active","push","foundIndex","findIndex","taskToCompare","splice","createNewTask"],"mappings":"MAAA,MAAMA,EACF,YAAYC,GACRC,KAAKD,KAAOA,EACZC,KAAKC,GAAKH,EAAKI,iBAGnB,wBAEI,OADAJ,EAAKK,OAASL,EAAKK,OAAS,GAAK,EAC1BL,EAAKK,OAkEpB,MAAMC,EAAkB,IAxBxB,MACI,YAAYC,EAAaC,EAAMC,GAC3BP,KAAKK,YAAcA,EACnBL,KAAKM,KAAOA,EACZN,KAAKO,QAAUA,EAEfP,KAAKQ,OAGT,OACIR,KAAKS,cAGT,cACIT,KAAKU,cAAgB,IAAIV,KAAKO,QAAQ,SAG1C,cAAcR,GACV,MAAMY,EAAO,IAAIX,KAAKM,KAAKP,GAC3BC,KAAKU,cAAcE,WAAWD,GAC9BE,QAAQC,IAAId,KAAKU,iBAIkB,GA5D3C,cAAmBZ,EACf,YAAYC,GACRgB,MAAMhB,GACNC,KAAKgB,UAAW,IAMxB,cAAsBlB,EAClB,YAAYC,GACRgB,MAAMhB,GACNC,KAAKiB,SAAW,GAChBjB,KAAKkB,QAAS,EAGlB,WAAWP,GACPX,KAAKiB,SAASE,KAAKR,GAGvB,WAAWA,GACP,MACMS,EAAapB,KAAKiB,SAASI,WADhBC,GAAiBA,EAAcrB,KAAOU,EAAKV,KAE5DD,KAAKiB,SAASM,OAAOH,EAAY,MAsCzChB,EAAgBoB,cAAc,SAC9BpB,EAAgBoB,cAAc,U","file":"main.js","sourcesContent":["class Item {\n    constructor(text) {\n        this.text = text;\n        this.id = Item.countInstances();\n    }\n    \n    static countInstances() {\n        Item.count = (Item.count || 0) + 1;\n        return Item.count;\n    }\n\n    //editItem\n}\n\nclass Task extends Item {\n    constructor(text) {\n        super(text);\n        this.favorite = false;\n    }\n    //Bei Erstellung muss es gleich richtiger ContextListe zugeordnet werden \n    // --> Ãœber TodoController\n}\n\nclass Context extends Item {\n    constructor(text) {\n        super(text);\n        this.taskList = [];\n        this.active = true;\n    }\n\n    appendTask(task) {\n        this.taskList.push(task);\n    }\n\n    removeTask(task) {\n        const isSameId = taskToCompare => taskToCompare.id === task.id;\n        const foundIndex = this.taskList.findIndex(isSameId);\n        this.taskList.splice(foundIndex, 1);\n    }\n}\n\nclass ActiveContext {\n    //array contextList\n    //object activeContext\n}\n\nclass TodoDisplay {\n\n}\n\nclass TodoController {\n    constructor(todoDisplay, Task, Context) {\n        this.todoDisplay = todoDisplay;\n        this.Task = Task;\n        this.Context = Context;\n\n        this.init();\n    }\n\n    init() {\n        this.loadContext();\n    }\n\n    loadContext() {\n        this.activeContext = new this.Context('inbox');\n    }\n    \n    createNewTask(text) {\n        const task = new this.Task(text);   \n        this.activeContext.appendTask(task);\n        console.log(this.activeContext);\n    }    \n}\n\nconst todoControlloer = new TodoController(\"\", Task, Context);\ntodoControlloer.createNewTask('taskA');\ntodoControlloer.createNewTask('taskB')\n"],"sourceRoot":""}