{"version":3,"sources":["webpack://todo/./src/index.js"],"names":["Item","text","this","id","countInstances","count","todoDisplay","Task","Context","init","loadContext","activeContext","console","log","super","favorite","taskList","active","task","push","foundIndex","findIndex","taskToCompare","splice"],"mappings":"MAAA,MAAMA,EACF,YAAYC,GACRC,KAAKD,KAAOA,EACZC,KAAKC,GAAKH,EAAKI,iBAGnB,wBAEI,OADAJ,EAAKK,OAASL,EAAKK,OAAS,GAAK,EAC1BL,EAAKK,OAkEI,IAxBxB,MACI,YAAYC,EAAaC,EAAMC,GAC3BN,KAAKI,YAAcA,EACnBJ,KAAKK,KAAOA,EACZL,KAAKM,QAAUA,EAEfN,KAAKO,OAQT,OACIP,KAAKQ,cAGT,cACIR,KAAKS,cAAgB,IAAIT,KAAKM,QAAQ,SACtCI,QAAQC,IAAIX,KAAKS,iBAIkB,GA5D3C,cAAmBX,EACf,YAAYC,GACRa,MAAMb,GACNC,KAAKa,UAAW,IAMxB,cAAsBf,EAClB,YAAYC,GACRa,MAAMb,GACNC,KAAKc,SAAW,GAChBd,KAAKe,QAAS,EAGlB,WAAWC,GACPhB,KAAKc,SAASG,KAAKD,GAGvB,WAAWA,GACP,MACME,EAAalB,KAAKc,SAASK,WADhBC,GAAiBA,EAAcnB,KAAOe,EAAKf,KAE5DD,KAAKc,SAASO,OAAOH,EAAY,O","file":"main.js","sourcesContent":["class Item {\n    constructor(text) {\n        this.text = text;\n        this.id = Item.countInstances();\n    }\n    \n    static countInstances() {\n        Item.count = (Item.count || 0) + 1;\n        return Item.count;\n    }\n\n    //editItem\n}\n\nclass Task extends Item {\n    constructor(text) {\n        super(text);\n        this.favorite = false;\n    }\n    //Bei Erstellung muss es gleich richtiger ContextListe zugeordnet werden \n    // --> Ãœber TodoController\n}\n\nclass Context extends Item {\n    constructor(text) {\n        super(text);\n        this.taskList = [];\n        this.active = true;\n    }\n\n    appendTask(task) {\n        this.taskList.push(task);\n    }\n\n    removeTask(task) {\n        const isSameId = taskToCompare => taskToCompare.id === task.id;\n        const foundIndex = this.taskList.findIndex(isSameId);\n        this.taskList.splice(foundIndex, 1);\n    }\n}\n\nclass ActiveContext {\n    //array contextList\n    //object activeContext\n}\n\nclass TodoDisplay {\n\n}\n\nclass TodoController {\n    constructor(todoDisplay, Task, Context) {\n        this.todoDisplay = todoDisplay;\n        this.Task = Task;\n        this.Context = Context;\n\n        this.init();\n    }\n    \n    //under construction\n    // createNewTask(text) {\n    //     const task = new this.Task(text);   \n    // }\n\n    init() {\n        this.loadContext();\n    }\n\n    loadContext() {\n        this.activeContext = new this.Context('inbox');\n        console.log(this.activeContext);\n    }\n}\n\nconst todoControlloer = new TodoController(\"\", Task, Context);\n// todoControlloer.createNewTask('taskA')"],"sourceRoot":""}