{"version":3,"sources":["webpack://todo/./node_modules/regenerator-runtime/runtime.js","webpack://todo/webpack/bootstrap","webpack://todo/webpack/runtime/global","webpack://todo/./src/item.js","webpack://todo/./src/task.js","webpack://todo/./node_modules/@firebase/component/node_modules/tslib/tslib.es6.js","webpack://todo/./node_modules/@firebase/util/node_modules/tslib/tslib.es6.js","webpack://todo/./node_modules/@firebase/util/dist/index.esm.js","webpack://todo/./node_modules/@firebase/component/dist/index.esm.js","webpack://todo/./node_modules/@firebase/logger/dist/index.esm.js","webpack://todo/./node_modules/@firebase/app/dist/index.esm2017.js","webpack://todo/./node_modules/firebase/app/dist/index.esm.js","webpack://todo/./src/firebaseApp.js","webpack://todo/./node_modules/@firebase/firestore/dist/lite/index.browser.esm2017.js","webpack://todo/./src/context.js","webpack://todo/./src/contextList.js","webpack://todo/./src/todoDisplay.js","webpack://todo/./src/todoController.js"],"names":["runtime","exports","undefined","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","method","arg","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","GenStateSuspendedYield","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","resolve","reject","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","g","globalThis","e","window","Item","text","id","countInstances","count","Task","favorite","__values","o","s","m","__read","n","r","ar","__spreadArray","to","from","pack","arguments","l","Array","concat","d","b","p","Deferred","_this","promise","wrapCallback","callback","catch","FirebaseError","_super","code","message","customData","captureStackTrace","ErrorFactory","String","__","service","serviceName","errors","data","_i","fullCode","template","replaceTemplate","fullMessage","replace","PATTERN","_","deepEqual","a","aKeys","bKeys","aKeys_1","k","includes","aProp","bProp","isObject","_a","bKeys_1","thing","noop","Sha1","chain_","buf_","W_","pad_","inbuf_","total_","blockSize","compress_","buf","offset","W","charCodeAt","t","f","c","update","bytes","lengthMinusBlock","inbuf","digest","totalBits","j","ObserverProxy","executor","onNoObservers","observers","unsubscribes","observerCount","task","finalized","forEachObserver","observer","close","subscribe","nextOrObserver","methods","methods_1","implementsAnyMethods","unsub","unsubscribeOne","bind","finalError","sendOne","console","Component","instanceFactory","multipleInstances","serviceProps","instantiationMode","onInstanceCreated","setInstantiationMode","mode","setMultipleInstances","setServiceProps","props","setInstanceCreatedCallback","DEFAULT_ENTRY_NAME","Provider","container","component","instances","Map","instancesDeferred","instancesOptions","onInitCallbacks","get","identifier","normalizedIdentifier","normalizeInstanceIdentifier","has","deferred","set","isInitialized","shouldAutoInitialize","instance","getOrInitializeService","instanceIdentifier","getImmediate","options","optional","getComponent","setComponent","e_1","isComponentEager","_b","entries","_c","_d","instanceDeferred","e_1_1","return","clearInstance","delete","thisArg","_arguments","P","fulfilled","step","rejected","apply","__awaiter","services","body","y","label","trys","ops","verb","v","op","__generator","all","filter","map","INTERNAL","_delete","isComponentSet","getOptions","initialize","opts","e_2","_e","e_2_1","onInit","existingCallbacks","Set","add","existingInstance","invokeOnInitCallbacks","e_3","callbacks","callbacks_1","callbacks_1_1","e_3_1","ComponentContainer","providers","addComponent","provider","getProvider","addOrOverwriteComponent","getProviders","il","jl","LogLevel","levelStringToEnum","DEBUG","VERBOSE","INFO","WARN","ERROR","SILENT","defaultLogLevel","ConsoleMethod","defaultLogHandler","logType","args","logLevel","now","Date","toISOString","Logger","_logLevel","_logHandler","_userLogHandler","val","setLogLevel","debug","log","warn","PlatformLoggerServiceImpl","isVersionServiceProvider","library","version","logString","join","name$o","logger","PLATFORM_LOG_STRING","_apps","_components","_addComponent","app","_registerComponent","componentName","ERROR_FACTORY","FirebaseAppImpl","config","_isDeleted","_options","assign","_config","_name","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","_container","checkDestroyed","isDeleted","appName","registerVersion","libraryKeyOrName","variant","libraryMismatch","match","versionMismatch","warning","rawConfig","existingApp","newApp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","uid","isAuthenticated","UNAUTHENTICATED","GOOGLE_CREDENTIALS","FIRST_PARTY","MOCK_USER","JSON","stringify","T","A","D","F","x","U","super","user","authHeaders","Authorization","M","enqueueRetryable","Q","auth","getToken","accessToken","getUid","z","getAuthHeaderValueForFirstParty","G","u","databaseId","persistenceKey","host","ssl","forceLongPolling","autoDetectLongPolling","useFetchStreams","H","database","Y","segments","len","comparator","limit","construct","Math","min","K","toArray","canonicalString","indexOf","split","J","Z","test","isValidIdentifier","X","path","fromString","popFirst","et","isDocumentKey","st","_delegate","substring","exec","rt","ot","ut","ct","BatchGetDocuments","Commit","RunQuery","at","ht","lt","OK","CANCELLED","UNKNOWN","INVALID_ARGUMENT","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","UNAVAILABLE","DATA_LOSS","ft","databaseInfo","h","I","headers","status","statusText","ok","json","mt","yt","seconds","nanoseconds","fromMillis","getTime","floor","toMillis","padStart","_t","timestamp","_compareTo","isEqual","gt","bt","Et","binaryString","atob","fromCharCode","btoa","Uint8Array","EMPTY_BYTE_STRING","It","RegExp","Tt","substr","Number","nanos","At","Pt","fromBase64String","fromUint8Array","Rt","mapValue","fields","__type__","stringValue","Vt","__previous_value__","Nt","__local_write_time__","timestampValue","Dt","$t","booleanValue","bytesValue","referenceValue","geoPointValue","latitude","longitude","integerValue","doubleValue","every","pt","arrayValue","Ct","Lt","Ut","jt","kt","isEmpty","lastSegment","getFieldsMap","popLast","emptyPath","isImmediateParentOf","applyChanges","field","Mt","documentType","documentState","empty","hasLocalMutations","hasCommittedMutations","clone","Bt","collectionGroup","orderBy","filters","startAt","endAt","Qt","tn","position","before","nn","dir","sn","explicitOrderBy","limitType","$","on","hn","N","cn","un","isKeyField","keyField","Pn","asc","desc","Rn","in","Vn","On","child","Sn","Mn","Bn","Qn","zn","fieldPath","Gn","Kn","credentials","S","invalidateToken","Xn","structuredQuery","parent","collectionId","allDescendants","unaryFilter","fieldFilter","compositeFilter","where","direction","kn","ln","document","xn","fromTimestamp","Fn","updateTime","newFoundDocument","te","ne","_terminated","fetch","_databaseId","_persistenceKey","_freezeSettings","experimentalForceLongPolling","experimentalAutoDetectLongPolling","Hn","_credentials","ee","ignoreUndefinedProperties","cacheSizeBytes","re","_settings","_settingsFrozen","_app","_terminateTask","client","sessionIndex","iamToken","_terminate","settings","terminate","ie","ce","converter","_key","firestore","he","ae","_query","_path","le","tt","pe","_internalPath","_byteString","toBase64","toUint8Array","be","isFinite","_lat","_long","Be","ze","He","_firestore","_userDataWriter","_document","_converter","fromFirestore","convertValue","search","Qe","Je","Ye","_docs","query","docs","_r","convertTimestamp","convertServerTimestamp","convertBytes","convertReference","convertGeoPoint","convertArray","convertObject","convertDocumentKey","br","_setSettings","db","getFirestore","active","getTasksfromDB","taskList","contextId","contextTasksCol","collection","getDocs","tasksSnapshot","tasks","doc","taskId","taskListIndex","getIndexOfTask","splice","taskIndexInList","parseInt","findIndex","currentTask","ContextList","list","getContextFromDB","contexts","activeDbContext","find","activeContext","init","addNewContext","setActiveContext","contextsCol","contextsSnapshot","contextListIndex","getIndexOfContext","contextIndexInList","currentContext","TodoDisplay","bodyElement","querySelector","contextContainer","getElementById","contextInput","contextButton","taskContainer","taskInput","taskButton","taskHeading","onClickAddContext","onClickDeleteItem","onClickChangeContext","onDclickEditContext","onEnterSaveInput","onClickOutsideSave","onClickAddTask","onMsDwnCopyTask","onMsUpAnalyzePosition","addEventListener","appendNewContext","highlightActiveContext","delBtn","createDelBtn","innerContent","createInnerContent","contextElement","createItemElement","appendChild","element","style","fontWeight","innerHTML","appendNewTask","taskElement","classList","className","para","createElement","dataset","itemid","onDclickEditItem","deleteButton","span","saveItemElements","maxLength","defineMaxLength","inputBox","createInputBox","createEditableElement","event","stopPropagation","addContextListeners","itemElements","firstChild","itemType","parentNode","inputBoxValue","textContent","remove","focus","removeAttribute","removeEventListener","elementWithHandler","taskElementCopy","createTaskCopy","moveTaskWithMouse","querySelectorAll","onMsOverHighlight","onMsOutNormal","changeUserSelect","opacity","temporarySavedTaskElement","cloneNode","width","display","mousePositionHorizontal","mousePositionVertical","top","left","removeTaskCopy","newHeading","innerText","node","userSelect","target","todoDisplay","initListeners","saveInput","loadStartPage","contextList","getActiveContext","createNewTask","getAllContexts","activeContextTasks","renderTasks","renderAllContexts","setContextHeading","preventDefault","userInput","getContextInputValue","createNewContext","resetContextInput","getTaskInputValue","resetTaskInput","appendTask","elementToDelete","getElementToDelete","itemToDeleteId","getItemId","getClassName","contains","deleteContext","removeTasks","deleteTask","removeElement","clickedContextElementId","clickedContext","getContext","prepareItemEdit","input","getEditInput","itemElement","getEditItem","itemId","contextIndex","taskIndex","updateDomAfterEdit","attachTaskToMouse","taskToMoveElement","taskToMoveId","taskToMove","getTask","chosenContextElementId","undoTaskMoveActions"],"mappings":"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","file":"main.js","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","// Class Item Is used by Task and Context to inherit properties and methods\nclass Item {\n  constructor(text) {\n    this.text = text\n    /* Give every new Item a unique id. Though it might be easier and better practice\n    to give unique id with Date.now() */\n    this.id = Item.countInstances()\n  }\n\n  static countInstances() {\n    Item.count = (Item.count || 0) + 1\n    return Item.count\n  }\n}\n\nexport { Item }\n","import { Item } from './item'\n\n// Class Task Creates unlimited task objects\nclass Task extends Item {\n  constructor(text) {\n    super(text)\n    this.favorite = false\n  }\n}\n\nexport { Task }\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { __assign, __extends } from 'tslib';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\r\n */\r\nvar CONSTANTS = {\r\n    /**\r\n     * @define {boolean} Whether this is the client Node.js SDK.\r\n     */\r\n    NODE_CLIENT: false,\r\n    /**\r\n     * @define {boolean} Whether this is the Admin Node.js SDK.\r\n     */\r\n    NODE_ADMIN: false,\r\n    /**\r\n     * Firebase SDK Version\r\n     */\r\n    SDK_VERSION: '${JSCORE_VERSION}'\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws an error if the provided assertion is falsy\r\n */\r\nvar assert = function (assertion, message) {\r\n    if (!assertion) {\r\n        throw assertionError(message);\r\n    }\r\n};\r\n/**\r\n * Returns an Error object suitable for throwing.\r\n */\r\nvar assertionError = function (message) {\r\n    return new Error('Firebase Database (' +\r\n        CONSTANTS.SDK_VERSION +\r\n        ') INTERNAL ASSERT FAILED: ' +\r\n        message);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar stringToByteArray$1 = function (str) {\r\n    // TODO(user): Use native implementations if/when available\r\n    var out = [];\r\n    var p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if ((c & 0xfc00) === 0xd800 &&\r\n            i + 1 < str.length &&\r\n            (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {\r\n            // Surrogate Pair\r\n            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Turns an array of numbers into the string given by the concatenation of the\r\n * characters to which the numbers correspond.\r\n * @param bytes Array of numbers representing characters.\r\n * @return Stringification of the array.\r\n */\r\nvar byteArrayToString = function (bytes) {\r\n    // TODO(user): Use native implementations if/when available\r\n    var out = [];\r\n    var pos = 0, c = 0;\r\n    while (pos < bytes.length) {\r\n        var c1 = bytes[pos++];\r\n        if (c1 < 128) {\r\n            out[c++] = String.fromCharCode(c1);\r\n        }\r\n        else if (c1 > 191 && c1 < 224) {\r\n            var c2 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\r\n        }\r\n        else if (c1 > 239 && c1 < 365) {\r\n            // Surrogate Pair\r\n            var c2 = bytes[pos++];\r\n            var c3 = bytes[pos++];\r\n            var c4 = bytes[pos++];\r\n            var u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\r\n                0x10000;\r\n            out[c++] = String.fromCharCode(0xd800 + (u >> 10));\r\n            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\r\n        }\r\n        else {\r\n            var c2 = bytes[pos++];\r\n            var c3 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n        }\r\n    }\r\n    return out.join('');\r\n};\r\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\r\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\r\n// Static lookup maps, lazily populated by init_()\r\nvar base64 = {\r\n    /**\r\n     * Maps bytes to characters.\r\n     */\r\n    byteToCharMap_: null,\r\n    /**\r\n     * Maps characters to bytes.\r\n     */\r\n    charToByteMap_: null,\r\n    /**\r\n     * Maps bytes to websafe characters.\r\n     * @private\r\n     */\r\n    byteToCharMapWebSafe_: null,\r\n    /**\r\n     * Maps websafe characters to bytes.\r\n     * @private\r\n     */\r\n    charToByteMapWebSafe_: null,\r\n    /**\r\n     * Our default alphabet, shared between\r\n     * ENCODED_VALS and ENCODED_VALS_WEBSAFE\r\n     */\r\n    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\r\n    /**\r\n     * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\r\n     */\r\n    get ENCODED_VALS() {\r\n        return this.ENCODED_VALS_BASE + '+/=';\r\n    },\r\n    /**\r\n     * Our websafe alphabet.\r\n     */\r\n    get ENCODED_VALS_WEBSAFE() {\r\n        return this.ENCODED_VALS_BASE + '-_.';\r\n    },\r\n    /**\r\n     * Whether this browser supports the atob and btoa functions. This extension\r\n     * started at Mozilla but is now implemented by many browsers. We use the\r\n     * ASSUME_* variables to avoid pulling in the full useragent detection library\r\n     * but still allowing the standard per-browser compilations.\r\n     *\r\n     */\r\n    HAS_NATIVE_SUPPORT: typeof atob === 'function',\r\n    /**\r\n     * Base64-encode an array of bytes.\r\n     *\r\n     * @param input An array of bytes (numbers with\r\n     *     value in [0, 255]) to encode.\r\n     * @param webSafe Boolean indicating we should use the\r\n     *     alternative alphabet.\r\n     * @return The base64 encoded string.\r\n     */\r\n    encodeByteArray: function (input, webSafe) {\r\n        if (!Array.isArray(input)) {\r\n            throw Error('encodeByteArray takes an array as a parameter');\r\n        }\r\n        this.init_();\r\n        var byteToCharMap = webSafe\r\n            ? this.byteToCharMapWebSafe_\r\n            : this.byteToCharMap_;\r\n        var output = [];\r\n        for (var i = 0; i < input.length; i += 3) {\r\n            var byte1 = input[i];\r\n            var haveByte2 = i + 1 < input.length;\r\n            var byte2 = haveByte2 ? input[i + 1] : 0;\r\n            var haveByte3 = i + 2 < input.length;\r\n            var byte3 = haveByte3 ? input[i + 2] : 0;\r\n            var outByte1 = byte1 >> 2;\r\n            var outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\r\n            var outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\r\n            var outByte4 = byte3 & 0x3f;\r\n            if (!haveByte3) {\r\n                outByte4 = 64;\r\n                if (!haveByte2) {\r\n                    outByte3 = 64;\r\n                }\r\n            }\r\n            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);\r\n        }\r\n        return output.join('');\r\n    },\r\n    /**\r\n     * Base64-encode a string.\r\n     *\r\n     * @param input A string to encode.\r\n     * @param webSafe If true, we should use the\r\n     *     alternative alphabet.\r\n     * @return The base64 encoded string.\r\n     */\r\n    encodeString: function (input, webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !webSafe) {\r\n            return btoa(input);\r\n        }\r\n        return this.encodeByteArray(stringToByteArray$1(input), webSafe);\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * @param input to decode.\r\n     * @param webSafe True if we should use the\r\n     *     alternative alphabet.\r\n     * @return string representing the decoded value.\r\n     */\r\n    decodeString: function (input, webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !webSafe) {\r\n            return atob(input);\r\n        }\r\n        return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * In base-64 decoding, groups of four characters are converted into three\r\n     * bytes.  If the encoder did not apply padding, the input length may not\r\n     * be a multiple of 4.\r\n     *\r\n     * In this case, the last group will have fewer than 4 characters, and\r\n     * padding will be inferred.  If the group has one or two characters, it decodes\r\n     * to one byte.  If the group has three characters, it decodes to two bytes.\r\n     *\r\n     * @param input Input to decode.\r\n     * @param webSafe True if we should use the web-safe alphabet.\r\n     * @return bytes representing the decoded value.\r\n     */\r\n    decodeStringToByteArray: function (input, webSafe) {\r\n        this.init_();\r\n        var charToByteMap = webSafe\r\n            ? this.charToByteMapWebSafe_\r\n            : this.charToByteMap_;\r\n        var output = [];\r\n        for (var i = 0; i < input.length;) {\r\n            var byte1 = charToByteMap[input.charAt(i++)];\r\n            var haveByte2 = i < input.length;\r\n            var byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\r\n            ++i;\r\n            var haveByte3 = i < input.length;\r\n            var byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            var haveByte4 = i < input.length;\r\n            var byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\r\n                throw Error();\r\n            }\r\n            var outByte1 = (byte1 << 2) | (byte2 >> 4);\r\n            output.push(outByte1);\r\n            if (byte3 !== 64) {\r\n                var outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\r\n                output.push(outByte2);\r\n                if (byte4 !== 64) {\r\n                    var outByte3 = ((byte3 << 6) & 0xc0) | byte4;\r\n                    output.push(outByte3);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    },\r\n    /**\r\n     * Lazy static initialization function. Called before\r\n     * accessing any of the static map variables.\r\n     * @private\r\n     */\r\n    init_: function () {\r\n        if (!this.byteToCharMap_) {\r\n            this.byteToCharMap_ = {};\r\n            this.charToByteMap_ = {};\r\n            this.byteToCharMapWebSafe_ = {};\r\n            this.charToByteMapWebSafe_ = {};\r\n            // We want quick mappings back and forth, so we precompute two maps.\r\n            for (var i = 0; i < this.ENCODED_VALS.length; i++) {\r\n                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\r\n                this.charToByteMap_[this.byteToCharMap_[i]] = i;\r\n                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\r\n                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\r\n                // Be forgiving when decoding and correctly decode both encodings.\r\n                if (i >= this.ENCODED_VALS_BASE.length) {\r\n                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\r\n                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n/**\r\n * URL-safe base64 encoding\r\n */\r\nvar base64Encode = function (str) {\r\n    var utf8Bytes = stringToByteArray$1(str);\r\n    return base64.encodeByteArray(utf8Bytes, true);\r\n};\r\n/**\r\n * URL-safe base64 encoding (without \".\" padding in the end).\r\n * e.g. Used in JSON Web Token (JWT) parts.\r\n */\r\nvar base64urlEncodeWithoutPadding = function (str) {\r\n    // Use base64url encoding and remove padding in the end (dot characters).\r\n    return base64Encode(str).replace(/\\./g, '');\r\n};\r\n/**\r\n * URL-safe base64 decoding\r\n *\r\n * NOTE: DO NOT use the global atob() function - it does NOT support the\r\n * base64Url variant encoding.\r\n *\r\n * @param str To be decoded\r\n * @return Decoded result, if possible\r\n */\r\nvar base64Decode = function (str) {\r\n    try {\r\n        return base64.decodeString(str, true);\r\n    }\r\n    catch (e) {\r\n        console.error('base64Decode failed: ', e);\r\n    }\r\n    return null;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Do a deep-copy of basic JavaScript Objects or Arrays.\r\n */\r\nfunction deepCopy(value) {\r\n    return deepExtend(undefined, value);\r\n}\r\n/**\r\n * Copy properties from source to target (recursively allows extension\r\n * of Objects and Arrays).  Scalar values in the target are over-written.\r\n * If target is undefined, an object of the appropriate type will be created\r\n * (and returned).\r\n *\r\n * We recursively copy all child properties of plain Objects in the source- so\r\n * that namespace- like dictionaries are merged.\r\n *\r\n * Note that the target can be a function, in which case the properties in\r\n * the source Object are copied onto it as static properties of the Function.\r\n *\r\n * Note: we don't merge __proto__ to prevent prototype pollution\r\n */\r\nfunction deepExtend(target, source) {\r\n    if (!(source instanceof Object)) {\r\n        return source;\r\n    }\r\n    switch (source.constructor) {\r\n        case Date:\r\n            // Treat Dates like scalars; if the target date object had any child\r\n            // properties - they will be lost!\r\n            var dateValue = source;\r\n            return new Date(dateValue.getTime());\r\n        case Object:\r\n            if (target === undefined) {\r\n                target = {};\r\n            }\r\n            break;\r\n        case Array:\r\n            // Always copy the array source and overwrite the target.\r\n            target = [];\r\n            break;\r\n        default:\r\n            // Not a plain Object - treat it as a scalar.\r\n            return source;\r\n    }\r\n    for (var prop in source) {\r\n        // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\r\n        if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {\r\n            continue;\r\n        }\r\n        target[prop] = deepExtend(target[prop], source[prop]);\r\n    }\r\n    return target;\r\n}\r\nfunction isValidKey(key) {\r\n    return key !== '__proto__';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Deferred = /** @class */ (function () {\r\n    function Deferred() {\r\n        var _this = this;\r\n        this.reject = function () { };\r\n        this.resolve = function () { };\r\n        this.promise = new Promise(function (resolve, reject) {\r\n            _this.resolve = resolve;\r\n            _this.reject = reject;\r\n        });\r\n    }\r\n    /**\r\n     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\r\n     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\r\n     * and returns a node-style callback which will resolve or reject the Deferred's promise.\r\n     */\r\n    Deferred.prototype.wrapCallback = function (callback) {\r\n        var _this = this;\r\n        return function (error, value) {\r\n            if (error) {\r\n                _this.reject(error);\r\n            }\r\n            else {\r\n                _this.resolve(value);\r\n            }\r\n            if (typeof callback === 'function') {\r\n                // Attaching noop handler just in case developer wasn't expecting\r\n                // promises\r\n                _this.promise.catch(function () { });\r\n                // Some of our callbacks don't expect a value and our own tests\r\n                // assert that the parameter length is 1\r\n                if (callback.length === 1) {\r\n                    callback(error);\r\n                }\r\n                else {\r\n                    callback(error, value);\r\n                }\r\n            }\r\n        };\r\n    };\r\n    return Deferred;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction createMockUserToken(token, projectId) {\r\n    if (token.uid) {\r\n        throw new Error('The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.');\r\n    }\r\n    // Unsecured JWTs use \"none\" as the algorithm.\r\n    var header = {\r\n        alg: 'none',\r\n        type: 'JWT'\r\n    };\r\n    var project = projectId || 'demo-project';\r\n    var iat = token.iat || 0;\r\n    var sub = token.sub || token.user_id;\r\n    if (!sub) {\r\n        throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\r\n    }\r\n    var payload = __assign({ \r\n        // Set all required fields to decent defaults\r\n        iss: \"https://securetoken.google.com/\" + project, aud: project, iat: iat, exp: iat + 3600, auth_time: iat, sub: sub, user_id: sub, firebase: {\r\n            sign_in_provider: 'custom',\r\n            identities: {}\r\n        } }, token);\r\n    // Unsecured JWTs use the empty string as a signature.\r\n    var signature = '';\r\n    return [\r\n        base64urlEncodeWithoutPadding(JSON.stringify(header)),\r\n        base64urlEncodeWithoutPadding(JSON.stringify(payload)),\r\n        signature\r\n    ].join('.');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns navigator.userAgent string or '' if it's not defined.\r\n * @return user agent string\r\n */\r\nfunction getUA() {\r\n    if (typeof navigator !== 'undefined' &&\r\n        typeof navigator['userAgent'] === 'string') {\r\n        return navigator['userAgent'];\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n}\r\n/**\r\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\r\n *\r\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\r\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\r\n * wait for a callback.\r\n */\r\nfunction isMobileCordova() {\r\n    return (typeof window !== 'undefined' &&\r\n        // @ts-ignore Setting up an broadly applicable index signature for Window\r\n        // just to deal with this case would probably be a bad idea.\r\n        !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\r\n        /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA()));\r\n}\r\n/**\r\n * Detect Node.js.\r\n *\r\n * @return true if Node.js environment is detected.\r\n */\r\n// Node detection logic from: https://github.com/iliakan/detect-node/\r\nfunction isNode() {\r\n    try {\r\n        return (Object.prototype.toString.call(global.process) === '[object process]');\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Detect Browser Environment\r\n */\r\nfunction isBrowser() {\r\n    return typeof self === 'object' && self.self === self;\r\n}\r\nfunction isBrowserExtension() {\r\n    var runtime = typeof chrome === 'object'\r\n        ? chrome.runtime\r\n        : typeof browser === 'object'\r\n            ? browser.runtime\r\n            : undefined;\r\n    return typeof runtime === 'object' && runtime.id !== undefined;\r\n}\r\n/**\r\n * Detect React Native.\r\n *\r\n * @return true if ReactNative environment is detected.\r\n */\r\nfunction isReactNative() {\r\n    return (typeof navigator === 'object' && navigator['product'] === 'ReactNative');\r\n}\r\n/** Detects Electron apps. */\r\nfunction isElectron() {\r\n    return getUA().indexOf('Electron/') >= 0;\r\n}\r\n/** Detects Internet Explorer. */\r\nfunction isIE() {\r\n    var ua = getUA();\r\n    return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\r\n}\r\n/** Detects Universal Windows Platform apps. */\r\nfunction isUWP() {\r\n    return getUA().indexOf('MSAppHost/') >= 0;\r\n}\r\n/**\r\n * Detect whether the current SDK build is the Node version.\r\n *\r\n * @return true if it's the Node SDK build.\r\n */\r\nfunction isNodeSdk() {\r\n    return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\r\n}\r\n/** Returns true if we are running in Safari. */\r\nfunction isSafari() {\r\n    return (!isNode() &&\r\n        navigator.userAgent.includes('Safari') &&\r\n        !navigator.userAgent.includes('Chrome'));\r\n}\r\n/**\r\n * This method checks if indexedDB is supported by current browser/service worker context\r\n * @return true if indexedDB is supported by current browser/service worker context\r\n */\r\nfunction isIndexedDBAvailable() {\r\n    return 'indexedDB' in self && indexedDB != null;\r\n}\r\n/**\r\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\r\n * if errors occur during the database open operation.\r\n *\r\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\r\n * private browsing)\r\n */\r\nfunction validateIndexedDBOpenable() {\r\n    return new Promise(function (resolve, reject) {\r\n        try {\r\n            var preExist_1 = true;\r\n            var DB_CHECK_NAME_1 = 'validate-browser-context-for-indexeddb-analytics-module';\r\n            var request_1 = self.indexedDB.open(DB_CHECK_NAME_1);\r\n            request_1.onsuccess = function () {\r\n                request_1.result.close();\r\n                // delete database only when it doesn't pre-exist\r\n                if (!preExist_1) {\r\n                    self.indexedDB.deleteDatabase(DB_CHECK_NAME_1);\r\n                }\r\n                resolve(true);\r\n            };\r\n            request_1.onupgradeneeded = function () {\r\n                preExist_1 = false;\r\n            };\r\n            request_1.onerror = function () {\r\n                var _a;\r\n                reject(((_a = request_1.error) === null || _a === void 0 ? void 0 : _a.message) || '');\r\n            };\r\n        }\r\n        catch (error) {\r\n            reject(error);\r\n        }\r\n    });\r\n}\r\n/**\r\n *\r\n * This method checks whether cookie is enabled within current browser\r\n * @return true if cookie is enabled within current browser\r\n */\r\nfunction areCookiesEnabled() {\r\n    if (!navigator || !navigator.cookieEnabled) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Polyfill for `globalThis` object.\r\n * @returns the `globalThis` object for the given environment.\r\n */\r\nfunction getGlobal() {\r\n    if (typeof self !== 'undefined') {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined') {\r\n        return window;\r\n    }\r\n    if (typeof global !== 'undefined') {\r\n        return global;\r\n    }\r\n    throw new Error('Unable to locate global object.');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ERROR_NAME = 'FirebaseError';\r\n// Based on code from:\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\r\nvar FirebaseError = /** @class */ (function (_super) {\r\n    __extends(FirebaseError, _super);\r\n    function FirebaseError(code, message, customData) {\r\n        var _this = _super.call(this, message) || this;\r\n        _this.code = code;\r\n        _this.customData = customData;\r\n        _this.name = ERROR_NAME;\r\n        // Fix For ES5\r\n        // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\r\n        Object.setPrototypeOf(_this, FirebaseError.prototype);\r\n        // Maintains proper stack trace for where our error was thrown.\r\n        // Only available on V8.\r\n        if (Error.captureStackTrace) {\r\n            Error.captureStackTrace(_this, ErrorFactory.prototype.create);\r\n        }\r\n        return _this;\r\n    }\r\n    return FirebaseError;\r\n}(Error));\r\nvar ErrorFactory = /** @class */ (function () {\r\n    function ErrorFactory(service, serviceName, errors) {\r\n        this.service = service;\r\n        this.serviceName = serviceName;\r\n        this.errors = errors;\r\n    }\r\n    ErrorFactory.prototype.create = function (code) {\r\n        var data = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            data[_i - 1] = arguments[_i];\r\n        }\r\n        var customData = data[0] || {};\r\n        var fullCode = this.service + \"/\" + code;\r\n        var template = this.errors[code];\r\n        var message = template ? replaceTemplate(template, customData) : 'Error';\r\n        // Service Name: Error message (service/code).\r\n        var fullMessage = this.serviceName + \": \" + message + \" (\" + fullCode + \").\";\r\n        var error = new FirebaseError(fullCode, fullMessage, customData);\r\n        return error;\r\n    };\r\n    return ErrorFactory;\r\n}());\r\nfunction replaceTemplate(template, data) {\r\n    return template.replace(PATTERN, function (_, key) {\r\n        var value = data[key];\r\n        return value != null ? String(value) : \"<\" + key + \"?>\";\r\n    });\r\n}\r\nvar PATTERN = /\\{\\$([^}]+)}/g;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Evaluates a JSON string into a javascript object.\r\n *\r\n * @param {string} str A string containing JSON.\r\n * @return {*} The javascript object representing the specified JSON.\r\n */\r\nfunction jsonEval(str) {\r\n    return JSON.parse(str);\r\n}\r\n/**\r\n * Returns JSON representing a javascript object.\r\n * @param {*} data Javascript object to be stringified.\r\n * @return {string} The JSON contents of the object.\r\n */\r\nfunction stringify(data) {\r\n    return JSON.stringify(data);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Decodes a Firebase auth. token into constituent parts.\r\n *\r\n * Notes:\r\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nvar decode = function (token) {\r\n    var header = {}, claims = {}, data = {}, signature = '';\r\n    try {\r\n        var parts = token.split('.');\r\n        header = jsonEval(base64Decode(parts[0]) || '');\r\n        claims = jsonEval(base64Decode(parts[1]) || '');\r\n        signature = parts[2];\r\n        data = claims['d'] || {};\r\n        delete claims['d'];\r\n    }\r\n    catch (e) { }\r\n    return {\r\n        header: header,\r\n        claims: claims,\r\n        data: data,\r\n        signature: signature\r\n    };\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\r\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nvar isValidTimestamp = function (token) {\r\n    var claims = decode(token).claims;\r\n    var now = Math.floor(new Date().getTime() / 1000);\r\n    var validSince = 0, validUntil = 0;\r\n    if (typeof claims === 'object') {\r\n        if (claims.hasOwnProperty('nbf')) {\r\n            validSince = claims['nbf'];\r\n        }\r\n        else if (claims.hasOwnProperty('iat')) {\r\n            validSince = claims['iat'];\r\n        }\r\n        if (claims.hasOwnProperty('exp')) {\r\n            validUntil = claims['exp'];\r\n        }\r\n        else {\r\n            // token will expire after 24h by default\r\n            validUntil = validSince + 86400;\r\n        }\r\n    }\r\n    return (!!now &&\r\n        !!validSince &&\r\n        !!validUntil &&\r\n        now >= validSince &&\r\n        now <= validUntil);\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\r\n *\r\n * Notes:\r\n * - May return null if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nvar issuedAtTime = function (token) {\r\n    var claims = decode(token).claims;\r\n    if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\r\n        return claims['iat'];\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nvar isValidFormat = function (token) {\r\n    var decoded = decode(token), claims = decoded.claims;\r\n    return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\r\n};\r\n/**\r\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nvar isAdmin = function (token) {\r\n    var claims = decode(token).claims;\r\n    return typeof claims === 'object' && claims['admin'] === true;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction contains(obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n}\r\nfunction safeGet(obj, key) {\r\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\nfunction isEmpty(obj) {\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction map(obj, fn, contextObj) {\r\n    var res = {};\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            res[key] = fn.call(contextObj, obj[key], key, obj);\r\n        }\r\n    }\r\n    return res;\r\n}\r\n/**\r\n * Deep equal two objects. Support Arrays and Objects.\r\n */\r\nfunction deepEqual(a, b) {\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n    var aKeys = Object.keys(a);\r\n    var bKeys = Object.keys(b);\r\n    for (var _i = 0, aKeys_1 = aKeys; _i < aKeys_1.length; _i++) {\r\n        var k = aKeys_1[_i];\r\n        if (!bKeys.includes(k)) {\r\n            return false;\r\n        }\r\n        var aProp = a[k];\r\n        var bProp = b[k];\r\n        if (isObject(aProp) && isObject(bProp)) {\r\n            if (!deepEqual(aProp, bProp)) {\r\n                return false;\r\n            }\r\n        }\r\n        else if (aProp !== bProp) {\r\n            return false;\r\n        }\r\n    }\r\n    for (var _a = 0, bKeys_1 = bKeys; _a < bKeys_1.length; _a++) {\r\n        var k = bKeys_1[_a];\r\n        if (!aKeys.includes(k)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction isObject(thing) {\r\n    return thing !== null && typeof thing === 'object';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\r\n * params object (e.g. {arg: 'val', arg2: 'val2'})\r\n * Note: You must prepend it with ? when adding it to a URL.\r\n */\r\nfunction querystring(querystringParams) {\r\n    var params = [];\r\n    var _loop_1 = function (key, value) {\r\n        if (Array.isArray(value)) {\r\n            value.forEach(function (arrayVal) {\r\n                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));\r\n            });\r\n        }\r\n        else {\r\n            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n        }\r\n    };\r\n    for (var _i = 0, _a = Object.entries(querystringParams); _i < _a.length; _i++) {\r\n        var _b = _a[_i], key = _b[0], value = _b[1];\r\n        _loop_1(key, value);\r\n    }\r\n    return params.length ? '&' + params.join('&') : '';\r\n}\r\n/**\r\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\r\n * (e.g. {arg: 'val', arg2: 'val2'})\r\n */\r\nfunction querystringDecode(querystring) {\r\n    var obj = {};\r\n    var tokens = querystring.replace(/^\\?/, '').split('&');\r\n    tokens.forEach(function (token) {\r\n        if (token) {\r\n            var _a = token.split('='), key = _a[0], value = _a[1];\r\n            obj[decodeURIComponent(key)] = decodeURIComponent(value);\r\n        }\r\n    });\r\n    return obj;\r\n}\r\n/**\r\n * Extract the query string part of a URL, including the leading question mark (if present).\r\n */\r\nfunction extractQuerystring(url) {\r\n    var queryStart = url.indexOf('?');\r\n    if (!queryStart) {\r\n        return '';\r\n    }\r\n    var fragmentStart = url.indexOf('#', queryStart);\r\n    return url.substring(queryStart, fragmentStart > 0 ? fragmentStart : undefined);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview SHA-1 cryptographic hash.\r\n * Variable names follow the notation in FIPS PUB 180-3:\r\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\r\n *\r\n * Usage:\r\n *   var sha1 = new sha1();\r\n *   sha1.update(bytes);\r\n *   var hash = sha1.digest();\r\n *\r\n * Performance:\r\n *   Chrome 23:   ~400 Mbit/s\r\n *   Firefox 16:  ~250 Mbit/s\r\n *\r\n */\r\n/**\r\n * SHA-1 cryptographic hash constructor.\r\n *\r\n * The properties declared here are discussed in the above algorithm document.\r\n * @constructor\r\n * @final\r\n * @struct\r\n */\r\nvar Sha1 = /** @class */ (function () {\r\n    function Sha1() {\r\n        /**\r\n         * Holds the previous values of accumulated variables a-e in the compress_\r\n         * function.\r\n         * @private\r\n         */\r\n        this.chain_ = [];\r\n        /**\r\n         * A buffer holding the partially computed hash result.\r\n         * @private\r\n         */\r\n        this.buf_ = [];\r\n        /**\r\n         * An array of 80 bytes, each a part of the message to be hashed.  Referred to\r\n         * as the message schedule in the docs.\r\n         * @private\r\n         */\r\n        this.W_ = [];\r\n        /**\r\n         * Contains data needed to pad messages less than 64 bytes.\r\n         * @private\r\n         */\r\n        this.pad_ = [];\r\n        /**\r\n         * @private {number}\r\n         */\r\n        this.inbuf_ = 0;\r\n        /**\r\n         * @private {number}\r\n         */\r\n        this.total_ = 0;\r\n        this.blockSize = 512 / 8;\r\n        this.pad_[0] = 128;\r\n        for (var i = 1; i < this.blockSize; ++i) {\r\n            this.pad_[i] = 0;\r\n        }\r\n        this.reset();\r\n    }\r\n    Sha1.prototype.reset = function () {\r\n        this.chain_[0] = 0x67452301;\r\n        this.chain_[1] = 0xefcdab89;\r\n        this.chain_[2] = 0x98badcfe;\r\n        this.chain_[3] = 0x10325476;\r\n        this.chain_[4] = 0xc3d2e1f0;\r\n        this.inbuf_ = 0;\r\n        this.total_ = 0;\r\n    };\r\n    /**\r\n     * Internal compress helper function.\r\n     * @param buf Block to compress.\r\n     * @param offset Offset of the block in the buffer.\r\n     * @private\r\n     */\r\n    Sha1.prototype.compress_ = function (buf, offset) {\r\n        if (!offset) {\r\n            offset = 0;\r\n        }\r\n        var W = this.W_;\r\n        // get 16 big endian words\r\n        if (typeof buf === 'string') {\r\n            for (var i = 0; i < 16; i++) {\r\n                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\r\n                // have a bug that turns the post-increment ++ operator into pre-increment\r\n                // during JIT compilation.  We have code that depends heavily on SHA-1 for\r\n                // correctness and which is affected by this bug, so I've removed all uses\r\n                // of post-increment ++ in which the result value is used.  We can revert\r\n                // this change once the Safari bug\r\n                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\r\n                // most clients have been updated.\r\n                W[i] =\r\n                    (buf.charCodeAt(offset) << 24) |\r\n                        (buf.charCodeAt(offset + 1) << 16) |\r\n                        (buf.charCodeAt(offset + 2) << 8) |\r\n                        buf.charCodeAt(offset + 3);\r\n                offset += 4;\r\n            }\r\n        }\r\n        else {\r\n            for (var i = 0; i < 16; i++) {\r\n                W[i] =\r\n                    (buf[offset] << 24) |\r\n                        (buf[offset + 1] << 16) |\r\n                        (buf[offset + 2] << 8) |\r\n                        buf[offset + 3];\r\n                offset += 4;\r\n            }\r\n        }\r\n        // expand to 80 words\r\n        for (var i = 16; i < 80; i++) {\r\n            var t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\r\n            W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\r\n        }\r\n        var a = this.chain_[0];\r\n        var b = this.chain_[1];\r\n        var c = this.chain_[2];\r\n        var d = this.chain_[3];\r\n        var e = this.chain_[4];\r\n        var f, k;\r\n        // TODO(user): Try to unroll this loop to speed up the computation.\r\n        for (var i = 0; i < 80; i++) {\r\n            if (i < 40) {\r\n                if (i < 20) {\r\n                    f = d ^ (b & (c ^ d));\r\n                    k = 0x5a827999;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0x6ed9eba1;\r\n                }\r\n            }\r\n            else {\r\n                if (i < 60) {\r\n                    f = (b & c) | (d & (b | c));\r\n                    k = 0x8f1bbcdc;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0xca62c1d6;\r\n                }\r\n            }\r\n            var t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\r\n            e = d;\r\n            d = c;\r\n            c = ((b << 30) | (b >>> 2)) & 0xffffffff;\r\n            b = a;\r\n            a = t;\r\n        }\r\n        this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\r\n        this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\r\n        this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\r\n        this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\r\n        this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\r\n    };\r\n    Sha1.prototype.update = function (bytes, length) {\r\n        // TODO(johnlenz): tighten the function signature and remove this check\r\n        if (bytes == null) {\r\n            return;\r\n        }\r\n        if (length === undefined) {\r\n            length = bytes.length;\r\n        }\r\n        var lengthMinusBlock = length - this.blockSize;\r\n        var n = 0;\r\n        // Using local instead of member variables gives ~5% speedup on Firefox 16.\r\n        var buf = this.buf_;\r\n        var inbuf = this.inbuf_;\r\n        // The outer while loop should execute at most twice.\r\n        while (n < length) {\r\n            // When we have no data in the block to top up, we can directly process the\r\n            // input buffer (assuming it contains sufficient data). This gives ~25%\r\n            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\r\n            // the data is provided in large chunks (or in multiples of 64 bytes).\r\n            if (inbuf === 0) {\r\n                while (n <= lengthMinusBlock) {\r\n                    this.compress_(bytes, n);\r\n                    n += this.blockSize;\r\n                }\r\n            }\r\n            if (typeof bytes === 'string') {\r\n                while (n < length) {\r\n                    buf[inbuf] = bytes.charCodeAt(n);\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf === this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                while (n < length) {\r\n                    buf[inbuf] = bytes[n];\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf === this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.inbuf_ = inbuf;\r\n        this.total_ += length;\r\n    };\r\n    /** @override */\r\n    Sha1.prototype.digest = function () {\r\n        var digest = [];\r\n        var totalBits = this.total_ * 8;\r\n        // Add pad 0x80 0x00*.\r\n        if (this.inbuf_ < 56) {\r\n            this.update(this.pad_, 56 - this.inbuf_);\r\n        }\r\n        else {\r\n            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\r\n        }\r\n        // Add # bits.\r\n        for (var i = this.blockSize - 1; i >= 56; i--) {\r\n            this.buf_[i] = totalBits & 255;\r\n            totalBits /= 256; // Don't use bit-shifting here!\r\n        }\r\n        this.compress_(this.buf_);\r\n        var n = 0;\r\n        for (var i = 0; i < 5; i++) {\r\n            for (var j = 24; j >= 0; j -= 8) {\r\n                digest[n] = (this.chain_[i] >> j) & 255;\r\n                ++n;\r\n            }\r\n        }\r\n        return digest;\r\n    };\r\n    return Sha1;\r\n}());\n\n/**\r\n * Helper to make a Subscribe function (just like Promise helps make a\r\n * Thenable).\r\n *\r\n * @param executor Function which can make calls to a single Observer\r\n *     as a proxy.\r\n * @param onNoObservers Callback when count of Observers goes to zero.\r\n */\r\nfunction createSubscribe(executor, onNoObservers) {\r\n    var proxy = new ObserverProxy(executor, onNoObservers);\r\n    return proxy.subscribe.bind(proxy);\r\n}\r\n/**\r\n * Implement fan-out for any number of Observers attached via a subscribe\r\n * function.\r\n */\r\nvar ObserverProxy = /** @class */ (function () {\r\n    /**\r\n     * @param executor Function which can make calls to a single Observer\r\n     *     as a proxy.\r\n     * @param onNoObservers Callback when count of Observers goes to zero.\r\n     */\r\n    function ObserverProxy(executor, onNoObservers) {\r\n        var _this = this;\r\n        this.observers = [];\r\n        this.unsubscribes = [];\r\n        this.observerCount = 0;\r\n        // Micro-task scheduling by calling task.then().\r\n        this.task = Promise.resolve();\r\n        this.finalized = false;\r\n        this.onNoObservers = onNoObservers;\r\n        // Call the executor asynchronously so subscribers that are called\r\n        // synchronously after the creation of the subscribe function\r\n        // can still receive the very first value generated in the executor.\r\n        this.task\r\n            .then(function () {\r\n            executor(_this);\r\n        })\r\n            .catch(function (e) {\r\n            _this.error(e);\r\n        });\r\n    }\r\n    ObserverProxy.prototype.next = function (value) {\r\n        this.forEachObserver(function (observer) {\r\n            observer.next(value);\r\n        });\r\n    };\r\n    ObserverProxy.prototype.error = function (error) {\r\n        this.forEachObserver(function (observer) {\r\n            observer.error(error);\r\n        });\r\n        this.close(error);\r\n    };\r\n    ObserverProxy.prototype.complete = function () {\r\n        this.forEachObserver(function (observer) {\r\n            observer.complete();\r\n        });\r\n        this.close();\r\n    };\r\n    /**\r\n     * Subscribe function that can be used to add an Observer to the fan-out list.\r\n     *\r\n     * - We require that no event is sent to a subscriber sychronously to their\r\n     *   call to subscribe().\r\n     */\r\n    ObserverProxy.prototype.subscribe = function (nextOrObserver, error, complete) {\r\n        var _this = this;\r\n        var observer;\r\n        if (nextOrObserver === undefined &&\r\n            error === undefined &&\r\n            complete === undefined) {\r\n            throw new Error('Missing Observer.');\r\n        }\r\n        // Assemble an Observer object when passed as callback functions.\r\n        if (implementsAnyMethods(nextOrObserver, [\r\n            'next',\r\n            'error',\r\n            'complete'\r\n        ])) {\r\n            observer = nextOrObserver;\r\n        }\r\n        else {\r\n            observer = {\r\n                next: nextOrObserver,\r\n                error: error,\r\n                complete: complete\r\n            };\r\n        }\r\n        if (observer.next === undefined) {\r\n            observer.next = noop;\r\n        }\r\n        if (observer.error === undefined) {\r\n            observer.error = noop;\r\n        }\r\n        if (observer.complete === undefined) {\r\n            observer.complete = noop;\r\n        }\r\n        var unsub = this.unsubscribeOne.bind(this, this.observers.length);\r\n        // Attempt to subscribe to a terminated Observable - we\r\n        // just respond to the Observer with the final error or complete\r\n        // event.\r\n        if (this.finalized) {\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            this.task.then(function () {\r\n                try {\r\n                    if (_this.finalError) {\r\n                        observer.error(_this.finalError);\r\n                    }\r\n                    else {\r\n                        observer.complete();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // nothing\r\n                }\r\n                return;\r\n            });\r\n        }\r\n        this.observers.push(observer);\r\n        return unsub;\r\n    };\r\n    // Unsubscribe is synchronous - we guarantee that no events are sent to\r\n    // any unsubscribed Observer.\r\n    ObserverProxy.prototype.unsubscribeOne = function (i) {\r\n        if (this.observers === undefined || this.observers[i] === undefined) {\r\n            return;\r\n        }\r\n        delete this.observers[i];\r\n        this.observerCount -= 1;\r\n        if (this.observerCount === 0 && this.onNoObservers !== undefined) {\r\n            this.onNoObservers(this);\r\n        }\r\n    };\r\n    ObserverProxy.prototype.forEachObserver = function (fn) {\r\n        if (this.finalized) {\r\n            // Already closed by previous event....just eat the additional values.\r\n            return;\r\n        }\r\n        // Since sendOne calls asynchronously - there is no chance that\r\n        // this.observers will become undefined.\r\n        for (var i = 0; i < this.observers.length; i++) {\r\n            this.sendOne(i, fn);\r\n        }\r\n    };\r\n    // Call the Observer via one of it's callback function. We are careful to\r\n    // confirm that the observe has not been unsubscribed since this asynchronous\r\n    // function had been queued.\r\n    ObserverProxy.prototype.sendOne = function (i, fn) {\r\n        var _this = this;\r\n        // Execute the callback asynchronously\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.task.then(function () {\r\n            if (_this.observers !== undefined && _this.observers[i] !== undefined) {\r\n                try {\r\n                    fn(_this.observers[i]);\r\n                }\r\n                catch (e) {\r\n                    // Ignore exceptions raised in Observers or missing methods of an\r\n                    // Observer.\r\n                    // Log error to console. b/31404806\r\n                    if (typeof console !== 'undefined' && console.error) {\r\n                        console.error(e);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n    ObserverProxy.prototype.close = function (err) {\r\n        var _this = this;\r\n        if (this.finalized) {\r\n            return;\r\n        }\r\n        this.finalized = true;\r\n        if (err !== undefined) {\r\n            this.finalError = err;\r\n        }\r\n        // Proxy is no longer needed - garbage collect references\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.task.then(function () {\r\n            _this.observers = undefined;\r\n            _this.onNoObservers = undefined;\r\n        });\r\n    };\r\n    return ObserverProxy;\r\n}());\r\n/** Turn synchronous function into one called asynchronously. */\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction async(fn, onError) {\r\n    return function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        Promise.resolve(true)\r\n            .then(function () {\r\n            fn.apply(void 0, args);\r\n        })\r\n            .catch(function (error) {\r\n            if (onError) {\r\n                onError(error);\r\n            }\r\n        });\r\n    };\r\n}\r\n/**\r\n * Return true if the object passed in implements any of the named methods.\r\n */\r\nfunction implementsAnyMethods(obj, methods) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return false;\r\n    }\r\n    for (var _i = 0, methods_1 = methods; _i < methods_1.length; _i++) {\r\n        var method = methods_1[_i];\r\n        if (method in obj && typeof obj[method] === 'function') {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction noop() {\r\n    // do nothing\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Check to make sure the appropriate number of arguments are provided for a public function.\r\n * Throws an error if it fails.\r\n *\r\n * @param fnName The function name\r\n * @param minCount The minimum number of arguments to allow for the function call\r\n * @param maxCount The maximum number of argument to allow for the function call\r\n * @param argCount The actual number of arguments provided.\r\n */\r\nvar validateArgCount = function (fnName, minCount, maxCount, argCount) {\r\n    var argError;\r\n    if (argCount < minCount) {\r\n        argError = 'at least ' + minCount;\r\n    }\r\n    else if (argCount > maxCount) {\r\n        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\r\n    }\r\n    if (argError) {\r\n        var error = fnName +\r\n            ' failed: Was called with ' +\r\n            argCount +\r\n            (argCount === 1 ? ' argument.' : ' arguments.') +\r\n            ' Expects ' +\r\n            argError +\r\n            '.';\r\n        throw new Error(error);\r\n    }\r\n};\r\n/**\r\n * Generates a string to prefix an error message about failed argument validation\r\n *\r\n * @param fnName The function name\r\n * @param argName The name of the argument\r\n * @return The prefix to add to the error thrown for validation.\r\n */\r\nfunction errorPrefix(fnName, argName) {\r\n    return fnName + \" failed: \" + argName + \" argument \";\r\n}\r\n/**\r\n * @param fnName\r\n * @param argumentNumber\r\n * @param namespace\r\n * @param optional\r\n */\r\nfunction validateNamespace(fnName, namespace, optional) {\r\n    if (optional && !namespace) {\r\n        return;\r\n    }\r\n    if (typeof namespace !== 'string') {\r\n        //TODO: I should do more validation here. We only allow certain chars in namespaces.\r\n        throw new Error(errorPrefix(fnName, 'namespace') + 'must be a valid firebase namespace.');\r\n    }\r\n}\r\nfunction validateCallback(fnName, argumentName, \r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\ncallback, optional) {\r\n    if (optional && !callback) {\r\n        return;\r\n    }\r\n    if (typeof callback !== 'function') {\r\n        throw new Error(errorPrefix(fnName, argumentName) + 'must be a valid function.');\r\n    }\r\n}\r\nfunction validateContextObject(fnName, argumentName, context, optional) {\r\n    if (optional && !context) {\r\n        return;\r\n    }\r\n    if (typeof context !== 'object' || context === null) {\r\n        throw new Error(errorPrefix(fnName, argumentName) + 'must be a valid context object.');\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\r\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\r\n// so it's been modified.\r\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\r\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\r\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\r\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\r\n// pair).\r\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\r\n/**\r\n * @param {string} str\r\n * @return {Array}\r\n */\r\nvar stringToByteArray = function (str) {\r\n    var out = [];\r\n    var p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        // Is this the lead surrogate in a surrogate pair?\r\n        if (c >= 0xd800 && c <= 0xdbff) {\r\n            var high = c - 0xd800; // the high 10 bits.\r\n            i++;\r\n            assert(i < str.length, 'Surrogate pair missing trail surrogate.');\r\n            var low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\r\n            c = 0x10000 + (high << 10) + low;\r\n        }\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if (c < 65536) {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Calculate length without actually converting; useful for doing cheaper validation.\r\n * @param {string} str\r\n * @return {number}\r\n */\r\nvar stringLength = function (str) {\r\n    var p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            p++;\r\n        }\r\n        else if (c < 2048) {\r\n            p += 2;\r\n        }\r\n        else if (c >= 0xd800 && c <= 0xdbff) {\r\n            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\r\n            p += 4;\r\n            i++; // skip trail surrogate.\r\n        }\r\n        else {\r\n            p += 3;\r\n        }\r\n    }\r\n    return p;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The amount of milliseconds to exponentially increase.\r\n */\r\nvar DEFAULT_INTERVAL_MILLIS = 1000;\r\n/**\r\n * The factor to backoff by.\r\n * Should be a number greater than 1.\r\n */\r\nvar DEFAULT_BACKOFF_FACTOR = 2;\r\n/**\r\n * The maximum milliseconds to increase to.\r\n *\r\n * <p>Visible for testing\r\n */\r\nvar MAX_VALUE_MILLIS = 4 * 60 * 60 * 1000; // Four hours, like iOS and Android.\r\n/**\r\n * The percentage of backoff time to randomize by.\r\n * See\r\n * http://go/safe-client-behavior#step-1-determine-the-appropriate-retry-interval-to-handle-spike-traffic\r\n * for context.\r\n *\r\n * <p>Visible for testing\r\n */\r\nvar RANDOM_FACTOR = 0.5;\r\n/**\r\n * Based on the backoff method from\r\n * https://github.com/google/closure-library/blob/master/closure/goog/math/exponentialbackoff.js.\r\n * Extracted here so we don't need to pass metadata and a stateful ExponentialBackoff object around.\r\n */\r\nfunction calculateBackoffMillis(backoffCount, intervalMillis, backoffFactor) {\r\n    if (intervalMillis === void 0) { intervalMillis = DEFAULT_INTERVAL_MILLIS; }\r\n    if (backoffFactor === void 0) { backoffFactor = DEFAULT_BACKOFF_FACTOR; }\r\n    // Calculates an exponentially increasing value.\r\n    // Deviation: calculates value from count and a constant interval, so we only need to save value\r\n    // and count to restore state.\r\n    var currBaseValue = intervalMillis * Math.pow(backoffFactor, backoffCount);\r\n    // A random \"fuzz\" to avoid waves of retries.\r\n    // Deviation: randomFactor is required.\r\n    var randomWait = Math.round(\r\n    // A fraction of the backoff value to add/subtract.\r\n    // Deviation: changes multiplication order to improve readability.\r\n    RANDOM_FACTOR *\r\n        currBaseValue *\r\n        // A random float (rounded to int by Math.round above) in the range [-1, 1]. Determines\r\n        // if we add or subtract.\r\n        (Math.random() - 0.5) *\r\n        2);\r\n    // Limits backoff to max to avoid effectively permanent backoff.\r\n    return Math.min(MAX_VALUE_MILLIS, currBaseValue + randomWait);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provide English ordinal letters after a number\r\n */\r\nfunction ordinal(i) {\r\n    if (!Number.isFinite(i)) {\r\n        return \"\" + i;\r\n    }\r\n    return i + indicator(i);\r\n}\r\nfunction indicator(i) {\r\n    i = Math.abs(i);\r\n    var cent = i % 100;\r\n    if (cent >= 10 && cent <= 20) {\r\n        return 'th';\r\n    }\r\n    var dec = i % 10;\r\n    if (dec === 1) {\r\n        return 'st';\r\n    }\r\n    if (dec === 2) {\r\n        return 'nd';\r\n    }\r\n    if (dec === 3) {\r\n        return 'rd';\r\n    }\r\n    return 'th';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getModularInstance(service) {\r\n    if (service && service._delegate) {\r\n        return service._delegate;\r\n    }\r\n    else {\r\n        return service;\r\n    }\r\n}\n\nexport { CONSTANTS, Deferred, ErrorFactory, FirebaseError, MAX_VALUE_MILLIS, RANDOM_FACTOR, Sha1, areCookiesEnabled, assert, assertionError, async, base64, base64Decode, base64Encode, base64urlEncodeWithoutPadding, calculateBackoffMillis, contains, createMockUserToken, createSubscribe, decode, deepCopy, deepEqual, deepExtend, errorPrefix, extractQuerystring, getGlobal, getModularInstance, getUA, isAdmin, isBrowser, isBrowserExtension, isElectron, isEmpty, isIE, isIndexedDBAvailable, isMobileCordova, isNode, isNodeSdk, isReactNative, isSafari, isUWP, isValidFormat, isValidTimestamp, issuedAtTime, jsonEval, map, ordinal, querystring, querystringDecode, safeGet, stringLength, stringToByteArray, stringify, validateArgCount, validateCallback, validateContextObject, validateIndexedDBOpenable, validateNamespace };\n//# sourceMappingURL=index.esm.js.map\n","import { __values, __read, __awaiter, __generator, __spreadArray } from 'tslib';\nimport { Deferred } from '@firebase/util';\n\n/**\r\n * Component for service name T, e.g. `auth`, `auth-internal`\r\n */\r\nvar Component = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param name The public service name, e.g. app, auth, firestore, database\r\n     * @param instanceFactory Service factory responsible for creating the public interface\r\n     * @param type whether the service provided by the component is public or private\r\n     */\r\n    function Component(name, instanceFactory, type) {\r\n        this.name = name;\r\n        this.instanceFactory = instanceFactory;\r\n        this.type = type;\r\n        this.multipleInstances = false;\r\n        /**\r\n         * Properties to be added to the service namespace\r\n         */\r\n        this.serviceProps = {};\r\n        this.instantiationMode = \"LAZY\" /* LAZY */;\r\n        this.onInstanceCreated = null;\r\n    }\r\n    Component.prototype.setInstantiationMode = function (mode) {\r\n        this.instantiationMode = mode;\r\n        return this;\r\n    };\r\n    Component.prototype.setMultipleInstances = function (multipleInstances) {\r\n        this.multipleInstances = multipleInstances;\r\n        return this;\r\n    };\r\n    Component.prototype.setServiceProps = function (props) {\r\n        this.serviceProps = props;\r\n        return this;\r\n    };\r\n    Component.prototype.setInstanceCreatedCallback = function (callback) {\r\n        this.onInstanceCreated = callback;\r\n        return this;\r\n    };\r\n    return Component;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\r\n * NameServiceMapping[T] is an alias for the type of the instance\r\n */\r\nvar Provider = /** @class */ (function () {\r\n    function Provider(name, container) {\r\n        this.name = name;\r\n        this.container = container;\r\n        this.component = null;\r\n        this.instances = new Map();\r\n        this.instancesDeferred = new Map();\r\n        this.instancesOptions = new Map();\r\n        this.onInitCallbacks = new Map();\r\n    }\r\n    /**\r\n     * @param identifier A provider can provide mulitple instances of a service\r\n     * if this.component.multipleInstances is true.\r\n     */\r\n    Provider.prototype.get = function (identifier) {\r\n        // if multipleInstances is not supported, use the default name\r\n        var normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\r\n        if (!this.instancesDeferred.has(normalizedIdentifier)) {\r\n            var deferred = new Deferred();\r\n            this.instancesDeferred.set(normalizedIdentifier, deferred);\r\n            if (this.isInitialized(normalizedIdentifier) ||\r\n                this.shouldAutoInitialize()) {\r\n                // initialize the service if it can be auto-initialized\r\n                try {\r\n                    var instance = this.getOrInitializeService({\r\n                        instanceIdentifier: normalizedIdentifier\r\n                    });\r\n                    if (instance) {\r\n                        deferred.resolve(instance);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // when the instance factory throws an exception during get(), it should not cause\r\n                    // a fatal error. We just return the unresolved promise in this case.\r\n                }\r\n            }\r\n        }\r\n        return this.instancesDeferred.get(normalizedIdentifier).promise;\r\n    };\r\n    Provider.prototype.getImmediate = function (options) {\r\n        var _a;\r\n        // if multipleInstances is not supported, use the default name\r\n        var normalizedIdentifier = this.normalizeInstanceIdentifier(options === null || options === void 0 ? void 0 : options.identifier);\r\n        var optional = (_a = options === null || options === void 0 ? void 0 : options.optional) !== null && _a !== void 0 ? _a : false;\r\n        if (this.isInitialized(normalizedIdentifier) ||\r\n            this.shouldAutoInitialize()) {\r\n            try {\r\n                return this.getOrInitializeService({\r\n                    instanceIdentifier: normalizedIdentifier\r\n                });\r\n            }\r\n            catch (e) {\r\n                if (optional) {\r\n                    return null;\r\n                }\r\n                else {\r\n                    throw e;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\r\n            if (optional) {\r\n                return null;\r\n            }\r\n            else {\r\n                throw Error(\"Service \" + this.name + \" is not available\");\r\n            }\r\n        }\r\n    };\r\n    Provider.prototype.getComponent = function () {\r\n        return this.component;\r\n    };\r\n    Provider.prototype.setComponent = function (component) {\r\n        var e_1, _a;\r\n        if (component.name !== this.name) {\r\n            throw Error(\"Mismatching Component \" + component.name + \" for Provider \" + this.name + \".\");\r\n        }\r\n        if (this.component) {\r\n            throw Error(\"Component for \" + this.name + \" has already been provided\");\r\n        }\r\n        this.component = component;\r\n        // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\r\n        if (!this.shouldAutoInitialize()) {\r\n            return;\r\n        }\r\n        // if the service is eager, initialize the default instance\r\n        if (isComponentEager(component)) {\r\n            try {\r\n                this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\r\n            }\r\n            catch (e) {\r\n                // when the instance factory for an eager Component throws an exception during the eager\r\n                // initialization, it should not cause a fatal error.\r\n                // TODO: Investigate if we need to make it configurable, because some component may want to cause\r\n                // a fatal error in this case?\r\n            }\r\n        }\r\n        try {\r\n            // Create service instances for the pending promises and resolve them\r\n            // NOTE: if this.multipleInstances is false, only the default instance will be created\r\n            // and all promises with resolve with it regardless of the identifier.\r\n            for (var _b = __values(this.instancesDeferred.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var _d = __read(_c.value, 2), instanceIdentifier = _d[0], instanceDeferred = _d[1];\r\n                var normalizedIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\r\n                try {\r\n                    // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\r\n                    var instance = this.getOrInitializeService({\r\n                        instanceIdentifier: normalizedIdentifier\r\n                    });\r\n                    instanceDeferred.resolve(instance);\r\n                }\r\n                catch (e) {\r\n                    // when the instance factory throws an exception, it should not cause\r\n                    // a fatal error. We just leave the promise unresolved.\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n    };\r\n    Provider.prototype.clearInstance = function (identifier) {\r\n        if (identifier === void 0) { identifier = DEFAULT_ENTRY_NAME; }\r\n        this.instancesDeferred.delete(identifier);\r\n        this.instancesOptions.delete(identifier);\r\n        this.instances.delete(identifier);\r\n    };\r\n    // app.delete() will call this method on every provider to delete the services\r\n    // TODO: should we mark the provider as deleted?\r\n    Provider.prototype.delete = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var services;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        services = Array.from(this.instances.values());\r\n                        return [4 /*yield*/, Promise.all(__spreadArray(__spreadArray([], __read(services\r\n                                .filter(function (service) { return 'INTERNAL' in service; }) // legacy services\r\n                                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                                .map(function (service) { return service.INTERNAL.delete(); }))), __read(services\r\n                                .filter(function (service) { return '_delete' in service; }) // modularized services\r\n                                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                                .map(function (service) { return service._delete(); }))))];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Provider.prototype.isComponentSet = function () {\r\n        return this.component != null;\r\n    };\r\n    Provider.prototype.isInitialized = function (identifier) {\r\n        if (identifier === void 0) { identifier = DEFAULT_ENTRY_NAME; }\r\n        return this.instances.has(identifier);\r\n    };\r\n    Provider.prototype.getOptions = function (identifier) {\r\n        if (identifier === void 0) { identifier = DEFAULT_ENTRY_NAME; }\r\n        return this.instancesOptions.get(identifier) || {};\r\n    };\r\n    Provider.prototype.initialize = function (opts) {\r\n        var e_2, _a;\r\n        if (opts === void 0) { opts = {}; }\r\n        var _b = opts.options, options = _b === void 0 ? {} : _b;\r\n        var normalizedIdentifier = this.normalizeInstanceIdentifier(opts.instanceIdentifier);\r\n        if (this.isInitialized(normalizedIdentifier)) {\r\n            throw Error(this.name + \"(\" + normalizedIdentifier + \") has already been initialized\");\r\n        }\r\n        if (!this.isComponentSet()) {\r\n            throw Error(\"Component \" + this.name + \" has not been registered yet\");\r\n        }\r\n        var instance = this.getOrInitializeService({\r\n            instanceIdentifier: normalizedIdentifier,\r\n            options: options\r\n        });\r\n        try {\r\n            // resolve any pending promise waiting for the service instance\r\n            for (var _c = __values(this.instancesDeferred.entries()), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var _e = __read(_d.value, 2), instanceIdentifier = _e[0], instanceDeferred = _e[1];\r\n                var normalizedDeferredIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\r\n                if (normalizedIdentifier === normalizedDeferredIdentifier) {\r\n                    instanceDeferred.resolve(instance);\r\n                }\r\n            }\r\n        }\r\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_2) throw e_2.error; }\r\n        }\r\n        return instance;\r\n    };\r\n    /**\r\n     *\r\n     * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\r\n     * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\r\n     *\r\n     * @param identifier An optional instance identifier\r\n     * @returns a function to unregister the callback\r\n     */\r\n    Provider.prototype.onInit = function (callback, identifier) {\r\n        var _a;\r\n        var normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\r\n        var existingCallbacks = (_a = this.onInitCallbacks.get(normalizedIdentifier)) !== null && _a !== void 0 ? _a : new Set();\r\n        existingCallbacks.add(callback);\r\n        this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\r\n        var existingInstance = this.instances.get(normalizedIdentifier);\r\n        if (existingInstance) {\r\n            callback(existingInstance, normalizedIdentifier);\r\n        }\r\n        return function () {\r\n            existingCallbacks.delete(callback);\r\n        };\r\n    };\r\n    /**\r\n     * Invoke onInit callbacks synchronously\r\n     * @param instance the service instance`\r\n     */\r\n    Provider.prototype.invokeOnInitCallbacks = function (instance, identifier) {\r\n        var e_3, _a;\r\n        var callbacks = this.onInitCallbacks.get(identifier);\r\n        if (!callbacks) {\r\n            return;\r\n        }\r\n        try {\r\n            for (var callbacks_1 = __values(callbacks), callbacks_1_1 = callbacks_1.next(); !callbacks_1_1.done; callbacks_1_1 = callbacks_1.next()) {\r\n                var callback = callbacks_1_1.value;\r\n                try {\r\n                    callback(instance, identifier);\r\n                }\r\n                catch (_b) {\r\n                    // ignore errors in the onInit callback\r\n                }\r\n            }\r\n        }\r\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n        finally {\r\n            try {\r\n                if (callbacks_1_1 && !callbacks_1_1.done && (_a = callbacks_1.return)) _a.call(callbacks_1);\r\n            }\r\n            finally { if (e_3) throw e_3.error; }\r\n        }\r\n    };\r\n    Provider.prototype.getOrInitializeService = function (_a) {\r\n        var instanceIdentifier = _a.instanceIdentifier, _b = _a.options, options = _b === void 0 ? {} : _b;\r\n        var instance = this.instances.get(instanceIdentifier);\r\n        if (!instance && this.component) {\r\n            instance = this.component.instanceFactory(this.container, {\r\n                instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\r\n                options: options\r\n            });\r\n            this.instances.set(instanceIdentifier, instance);\r\n            this.instancesOptions.set(instanceIdentifier, options);\r\n            /**\r\n             * Invoke onInit listeners.\r\n             * Note this.component.onInstanceCreated is different, which is used by the component creator,\r\n             * while onInit listeners are registered by consumers of the provider.\r\n             */\r\n            this.invokeOnInitCallbacks(instance, instanceIdentifier);\r\n            /**\r\n             * Order is important\r\n             * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\r\n             * makes `isInitialized()` return true.\r\n             */\r\n            if (this.component.onInstanceCreated) {\r\n                try {\r\n                    this.component.onInstanceCreated(this.container, instanceIdentifier, instance);\r\n                }\r\n                catch (_c) {\r\n                    // ignore errors in the onInstanceCreatedCallback\r\n                }\r\n            }\r\n        }\r\n        return instance || null;\r\n    };\r\n    Provider.prototype.normalizeInstanceIdentifier = function (identifier) {\r\n        if (identifier === void 0) { identifier = DEFAULT_ENTRY_NAME; }\r\n        if (this.component) {\r\n            return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\r\n        }\r\n        else {\r\n            return identifier; // assume multiple instances are supported before the component is provided.\r\n        }\r\n    };\r\n    Provider.prototype.shouldAutoInitialize = function () {\r\n        return (!!this.component &&\r\n            this.component.instantiationMode !== \"EXPLICIT\" /* EXPLICIT */);\r\n    };\r\n    return Provider;\r\n}());\r\n// undefined should be passed to the service factory for the default instance\r\nfunction normalizeIdentifierForFactory(identifier) {\r\n    return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\r\n}\r\nfunction isComponentEager(component) {\r\n    return component.instantiationMode === \"EAGER\" /* EAGER */;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\r\n */\r\nvar ComponentContainer = /** @class */ (function () {\r\n    function ComponentContainer(name) {\r\n        this.name = name;\r\n        this.providers = new Map();\r\n    }\r\n    /**\r\n     *\r\n     * @param component Component being added\r\n     * @param overwrite When a component with the same name has already been registered,\r\n     * if overwrite is true: overwrite the existing component with the new component and create a new\r\n     * provider with the new component. It can be useful in tests where you want to use different mocks\r\n     * for different tests.\r\n     * if overwrite is false: throw an exception\r\n     */\r\n    ComponentContainer.prototype.addComponent = function (component) {\r\n        var provider = this.getProvider(component.name);\r\n        if (provider.isComponentSet()) {\r\n            throw new Error(\"Component \" + component.name + \" has already been registered with \" + this.name);\r\n        }\r\n        provider.setComponent(component);\r\n    };\r\n    ComponentContainer.prototype.addOrOverwriteComponent = function (component) {\r\n        var provider = this.getProvider(component.name);\r\n        if (provider.isComponentSet()) {\r\n            // delete the existing provider from the container, so we can register the new component\r\n            this.providers.delete(component.name);\r\n        }\r\n        this.addComponent(component);\r\n    };\r\n    /**\r\n     * getProvider provides a type safe interface where it can only be called with a field name\r\n     * present in NameServiceMapping interface.\r\n     *\r\n     * Firebase SDKs providing services should extend NameServiceMapping interface to register\r\n     * themselves.\r\n     */\r\n    ComponentContainer.prototype.getProvider = function (name) {\r\n        if (this.providers.has(name)) {\r\n            return this.providers.get(name);\r\n        }\r\n        // create a Provider for a service that hasn't registered with Firebase\r\n        var provider = new Provider(name, this);\r\n        this.providers.set(name, provider);\r\n        return provider;\r\n    };\r\n    ComponentContainer.prototype.getProviders = function () {\r\n        return Array.from(this.providers.values());\r\n    };\r\n    return ComponentContainer;\r\n}());\n\nexport { Component, ComponentContainer, Provider };\n//# sourceMappingURL=index.esm.js.map\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\n/**\r\n * A container for all of the Logger instances\r\n */\r\nvar instances = [];\r\n/**\r\n * The JS SDK supports 5 log levels and also allows a user the ability to\r\n * silence the logs altogether.\r\n *\r\n * The order is a follows:\r\n * DEBUG < VERBOSE < INFO < WARN < ERROR\r\n *\r\n * All of the log types above the current log level will be captured (i.e. if\r\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\r\n * `VERBOSE` logs will not)\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\r\n    LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\r\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\r\n    LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\r\n    LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\r\n    LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\r\n})(LogLevel || (LogLevel = {}));\r\nvar levelStringToEnum = {\r\n    'debug': LogLevel.DEBUG,\r\n    'verbose': LogLevel.VERBOSE,\r\n    'info': LogLevel.INFO,\r\n    'warn': LogLevel.WARN,\r\n    'error': LogLevel.ERROR,\r\n    'silent': LogLevel.SILENT\r\n};\r\n/**\r\n * The default log level\r\n */\r\nvar defaultLogLevel = LogLevel.INFO;\r\n/**\r\n * By default, `console.debug` is not displayed in the developer console (in\r\n * chrome). To avoid forcing users to have to opt-in to these logs twice\r\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\r\n * logs to the `console.log` function.\r\n */\r\nvar ConsoleMethod = (_a = {},\r\n    _a[LogLevel.DEBUG] = 'log',\r\n    _a[LogLevel.VERBOSE] = 'log',\r\n    _a[LogLevel.INFO] = 'info',\r\n    _a[LogLevel.WARN] = 'warn',\r\n    _a[LogLevel.ERROR] = 'error',\r\n    _a);\r\n/**\r\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\r\n * messages on to their corresponding console counterparts (if the log method\r\n * is supported by the current log level)\r\n */\r\nvar defaultLogHandler = function (instance, logType) {\r\n    var args = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        args[_i - 2] = arguments[_i];\r\n    }\r\n    if (logType < instance.logLevel) {\r\n        return;\r\n    }\r\n    var now = new Date().toISOString();\r\n    var method = ConsoleMethod[logType];\r\n    if (method) {\r\n        console[method].apply(console, __spreadArrays([\"[\" + now + \"]  \" + instance.name + \":\"], args));\r\n    }\r\n    else {\r\n        throw new Error(\"Attempted to log a message with an invalid logType (value: \" + logType + \")\");\r\n    }\r\n};\r\nvar Logger = /** @class */ (function () {\r\n    /**\r\n     * Gives you an instance of a Logger to capture messages according to\r\n     * Firebase's logging scheme.\r\n     *\r\n     * @param name The name that the logs will be associated with\r\n     */\r\n    function Logger(name) {\r\n        this.name = name;\r\n        /**\r\n         * The log level of the given Logger instance.\r\n         */\r\n        this._logLevel = defaultLogLevel;\r\n        /**\r\n         * The main (internal) log handler for the Logger instance.\r\n         * Can be set to a new function in internal package code but not by user.\r\n         */\r\n        this._logHandler = defaultLogHandler;\r\n        /**\r\n         * The optional, additional, user-defined log handler for the Logger instance.\r\n         */\r\n        this._userLogHandler = null;\r\n        /**\r\n         * Capture the current instance for later use\r\n         */\r\n        instances.push(this);\r\n    }\r\n    Object.defineProperty(Logger.prototype, \"logLevel\", {\r\n        get: function () {\r\n            return this._logLevel;\r\n        },\r\n        set: function (val) {\r\n            if (!(val in LogLevel)) {\r\n                throw new TypeError(\"Invalid value \\\"\" + val + \"\\\" assigned to `logLevel`\");\r\n            }\r\n            this._logLevel = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    // Workaround for setter/getter having to be the same type.\r\n    Logger.prototype.setLogLevel = function (val) {\r\n        this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\r\n    };\r\n    Object.defineProperty(Logger.prototype, \"logHandler\", {\r\n        get: function () {\r\n            return this._logHandler;\r\n        },\r\n        set: function (val) {\r\n            if (typeof val !== 'function') {\r\n                throw new TypeError('Value assigned to `logHandler` must be a function');\r\n            }\r\n            this._logHandler = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Logger.prototype, \"userLogHandler\", {\r\n        get: function () {\r\n            return this._userLogHandler;\r\n        },\r\n        set: function (val) {\r\n            this._userLogHandler = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * The functions below are all based on the `console` interface\r\n     */\r\n    Logger.prototype.debug = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.DEBUG], args));\r\n        this._logHandler.apply(this, __spreadArrays([this, LogLevel.DEBUG], args));\r\n    };\r\n    Logger.prototype.log = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.VERBOSE], args));\r\n        this._logHandler.apply(this, __spreadArrays([this, LogLevel.VERBOSE], args));\r\n    };\r\n    Logger.prototype.info = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.INFO], args));\r\n        this._logHandler.apply(this, __spreadArrays([this, LogLevel.INFO], args));\r\n    };\r\n    Logger.prototype.warn = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.WARN], args));\r\n        this._logHandler.apply(this, __spreadArrays([this, LogLevel.WARN], args));\r\n    };\r\n    Logger.prototype.error = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.ERROR], args));\r\n        this._logHandler.apply(this, __spreadArrays([this, LogLevel.ERROR], args));\r\n    };\r\n    return Logger;\r\n}());\r\nfunction setLogLevel(level) {\r\n    instances.forEach(function (inst) {\r\n        inst.setLogLevel(level);\r\n    });\r\n}\r\nfunction setUserLogHandler(logCallback, options) {\r\n    var _loop_1 = function (instance) {\r\n        var customLogLevel = null;\r\n        if (options && options.level) {\r\n            customLogLevel = levelStringToEnum[options.level];\r\n        }\r\n        if (logCallback === null) {\r\n            instance.userLogHandler = null;\r\n        }\r\n        else {\r\n            instance.userLogHandler = function (instance, level) {\r\n                var args = [];\r\n                for (var _i = 2; _i < arguments.length; _i++) {\r\n                    args[_i - 2] = arguments[_i];\r\n                }\r\n                var message = args\r\n                    .map(function (arg) {\r\n                    if (arg == null) {\r\n                        return null;\r\n                    }\r\n                    else if (typeof arg === 'string') {\r\n                        return arg;\r\n                    }\r\n                    else if (typeof arg === 'number' || typeof arg === 'boolean') {\r\n                        return arg.toString();\r\n                    }\r\n                    else if (arg instanceof Error) {\r\n                        return arg.message;\r\n                    }\r\n                    else {\r\n                        try {\r\n                            return JSON.stringify(arg);\r\n                        }\r\n                        catch (ignored) {\r\n                            return null;\r\n                        }\r\n                    }\r\n                })\r\n                    .filter(function (arg) { return arg; })\r\n                    .join(' ');\r\n                if (level >= (customLogLevel !== null && customLogLevel !== void 0 ? customLogLevel : instance.logLevel)) {\r\n                    logCallback({\r\n                        level: LogLevel[level].toLowerCase(),\r\n                        message: message,\r\n                        args: args,\r\n                        type: instance.name\r\n                    });\r\n                }\r\n            };\r\n        }\r\n    };\r\n    for (var _i = 0, instances_1 = instances; _i < instances_1.length; _i++) {\r\n        var instance = instances_1[_i];\r\n        _loop_1(instance);\r\n    }\r\n}\n\nexport { LogLevel, Logger, setLogLevel, setUserLogHandler };\n//# sourceMappingURL=index.esm.js.map\n","import { Component, ComponentContainer } from '@firebase/component';\nimport { Logger, setUserLogHandler, setLogLevel as setLogLevel$1 } from '@firebase/logger';\nimport { ErrorFactory, deepEqual } from '@firebase/util';\nexport { FirebaseError } from '@firebase/util';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass PlatformLoggerServiceImpl {\r\n    constructor(container) {\r\n        this.container = container;\r\n    }\r\n    // In initial implementation, this will be called by installations on\r\n    // auth token refresh, and installations will send this string.\r\n    getPlatformInfoString() {\r\n        const providers = this.container.getProviders();\r\n        // Loop through providers and get library/version pairs from any that are\r\n        // version components.\r\n        return providers\r\n            .map(provider => {\r\n            if (isVersionServiceProvider(provider)) {\r\n                const service = provider.getImmediate();\r\n                return `${service.library}/${service.version}`;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        })\r\n            .filter(logString => logString)\r\n            .join(' ');\r\n    }\r\n}\r\n/**\r\n *\r\n * @param provider check if this provider provides a VersionService\r\n *\r\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\r\n * provides VersionService. The provider is not necessarily a 'app-version'\r\n * provider.\r\n */\r\nfunction isVersionServiceProvider(provider) {\r\n    const component = provider.getComponent();\r\n    return (component === null || component === void 0 ? void 0 : component.type) === \"VERSION\" /* VERSION */;\r\n}\n\nconst name$o = \"@firebase/app\";\nconst version$1 = \"0.7.0\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst logger = new Logger('@firebase/app');\n\nconst name$n = \"@firebase/app-compat\";\n\nconst name$m = \"@firebase/analytics-compat\";\n\nconst name$l = \"@firebase/analytics\";\n\nconst name$k = \"@firebase/app-check-compat\";\n\nconst name$j = \"@firebase/app-check\";\n\nconst name$i = \"@firebase/auth\";\n\nconst name$h = \"@firebase/auth-compat\";\n\nconst name$g = \"@firebase/database\";\n\nconst name$f = \"@firebase/database-compat\";\n\nconst name$e = \"@firebase/functions\";\n\nconst name$d = \"@firebase/functions-compat\";\n\nconst name$c = \"@firebase/installations\";\n\nconst name$b = \"@firebase/installations-compat\";\n\nconst name$a = \"@firebase/messaging\";\n\nconst name$9 = \"@firebase/messaging-compat\";\n\nconst name$8 = \"@firebase/performance\";\n\nconst name$7 = \"@firebase/performance-compat\";\n\nconst name$6 = \"@firebase/remote-config\";\n\nconst name$5 = \"@firebase/remote-config-compat\";\n\nconst name$4 = \"@firebase/storage\";\n\nconst name$3 = \"@firebase/storage-compat\";\n\nconst name$2 = \"@firebase/firestore\";\n\nconst name$1 = \"@firebase/firestore-compat\";\n\nconst name = \"firebase\";\nconst version = \"9.0.0\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The default app name\r\n *\r\n * @internal\r\n */\r\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\nconst PLATFORM_LOG_STRING = {\r\n    [name$o]: 'fire-core',\r\n    [name$n]: 'fire-core-compat',\r\n    [name$l]: 'fire-analytics',\r\n    [name$m]: 'fire-analytics-compat',\r\n    [name$j]: 'fire-app-check',\r\n    [name$k]: 'fire-app-check-compat',\r\n    [name$i]: 'fire-auth',\r\n    [name$h]: 'fire-auth-compat',\r\n    [name$g]: 'fire-rtdb',\r\n    [name$f]: 'fire-rtdb-compat',\r\n    [name$e]: 'fire-fn',\r\n    [name$d]: 'fire-fn-compat',\r\n    [name$c]: 'fire-iid',\r\n    [name$b]: 'fire-iid-compat',\r\n    [name$a]: 'fire-fcm',\r\n    [name$9]: 'fire-fcm-compat',\r\n    [name$8]: 'fire-perf',\r\n    [name$7]: 'fire-perf-compat',\r\n    [name$6]: 'fire-rc',\r\n    [name$5]: 'fire-rc-compat',\r\n    [name$4]: 'fire-gcs',\r\n    [name$3]: 'fire-gcs-compat',\r\n    [name$2]: 'fire-fst',\r\n    [name$1]: 'fire-fst-compat',\r\n    'fire-js': 'fire-js',\r\n    [name]: 'fire-js-all'\r\n};\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @internal\r\n */\r\nconst _apps = new Map();\r\n/**\r\n * Registered components.\r\n *\r\n * @internal\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nconst _components = new Map();\r\n/**\r\n * @param component - the component being added to this app's container\r\n *\r\n * @internal\r\n */\r\nfunction _addComponent(app, component) {\r\n    try {\r\n        app.container.addComponent(component);\r\n    }\r\n    catch (e) {\r\n        logger.debug(`Component ${component.name} failed to register with FirebaseApp ${app.name}`, e);\r\n    }\r\n}\r\n/**\r\n *\r\n * @internal\r\n */\r\nfunction _addOrOverwriteComponent(app, component) {\r\n    app.container.addOrOverwriteComponent(component);\r\n}\r\n/**\r\n *\r\n * @param component - the component to register\r\n * @returns whether or not the component is registered successfully\r\n *\r\n * @internal\r\n */\r\nfunction _registerComponent(component) {\r\n    const componentName = component.name;\r\n    if (_components.has(componentName)) {\r\n        logger.debug(`There were multiple attempts to register component ${componentName}.`);\r\n        return false;\r\n    }\r\n    _components.set(componentName, component);\r\n    // add the component to existing app instances\r\n    for (const app of _apps.values()) {\r\n        _addComponent(app, component);\r\n    }\r\n    return true;\r\n}\r\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n *\r\n * @returns the provider for the service with the matching name\r\n *\r\n * @internal\r\n */\r\nfunction _getProvider(app, name) {\r\n    return app.container.getProvider(name);\r\n}\r\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\r\n *\r\n * @internal\r\n */\r\nfunction _removeServiceInstance(app, name, instanceIdentifier = DEFAULT_ENTRY_NAME) {\r\n    _getProvider(app, name).clearInstance(instanceIdentifier);\r\n}\r\n/**\r\n * Test only\r\n *\r\n * @internal\r\n */\r\nfunction _clearComponents() {\r\n    _components.clear();\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst ERRORS = {\r\n    [\"no-app\" /* NO_APP */]: \"No Firebase App '{$appName}' has been created - \" +\r\n        'call Firebase App.initializeApp()',\r\n    [\"bad-app-name\" /* BAD_APP_NAME */]: \"Illegal App name: '{$appName}\",\r\n    [\"duplicate-app\" /* DUPLICATE_APP */]: \"Firebase App named '{$appName}' already exists with different options or config\",\r\n    [\"app-deleted\" /* APP_DELETED */]: \"Firebase App named '{$appName}' already deleted\",\r\n    [\"invalid-app-argument\" /* INVALID_APP_ARGUMENT */]: 'firebase.{$appName}() takes either no argument or a ' +\r\n        'Firebase App instance.',\r\n    [\"invalid-log-argument\" /* INVALID_LOG_ARGUMENT */]: 'First argument to `onLog` must be null or a function.'\r\n};\r\nconst ERROR_FACTORY = new ErrorFactory('app', 'Firebase', ERRORS);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass FirebaseAppImpl {\r\n    constructor(options, config, container) {\r\n        this._isDeleted = false;\r\n        this._options = Object.assign({}, options);\r\n        this._config = Object.assign({}, config);\r\n        this._name = config.name;\r\n        this._automaticDataCollectionEnabled =\r\n            config.automaticDataCollectionEnabled;\r\n        this._container = container;\r\n        this.container.addComponent(new Component('app', () => this, \"PUBLIC\" /* PUBLIC */));\r\n    }\r\n    get automaticDataCollectionEnabled() {\r\n        this.checkDestroyed();\r\n        return this._automaticDataCollectionEnabled;\r\n    }\r\n    set automaticDataCollectionEnabled(val) {\r\n        this.checkDestroyed();\r\n        this._automaticDataCollectionEnabled = val;\r\n    }\r\n    get name() {\r\n        this.checkDestroyed();\r\n        return this._name;\r\n    }\r\n    get options() {\r\n        this.checkDestroyed();\r\n        return this._options;\r\n    }\r\n    get config() {\r\n        this.checkDestroyed();\r\n        return this._config;\r\n    }\r\n    get container() {\r\n        return this._container;\r\n    }\r\n    get isDeleted() {\r\n        return this._isDeleted;\r\n    }\r\n    set isDeleted(val) {\r\n        this._isDeleted = val;\r\n    }\r\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\r\n    checkDestroyed() {\r\n        if (this.isDeleted) {\r\n            throw ERROR_FACTORY.create(\"app-deleted\" /* APP_DELETED */, { appName: this._name });\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The current SDK version.\r\n *\r\n * @public\r\n */\r\nconst SDK_VERSION = version;\r\nfunction initializeApp(options, rawConfig = {}) {\r\n    if (typeof rawConfig !== 'object') {\r\n        const name = rawConfig;\r\n        rawConfig = { name };\r\n    }\r\n    const config = Object.assign({ name: DEFAULT_ENTRY_NAME, automaticDataCollectionEnabled: false }, rawConfig);\r\n    const name = config.name;\r\n    if (typeof name !== 'string' || !name) {\r\n        throw ERROR_FACTORY.create(\"bad-app-name\" /* BAD_APP_NAME */, {\r\n            appName: String(name)\r\n        });\r\n    }\r\n    const existingApp = _apps.get(name);\r\n    if (existingApp) {\r\n        // return the existing app if options and config deep equal the ones in the existing app.\r\n        if (deepEqual(options, existingApp.options) &&\r\n            deepEqual(config, existingApp.config)) {\r\n            return existingApp;\r\n        }\r\n        else {\r\n            throw ERROR_FACTORY.create(\"duplicate-app\" /* DUPLICATE_APP */, { appName: name });\r\n        }\r\n    }\r\n    const container = new ComponentContainer(name);\r\n    for (const component of _components.values()) {\r\n        container.addComponent(component);\r\n    }\r\n    const newApp = new FirebaseAppImpl(options, config, container);\r\n    _apps.set(name, newApp);\r\n    return newApp;\r\n}\r\n/**\r\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\r\n *\r\n * When called with no arguments, the default app is returned. When an app name\r\n * is provided, the app corresponding to that name is returned.\r\n *\r\n * An exception is thrown if the app being retrieved has not yet been\r\n * initialized.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return the default app\r\n * const app = getApp();\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return a named app\r\n * const otherApp = getApp(\"otherApp\");\r\n * ```\r\n *\r\n * @param name - Optional name of the app to return. If no name is\r\n *   provided, the default is `\"[DEFAULT]\"`.\r\n *\r\n * @returns The app corresponding to the provided app name.\r\n *   If no app name is provided, the default app is returned.\r\n *\r\n * @public\r\n */\r\nfunction getApp(name = DEFAULT_ENTRY_NAME) {\r\n    const app = _apps.get(name);\r\n    if (!app) {\r\n        throw ERROR_FACTORY.create(\"no-app\" /* NO_APP */, { appName: name });\r\n    }\r\n    return app;\r\n}\r\n/**\r\n * A (read-only) array of all initialized apps.\r\n * @public\r\n */\r\nfunction getApps() {\r\n    return Array.from(_apps.values());\r\n}\r\n/**\r\n * Renders this app unusable and frees the resources of all associated\r\n * services.\r\n *\r\n * @example\r\n * ```javascript\r\n * deleteApp(app)\r\n *   .then(function() {\r\n *     console.log(\"App deleted successfully\");\r\n *   })\r\n *   .catch(function(error) {\r\n *     console.log(\"Error deleting app:\", error);\r\n *   });\r\n * ```\r\n *\r\n * @public\r\n */\r\nasync function deleteApp(app) {\r\n    const name = app.name;\r\n    if (_apps.has(name)) {\r\n        _apps.delete(name);\r\n        await Promise.all(app.container\r\n            .getProviders()\r\n            .map(provider => provider.delete()));\r\n        app.isDeleted = true;\r\n    }\r\n}\r\n/**\r\n * Registers a library's name and version for platform logging purposes.\r\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\r\n * @param version - Current version of that library.\r\n * @param variant - Bundle variant, e.g., node, rn, etc.\r\n *\r\n * @public\r\n */\r\nfunction registerVersion(libraryKeyOrName, version, variant) {\r\n    var _a;\r\n    // TODO: We can use this check to whitelist strings when/if we set up\r\n    // a good whitelist system.\r\n    let library = (_a = PLATFORM_LOG_STRING[libraryKeyOrName]) !== null && _a !== void 0 ? _a : libraryKeyOrName;\r\n    if (variant) {\r\n        library += `-${variant}`;\r\n    }\r\n    const libraryMismatch = library.match(/\\s|\\//);\r\n    const versionMismatch = version.match(/\\s|\\//);\r\n    if (libraryMismatch || versionMismatch) {\r\n        const warning = [\r\n            `Unable to register library \"${library}\" with version \"${version}\":`\r\n        ];\r\n        if (libraryMismatch) {\r\n            warning.push(`library name \"${library}\" contains illegal characters (whitespace or \"/\")`);\r\n        }\r\n        if (libraryMismatch && versionMismatch) {\r\n            warning.push('and');\r\n        }\r\n        if (versionMismatch) {\r\n            warning.push(`version name \"${version}\" contains illegal characters (whitespace or \"/\")`);\r\n        }\r\n        logger.warn(warning.join(' '));\r\n        return;\r\n    }\r\n    _registerComponent(new Component(`${library}-version`, () => ({ library, version }), \"VERSION\" /* VERSION */));\r\n}\r\n/**\r\n * Sets log handler for all Firebase SDKs.\r\n * @param logCallback - An optional custom log handler that executes user code whenever\r\n * the Firebase SDK makes a logging call.\r\n *\r\n * @public\r\n */\r\nfunction onLog(logCallback, options) {\r\n    if (logCallback !== null && typeof logCallback !== 'function') {\r\n        throw ERROR_FACTORY.create(\"invalid-log-argument\" /* INVALID_LOG_ARGUMENT */);\r\n    }\r\n    setUserLogHandler(logCallback, options);\r\n}\r\n/**\r\n * Sets log level for all Firebase SDKs.\r\n *\r\n * All of the log types above the current log level are captured (i.e. if\r\n * you set the log level to `info`, errors are logged, but `debug` and\r\n * `verbose` logs are not).\r\n *\r\n * @public\r\n */\r\nfunction setLogLevel(logLevel) {\r\n    setLogLevel$1(logLevel);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerCoreComponents(variant) {\r\n    _registerComponent(new Component('platform-logger', container => new PlatformLoggerServiceImpl(container), \"PRIVATE\" /* PRIVATE */));\r\n    // Register `app` package.\r\n    registerVersion(name$o, version$1, variant);\r\n    // Register platform SDK identifier (no version).\r\n    registerVersion('fire-js', '');\r\n}\n\n/**\r\n * Firebase App\r\n *\r\n * @remarks This package coordinates the communication between the different Firebase components\r\n * @packageDocumentation\r\n */\r\nregisterCoreComponents();\n\nexport { SDK_VERSION, DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME, _addComponent, _addOrOverwriteComponent, _apps, _clearComponents, _components, _getProvider, _registerComponent, _removeServiceInstance, deleteApp, getApp, getApps, initializeApp, onLog, registerVersion, setLogLevel };\n//# sourceMappingURL=index.esm2017.js.map\n","import { registerVersion } from '@firebase/app';\nexport * from '@firebase/app';\n\nvar name = \"firebase\";\nvar version = \"9.0.1\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nregisterVersion(name, version, 'app');\n//# sourceMappingURL=index.esm.js.map\n","import 'regenerator-runtime/runtime'\nimport { initializeApp } from 'firebase/app'\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: 'AIzaSyC5jHZOj29zfVlqObi43XGY5ct_hCawntc',\n  authDomain: 'another-todo-f42eb.firebaseapp.com',\n  projectId: 'another-todo-f42eb',\n  storageBucket: 'another-todo-f42eb.appspot.com',\n  messagingSenderId: '315443812435',\n  appId: '1:315443812435:web:53762d9ba7f6af2c138ea6',\n}\n\n// Initialize Firebase\nexport const app = initializeApp(firebaseConfig)\n","import { _getProvider as t, getApp as n, _removeServiceInstance as e, _registerComponent as r, registerVersion as s, SDK_VERSION as i } from \"@firebase/app\";\n\nimport { Component as o } from \"@firebase/component\";\n\nimport { Logger as u, LogLevel as c } from \"@firebase/logger\";\n\nimport { createMockUserToken as a, getModularInstance as h } from \"@firebase/util\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Simple wrapper around a nullable UID. Mostly exists to make code more\n * readable.\n */\nclass l {\n    constructor(t) {\n        this.uid = t;\n    }\n    isAuthenticated() {\n        return null != this.uid;\n    }\n    /**\n     * Returns a key representing this user, suitable for inclusion in a\n     * dictionary.\n     */    toKey() {\n        return this.isAuthenticated() ? \"uid:\" + this.uid : \"anonymous-user\";\n    }\n    isEqual(t) {\n        return t.uid === this.uid;\n    }\n}\n\n/** A user with a null UID. */ l.UNAUTHENTICATED = new l(null), \n// TODO(mikelehen): Look into getting a proper uid-equivalent for\n// non-FirebaseAuth providers.\nl.GOOGLE_CREDENTIALS = new l(\"google-credentials-uid\"), l.FIRST_PARTY = new l(\"first-party-uid\"), \nl.MOCK_USER = new l(\"mock-user\");\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet f = \"9.0.1\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst d = new u(\"@firebase/firestore\");\n\n/**\n * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).\n *\n * @param logLevel - The verbosity you set for activity and error logging. Can\n *   be any of the following values:\n *\n *   <ul>\n *     <li>`debug` for the most verbose logging level, primarily for\n *     debugging.</li>\n *     <li>`error` to log errors only.</li>\n *     <li><code>`silent` to turn off logging.</li>\n *   </ul>\n */ function w(t) {\n    d.setLogLevel(t);\n}\n\nfunction m(t, ...n) {\n    if (d.logLevel <= c.DEBUG) {\n        const e = n.map(_);\n        d.debug(`Firestore (${f}): ${t}`, ...e);\n    }\n}\n\nfunction p(t, ...n) {\n    if (d.logLevel <= c.ERROR) {\n        const e = n.map(_);\n        d.error(`Firestore (${f}): ${t}`, ...e);\n    }\n}\n\n/**\n * @internal\n */ function y(t, ...n) {\n    if (d.logLevel <= c.WARN) {\n        const e = n.map(_);\n        d.warn(`Firestore (${f}): ${t}`, ...e);\n    }\n}\n\n/**\n * Converts an additional log parameter to a string representation.\n */ function _(t) {\n    if (\"string\" == typeof t) return t;\n    try {\n        return n = t, JSON.stringify(n);\n    } catch (n) {\n        // Converting to JSON failed, just log the object directly\n        return t;\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /** Formats an object as a JSON string, suitable for logging. */\n    var n;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Unconditionally fails, throwing an Error with the given message.\n * Messages are stripped in production builds.\n *\n * Returns `never` and can be used in expressions:\n * @example\n * let futureVar = fail('not implemented yet');\n */ function g(t = \"Unexpected state\") {\n    // Log the failure in addition to throw an exception, just in case the\n    // exception is swallowed.\n    const n = `FIRESTORE (${f}) INTERNAL ASSERTION FAILED: ` + t;\n    // NOTE: We don't use FirestoreError here because these are internal failures\n    // that cannot be handled by the user. (Also it would create a circular\n    // dependency between the error and assert modules which doesn't work.)\n    throw p(n), new Error(n);\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * Messages are stripped in production builds.\n */ function b(t, n) {\n    t || g();\n}\n\n/**\n * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an\n * instance of `T` before casting.\n */ function v(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nn) {\n    return t;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const E = \"ok\", I = \"cancelled\", T = \"unknown\", A = \"invalid-argument\", P = \"deadline-exceeded\", R = \"not-found\", V = \"already-exists\", N = \"permission-denied\", D = \"unauthenticated\", $ = \"resource-exhausted\", F = \"failed-precondition\", S = \"aborted\", q = \"out-of-range\", x = \"unimplemented\", O = \"internal\", C = \"unavailable\", L = \"data-loss\";\n\n/** An error returned by a Firestore operation. */ class U extends Error {\n    /** @hideconstructor */\n    constructor(\n    /**\n     * The backend error code associated with this error.\n     */\n    t, \n    /**\n     * A custom error description.\n     */\n    n) {\n        super(n), this.code = t, this.message = n, \n        /** The custom name for all FirestoreErrors. */\n        this.name = \"FirebaseError\", \n        // HACK: We write a toString property directly because Error is not a real\n        // class and so inheritance does not work correctly. We could alternatively\n        // do the same \"back-door inheritance\" trick that FirebaseError does.\n        this.toString = () => `${this.name}: [code=${this.code}]: ${this.message}`;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class j {\n    constructor() {\n        this.promise = new Promise(((t, n) => {\n            this.resolve = t, this.reject = n;\n        }));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class k {\n    constructor(t, n) {\n        this.user = n, this.type = \"OAuth\", this.authHeaders = {}, \n        // Set the headers using Object Literal notation to avoid minification\n        this.authHeaders.Authorization = `Bearer ${t}`;\n    }\n}\n\n/** A CredentialsProvider that always yields an empty token. */ class M {\n    getToken() {\n        return Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, n) {\n        // Fire with initial user.\n        t.enqueueRetryable((() => n(l.UNAUTHENTICATED)));\n    }\n    shutdown() {}\n}\n\n/**\n * A CredentialsProvider that always returns a constant token. Used for\n * emulator token mocking.\n */ class B {\n    constructor(t) {\n        this.token = t, \n        /**\n         * Stores the listener registered with setChangeListener()\n         * This isn't actually necessary since the UID never changes, but we use this\n         * to verify the listen contract is adhered to in tests.\n         */\n        this.changeListener = null;\n    }\n    getToken() {\n        return Promise.resolve(this.token);\n    }\n    invalidateToken() {}\n    start(t, n) {\n        this.changeListener = n, \n        // Fire with initial user.\n        t.enqueueRetryable((() => n(this.token.user)));\n    }\n    shutdown() {\n        this.changeListener = null;\n    }\n}\n\n/** Credential provider for the Lite SDK. */ class Q {\n    constructor(t) {\n        this.auth = null, t.onInit((t => {\n            this.auth = t;\n        }));\n    }\n    getToken() {\n        return this.auth ? this.auth.getToken().then((t => t ? (b(\"string\" == typeof t.accessToken), \n        new k(t.accessToken, new l(this.auth.getUid()))) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, n) {}\n    shutdown() {}\n}\n\n/*\n * FirstPartyToken provides a fresh token each time its value\n * is requested, because if the token is too old, requests will be rejected.\n * Technically this may no longer be necessary since the SDK should gracefully\n * recover from unauthenticated errors (see b/33147818 for context), but it's\n * safer to keep the implementation as-is.\n */ class z {\n    constructor(t, n, e) {\n        this.t = t, this.i = n, this.o = e, this.type = \"FirstParty\", this.user = l.FIRST_PARTY;\n    }\n    get authHeaders() {\n        const t = {\n            \"X-Goog-AuthUser\": this.i\n        }, n = this.t.auth.getAuthHeaderValueForFirstParty([]);\n        // Use array notation to prevent minification\n                return n && (t.Authorization = n), this.o && (t[\"X-Goog-Iam-Authorization-Token\"] = this.o), \n        t;\n    }\n}\n\n/*\n * Provides user credentials required for the Firestore JavaScript SDK\n * to authenticate the user, using technique that is only available\n * to applications hosted by Google.\n */ class W {\n    constructor(t, n, e) {\n        this.t = t, this.i = n, this.o = e;\n    }\n    getToken() {\n        return Promise.resolve(new z(this.t, this.i, this.o));\n    }\n    start(t, n) {\n        // Fire with initial uid.\n        t.enqueueRetryable((() => n(l.FIRST_PARTY)));\n    }\n    shutdown() {}\n    invalidateToken() {}\n}\n\n/**\n * Builds a CredentialsProvider depending on the type of\n * the credentials passed in.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass G {\n    /**\n     * Constructs a DatabaseInfo using the provided host, databaseId and\n     * persistenceKey.\n     *\n     * @param databaseId - The database to use.\n     * @param appId - The Firebase App Id.\n     * @param persistenceKey - A unique identifier for this Firestore's local\n     * storage (used in conjunction with the databaseId).\n     * @param host - The Firestore backend host to connect to.\n     * @param ssl - Whether to use SSL when connecting.\n     * @param forceLongPolling - Whether to use the forceLongPolling option\n     * when using WebChannel as the network transport.\n     * @param autoDetectLongPolling - Whether to use the detectBufferingProxy\n     * option when using WebChannel as the network transport.\n     * @param useFetchStreams Whether to use the Fetch API instead of\n     * XMLHTTPRequest\n     */\n    constructor(t, n, e, r, s, i, o, u) {\n        this.databaseId = t, this.appId = n, this.persistenceKey = e, this.host = r, this.ssl = s, \n        this.forceLongPolling = i, this.autoDetectLongPolling = o, this.useFetchStreams = u;\n    }\n}\n\n/** The default database name for a project. */\n/**\n * Represents the database ID a Firestore client is associated with.\n * @internal\n */\nclass H {\n    constructor(t, n) {\n        this.projectId = t, this.database = n || \"(default)\";\n    }\n    get isDefaultDatabase() {\n        return \"(default)\" === this.database;\n    }\n    isEqual(t) {\n        return t instanceof H && t.projectId === this.projectId && t.database === this.database;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Path represents an ordered sequence of string segments.\n */\nclass Y {\n    constructor(t, n, e) {\n        void 0 === n ? n = 0 : n > t.length && g(), void 0 === e ? e = t.length - n : e > t.length - n && g(), \n        this.segments = t, this.offset = n, this.len = e;\n    }\n    get length() {\n        return this.len;\n    }\n    isEqual(t) {\n        return 0 === Y.comparator(this, t);\n    }\n    child(t) {\n        const n = this.segments.slice(this.offset, this.limit());\n        return t instanceof Y ? t.forEach((t => {\n            n.push(t);\n        })) : n.push(t), this.construct(n);\n    }\n    /** The index of one past the last segment of the path. */    limit() {\n        return this.offset + this.length;\n    }\n    popFirst(t) {\n        return t = void 0 === t ? 1 : t, this.construct(this.segments, this.offset + t, this.length - t);\n    }\n    popLast() {\n        return this.construct(this.segments, this.offset, this.length - 1);\n    }\n    firstSegment() {\n        return this.segments[this.offset];\n    }\n    lastSegment() {\n        return this.get(this.length - 1);\n    }\n    get(t) {\n        return this.segments[this.offset + t];\n    }\n    isEmpty() {\n        return 0 === this.length;\n    }\n    isPrefixOf(t) {\n        if (t.length < this.length) return !1;\n        for (let n = 0; n < this.length; n++) if (this.get(n) !== t.get(n)) return !1;\n        return !0;\n    }\n    isImmediateParentOf(t) {\n        if (this.length + 1 !== t.length) return !1;\n        for (let n = 0; n < this.length; n++) if (this.get(n) !== t.get(n)) return !1;\n        return !0;\n    }\n    forEach(t) {\n        for (let n = this.offset, e = this.limit(); n < e; n++) t(this.segments[n]);\n    }\n    toArray() {\n        return this.segments.slice(this.offset, this.limit());\n    }\n    static comparator(t, n) {\n        const e = Math.min(t.length, n.length);\n        for (let r = 0; r < e; r++) {\n            const e = t.get(r), s = n.get(r);\n            if (e < s) return -1;\n            if (e > s) return 1;\n        }\n        return t.length < n.length ? -1 : t.length > n.length ? 1 : 0;\n    }\n}\n\n/**\n * A slash-separated path for navigating resources (documents and collections)\n * within Firestore.\n *\n * @internal\n */ class K extends Y {\n    construct(t, n, e) {\n        return new K(t, n, e);\n    }\n    canonicalString() {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        return this.toArray().join(\"/\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Creates a resource path from the given slash-delimited string. If multiple\n     * arguments are provided, all components are combined. Leading and trailing\n     * slashes from all components are ignored.\n     */    static fromString(...t) {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        const n = [];\n        for (const e of t) {\n            if (e.indexOf(\"//\") >= 0) throw new U(A, `Invalid segment (${e}). Paths must not contain // in them.`);\n            // Strip leading and traling slashed.\n                        n.push(...e.split(\"/\").filter((t => t.length > 0)));\n        }\n        return new K(n);\n    }\n    static emptyPath() {\n        return new K([]);\n    }\n}\n\nconst J = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n\n/**\n * A dot-separated path for navigating sub-objects within a document.\n * @internal\n */ class Z extends Y {\n    construct(t, n, e) {\n        return new Z(t, n, e);\n    }\n    /**\n     * Returns true if the string could be used as a segment in a field path\n     * without escaping.\n     */    static isValidIdentifier(t) {\n        return J.test(t);\n    }\n    canonicalString() {\n        return this.toArray().map((t => (t = t.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\"), \n        Z.isValidIdentifier(t) || (t = \"`\" + t + \"`\"), t))).join(\".\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Returns true if this field references the key of a document.\n     */    isKeyField() {\n        return 1 === this.length && \"__name__\" === this.get(0);\n    }\n    /**\n     * The field designating the key of a document.\n     */    static keyField() {\n        return new Z([ \"__name__\" ]);\n    }\n    /**\n     * Parses a field string from the given server-formatted string.\n     *\n     * - Splitting the empty string is not allowed (for now at least).\n     * - Empty segments within the string (e.g. if there are two consecutive\n     *   separators) are not allowed.\n     *\n     * TODO(b/37244157): we should make this more strict. Right now, it allows\n     * non-identifier path components, even if they aren't escaped.\n     */    static fromServerFormat(t) {\n        const n = [];\n        let e = \"\", r = 0;\n        const s = () => {\n            if (0 === e.length) throw new U(A, `Invalid field path (${t}). Paths must not be empty, begin with '.', end with '.', or contain '..'`);\n            n.push(e), e = \"\";\n        };\n        let i = !1;\n        for (;r < t.length; ) {\n            const n = t[r];\n            if (\"\\\\\" === n) {\n                if (r + 1 === t.length) throw new U(A, \"Path has trailing escape character: \" + t);\n                const n = t[r + 1];\n                if (\"\\\\\" !== n && \".\" !== n && \"`\" !== n) throw new U(A, \"Path has invalid escape sequence: \" + t);\n                e += n, r += 2;\n            } else \"`\" === n ? (i = !i, r++) : \".\" !== n || i ? (e += n, r++) : (s(), r++);\n        }\n        if (s(), i) throw new U(A, \"Unterminated ` in path: \" + t);\n        return new Z(n);\n    }\n    static emptyPath() {\n        return new Z([]);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @internal\n */ class X {\n    constructor(t) {\n        this.path = t;\n    }\n    static fromPath(t) {\n        return new X(K.fromString(t));\n    }\n    static fromName(t) {\n        return new X(K.fromString(t).popFirst(5));\n    }\n    /** Returns true if the document is in the specified collectionId. */    hasCollectionId(t) {\n        return this.path.length >= 2 && this.path.get(this.path.length - 2) === t;\n    }\n    isEqual(t) {\n        return null !== t && 0 === K.comparator(this.path, t.path);\n    }\n    toString() {\n        return this.path.toString();\n    }\n    static comparator(t, n) {\n        return K.comparator(t.path, n.path);\n    }\n    static isDocumentKey(t) {\n        return t.length % 2 == 0;\n    }\n    /**\n     * Creates and returns a new document key with the given segments.\n     *\n     * @param segments - The segments of the path to the document\n     * @returns A new instance of DocumentKey\n     */    static fromSegments(t) {\n        return new X(new K(t.slice()));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function tt(t, n, e) {\n    if (!e) throw new U(A, `Function ${t}() cannot be called with an empty ${n}.`);\n}\n\n/**\n * Validates that two boolean options are not set at the same time.\n * @internal\n */\n/**\n * Validates that `path` refers to a document (indicated by the fact it contains\n * an even numbers of segments).\n */\nfunction nt(t) {\n    if (!X.isDocumentKey(t)) throw new U(A, `Invalid document reference. Document references must have an even number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Validates that `path` refers to a collection (indicated by the fact it\n * contains an odd numbers of segments).\n */ function et(t) {\n    if (X.isDocumentKey(t)) throw new U(A, `Invalid collection reference. Collection references must have an odd number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Returns true if it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\n/** Returns a string describing the type / value of the provided input. */\nfunction rt(t) {\n    if (void 0 === t) return \"undefined\";\n    if (null === t) return \"null\";\n    if (\"string\" == typeof t) return t.length > 20 && (t = `${t.substring(0, 20)}...`), \n    JSON.stringify(t);\n    if (\"number\" == typeof t || \"boolean\" == typeof t) return \"\" + t;\n    if (\"object\" == typeof t) {\n        if (t instanceof Array) return \"an array\";\n        {\n            const n = \n            /** Hacky method to try to get the constructor name for an object. */\n            function(t) {\n                if (t.constructor) {\n                    const n = /function\\s+([^\\s(]+)\\s*\\(/.exec(t.constructor.toString());\n                    if (n && n.length > 1) return n[1];\n                }\n                return null;\n            }\n            /**\n * Casts `obj` to `T`, optionally unwrapping Compat types to expose the\n * underlying instance. Throws if  `obj` is not an instance of `T`.\n *\n * This cast is used in the Lite and Full SDK to verify instance types for\n * arguments passed to the public API.\n * @internal\n */ (t);\n            return n ? `a custom ${n} object` : \"an object\";\n        }\n    }\n    return \"function\" == typeof t ? \"a function\" : g();\n}\n\nfunction st(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nn) {\n    if (\"_delegate\" in t && (\n    // Unwrap Compat types\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    t = t._delegate), !(t instanceof n)) {\n        if (n.name === t.constructor.name) throw new U(A, \"Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?\");\n        {\n            const e = rt(t);\n            throw new U(A, `Expected type '${n.name}', but it was: ${e}`);\n        }\n    }\n    return t;\n}\n\nfunction it(t, n) {\n    if (n <= 0) throw new U(A, `Function ${t}() requires a positive number, but it was: ${n}.`);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns whether a variable is either undefined or null.\n */ function ot(t) {\n    return null == t;\n}\n\n/** Returns whether the value represents -0. */ function ut(t) {\n    // Detect if the value is -0.0. Based on polyfill from\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n    return 0 === t && 1 / t == -1 / 0;\n}\n\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value - The value to test for being an integer and in the safe range\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst ct = {\n    BatchGetDocuments: \"batchGet\",\n    Commit: \"commit\",\n    RunQuery: \"runQuery\"\n};\n\n/**\n * Maps RPC names to the corresponding REST endpoint name.\n *\n * We use array notation to avoid mangling.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Error Codes describing the different ways GRPC can fail. These are copied\n * directly from GRPC's sources here:\n *\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n *\n * Important! The names of these identifiers matter because the string forms\n * are used for reverse lookups from the webchannel stream. Do NOT change the\n * names of these identifiers or change this into a const enum.\n */\nvar at, ht;\n\n/**\n * Converts an HTTP Status Code to the equivalent error code.\n *\n * @param status - An HTTP Status Code, like 200, 404, 503, etc.\n * @returns The equivalent Code. Unknown status codes are mapped to\n *     Code.UNKNOWN.\n */\nfunction lt(t) {\n    if (void 0 === t) return p(\"RPC_ERROR\", \"HTTP error has no status\"), T;\n    // The canonical error codes for Google APIs [1] specify mapping onto HTTP\n    // status codes but the mapping is not bijective. In each case of ambiguity\n    // this function chooses a primary error.\n    \n    // [1]\n    // https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n        switch (t) {\n      case 200:\n        // OK\n        return E;\n\n      case 400:\n        // Bad Request\n        return F;\n\n        // Other possibilities based on the forward mapping\n        // return Code.INVALID_ARGUMENT;\n        // return Code.OUT_OF_RANGE;\n              case 401:\n        // Unauthorized\n        return D;\n\n      case 403:\n        // Forbidden\n        return N;\n\n      case 404:\n        // Not Found\n        return R;\n\n      case 409:\n        // Conflict\n        return S;\n\n        // Other possibilities:\n        // return Code.ALREADY_EXISTS;\n              case 416:\n        // Range Not Satisfiable\n        return q;\n\n      case 429:\n        // Too Many Requests\n        return $;\n\n      case 499:\n        // Client Closed Request\n        return I;\n\n      case 500:\n        // Internal Server Error\n        return T;\n\n        // Other possibilities:\n        // return Code.INTERNAL;\n        // return Code.DATA_LOSS;\n              case 501:\n        // Unimplemented\n        return x;\n\n      case 503:\n        // Service Unavailable\n        return C;\n\n      case 504:\n        // Gateway Timeout\n        return P;\n\n      default:\n        return t >= 200 && t < 300 ? E : t >= 400 && t < 500 ? F : t >= 500 && t < 600 ? O : T;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A Rest-based connection that relies on the native HTTP stack\n * (e.g. `fetch` or a polyfill).\n */ (ht = at || (at = {}))[ht.OK = 0] = \"OK\", ht[ht.CANCELLED = 1] = \"CANCELLED\", \nht[ht.UNKNOWN = 2] = \"UNKNOWN\", ht[ht.INVALID_ARGUMENT = 3] = \"INVALID_ARGUMENT\", \nht[ht.DEADLINE_EXCEEDED = 4] = \"DEADLINE_EXCEEDED\", ht[ht.NOT_FOUND = 5] = \"NOT_FOUND\", \nht[ht.ALREADY_EXISTS = 6] = \"ALREADY_EXISTS\", ht[ht.PERMISSION_DENIED = 7] = \"PERMISSION_DENIED\", \nht[ht.UNAUTHENTICATED = 16] = \"UNAUTHENTICATED\", ht[ht.RESOURCE_EXHAUSTED = 8] = \"RESOURCE_EXHAUSTED\", \nht[ht.FAILED_PRECONDITION = 9] = \"FAILED_PRECONDITION\", ht[ht.ABORTED = 10] = \"ABORTED\", \nht[ht.OUT_OF_RANGE = 11] = \"OUT_OF_RANGE\", ht[ht.UNIMPLEMENTED = 12] = \"UNIMPLEMENTED\", \nht[ht.INTERNAL = 13] = \"INTERNAL\", ht[ht.UNAVAILABLE = 14] = \"UNAVAILABLE\", ht[ht.DATA_LOSS = 15] = \"DATA_LOSS\";\n\nclass ft extends \n/**\n * Base class for all Rest-based connections to the backend (WebChannel and\n * HTTP).\n */\nclass {\n    constructor(t) {\n        this.databaseInfo = t, this.databaseId = t.databaseId;\n        const n = t.ssl ? \"https\" : \"http\";\n        this.u = n + \"://\" + t.host, this.h = \"projects/\" + this.databaseId.projectId + \"/databases/\" + this.databaseId.database + \"/documents\";\n    }\n    l(t, n, e, r) {\n        const s = this.m(t, n);\n        m(\"RestConnection\", \"Sending: \", s, e);\n        const i = {};\n        return this.p(i, r), this.g(t, s, i, e).then((t => (m(\"RestConnection\", \"Received: \", t), \n        t)), (n => {\n            throw y(\"RestConnection\", `${t} failed with error: `, n, \"url: \", s, \"request:\", e), \n            n;\n        }));\n    }\n    v(t, n, e, r) {\n        // The REST API automatically aggregates all of the streamed results, so we\n        // can just use the normal invoke() method.\n        return this.l(t, n, e, r);\n    }\n    /**\n     * Modifies the headers for a request, adding any authorization token if\n     * present and any additional headers for the request.\n     */    p(t, n) {\n        if (t[\"X-Goog-Api-Client\"] = \"gl-js/ fire/\" + f, \n        // Content-Type: text/plain will avoid preflight requests which might\n        // mess with CORS and redirects by proxies. If we add custom headers\n        // we will need to change this code to potentially use the $httpOverwrite\n        // parameter supported by ESF to avoid triggering preflight requests.\n        t[\"Content-Type\"] = \"text/plain\", this.databaseInfo.appId && (t[\"X-Firebase-GMPID\"] = this.databaseInfo.appId), \n        n) for (const e in n.authHeaders) n.authHeaders.hasOwnProperty(e) && (t[e] = n.authHeaders[e]);\n    }\n    m(t, n) {\n        const e = ct[t];\n        return `${this.u}/v1/${n}:${e}`;\n    }\n} {\n    /**\n     * @param databaseInfo - The connection info.\n     * @param fetchImpl - `fetch` or a Polyfill that implements the fetch API.\n     */\n    constructor(t, n) {\n        super(t), this.I = n;\n    }\n    T(t, n) {\n        throw new Error(\"Not supported by FetchConnection\");\n    }\n    async g(t, n, e, r) {\n        const s = JSON.stringify(r);\n        let i;\n        try {\n            i = await this.I(n, {\n                method: \"POST\",\n                headers: e,\n                body: s\n            });\n        } catch (t) {\n            throw new U(lt(t.status), \"Request failed with error: \" + t.statusText);\n        }\n        if (!i.ok) throw new U(lt(i.status), \"Request failed with error: \" + i.statusText);\n        return i.json();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Initializes the HTTP connection for the REST API. */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Generates `nBytes` of random bytes.\n *\n * If `nBytes < 0` , an error will be thrown.\n */\nfunction dt(t) {\n    // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.\n    const n = \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    \"undefined\" != typeof self && (self.crypto || self.msCrypto), e = new Uint8Array(t);\n    if (n && \"function\" == typeof n.getRandomValues) n.getRandomValues(e); else \n    // Falls back to Math.random\n    for (let n = 0; n < t; n++) e[n] = Math.floor(256 * Math.random());\n    return e;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class wt {\n    static A() {\n        // Alphanumeric characters\n        const t = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", n = Math.floor(256 / t.length) * t.length;\n        // The largest byte value that is a multiple of `char.length`.\n                let e = \"\";\n        for (;e.length < 20; ) {\n            const r = dt(40);\n            for (let s = 0; s < r.length; ++s) \n            // Only accept values that are [0, maxMultiple), this ensures they can\n            // be evenly mapped to indices of `chars` via a modulo operation.\n            e.length < 20 && r[s] < n && (e += t.charAt(r[s] % t.length));\n        }\n        return e;\n    }\n}\n\nfunction mt(t, n) {\n    return t < n ? -1 : t > n ? 1 : 0;\n}\n\n/** Helper to compare arrays using isEqual(). */ function pt(t, n, e) {\n    return t.length === n.length && t.every(((t, r) => e(t, n[r])));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The earliest date supported by Firestore timestamps (0001-01-01T00:00:00Z).\n/**\n * A `Timestamp` represents a point in time independent of any time zone or\n * calendar, represented as seconds and fractions of seconds at nanosecond\n * resolution in UTC Epoch time.\n *\n * It is encoded using the Proleptic Gregorian Calendar which extends the\n * Gregorian calendar backwards to year one. It is encoded assuming all minutes\n * are 60 seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n * table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to\n * 9999-12-31T23:59:59.999999999Z.\n *\n * For examples and further specifications, refer to the\n * {@link https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto | Timestamp definition}.\n */\nclass yt {\n    /**\n     * Creates a new timestamp.\n     *\n     * @param seconds - The number of seconds of UTC time since Unix epoch\n     *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n     *     9999-12-31T23:59:59Z inclusive.\n     * @param nanoseconds - The non-negative fractions of a second at nanosecond\n     *     resolution. Negative second values with fractions must still have\n     *     non-negative nanoseconds values that count forward in time. Must be\n     *     from 0 to 999,999,999 inclusive.\n     */\n    constructor(\n    /**\n     * The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z.\n     */\n    t, \n    /**\n     * The fractions of a second at nanosecond resolution.*\n     */\n    n) {\n        if (this.seconds = t, this.nanoseconds = n, n < 0) throw new U(A, \"Timestamp nanoseconds out of range: \" + n);\n        if (n >= 1e9) throw new U(A, \"Timestamp nanoseconds out of range: \" + n);\n        if (t < -62135596800) throw new U(A, \"Timestamp seconds out of range: \" + t);\n        // This will break in the year 10,000.\n                if (t >= 253402300800) throw new U(A, \"Timestamp seconds out of range: \" + t);\n    }\n    /**\n     * Creates a new timestamp with the current date, with millisecond precision.\n     *\n     * @returns a new timestamp representing the current date.\n     */    static now() {\n        return yt.fromMillis(Date.now());\n    }\n    /**\n     * Creates a new timestamp from the given date.\n     *\n     * @param date - The date to initialize the `Timestamp` from.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     date.\n     */    static fromDate(t) {\n        return yt.fromMillis(t.getTime());\n    }\n    /**\n     * Creates a new timestamp from the given number of milliseconds.\n     *\n     * @param milliseconds - Number of milliseconds since Unix epoch\n     *     1970-01-01T00:00:00Z.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     number of milliseconds.\n     */    static fromMillis(t) {\n        const n = Math.floor(t / 1e3), e = Math.floor(1e6 * (t - 1e3 * n));\n        return new yt(n, e);\n    }\n    /**\n     * Converts a `Timestamp` to a JavaScript `Date` object. This conversion\n     * causes a loss of precision since `Date` objects only support millisecond\n     * precision.\n     *\n     * @returns JavaScript `Date` object representing the same point in time as\n     *     this `Timestamp`, with millisecond precision.\n     */    toDate() {\n        return new Date(this.toMillis());\n    }\n    /**\n     * Converts a `Timestamp` to a numeric timestamp (in milliseconds since\n     * epoch). This operation causes a loss of precision.\n     *\n     * @returns The point in time corresponding to this timestamp, represented as\n     *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.\n     */    toMillis() {\n        return 1e3 * this.seconds + this.nanoseconds / 1e6;\n    }\n    _compareTo(t) {\n        return this.seconds === t.seconds ? mt(this.nanoseconds, t.nanoseconds) : mt(this.seconds, t.seconds);\n    }\n    /**\n     * Returns true if this `Timestamp` is equal to the provided one.\n     *\n     * @param other - The `Timestamp` to compare against.\n     * @returns true if this `Timestamp` is equal to the provided one.\n     */    isEqual(t) {\n        return t.seconds === this.seconds && t.nanoseconds === this.nanoseconds;\n    }\n    /** Returns a textual representation of this `Timestamp`. */    toString() {\n        return \"Timestamp(seconds=\" + this.seconds + \", nanoseconds=\" + this.nanoseconds + \")\";\n    }\n    /** Returns a JSON-serializable representation of this `Timestamp`. */    toJSON() {\n        return {\n            seconds: this.seconds,\n            nanoseconds: this.nanoseconds\n        };\n    }\n    /**\n     * Converts this object to a primitive string, which allows `Timestamp` objects\n     * to be compared using the `>`, `<=`, `>=` and `>` operators.\n     */    valueOf() {\n        // This method returns a string of the form <seconds>.<nanoseconds> where\n        // <seconds> is translated to have a non-negative value and both <seconds>\n        // and <nanoseconds> are left-padded with zeroes to be a consistent length.\n        // Strings with this format then have a lexiographical ordering that matches\n        // the expected ordering. The <seconds> translation is done to avoid having\n        // a leading negative sign (i.e. a leading '-' character) in its string\n        // representation, which would affect its lexiographical ordering.\n        const t = this.seconds - -62135596800;\n        // Note: Up to 12 decimal digits are required to represent all valid\n        // 'seconds' values.\n                return String(t).padStart(12, \"0\") + \".\" + String(this.nanoseconds).padStart(9, \"0\");\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A version of a document in Firestore. This corresponds to the version\n * timestamp, such as update_time or read_time.\n */ class _t {\n    constructor(t) {\n        this.timestamp = t;\n    }\n    static fromTimestamp(t) {\n        return new _t(t);\n    }\n    static min() {\n        return new _t(new yt(0, 0));\n    }\n    compareTo(t) {\n        return this.timestamp._compareTo(t.timestamp);\n    }\n    isEqual(t) {\n        return this.timestamp.isEqual(t.timestamp);\n    }\n    /** Returns a number representation of the version for use in spec tests. */    toMicroseconds() {\n        // Convert to microseconds.\n        return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;\n    }\n    toString() {\n        return \"SnapshotVersion(\" + this.timestamp.toString() + \")\";\n    }\n    toTimestamp() {\n        return this.timestamp;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function gt(t) {\n    let n = 0;\n    for (const e in t) Object.prototype.hasOwnProperty.call(t, e) && n++;\n    return n;\n}\n\nfunction bt(t, n) {\n    for (const e in t) Object.prototype.hasOwnProperty.call(t, e) && n(e, t[e]);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Provides a set of fields that can be used to partially patch a document.\n * FieldMask is used in conjunction with ObjectValue.\n * Examples:\n *   foo - Overwrites foo entirely with the provided value. If foo is not\n *         present in the companion ObjectValue, the field is deleted.\n *   foo.bar - Overwrites only the field bar of the object foo.\n *             If foo is not an object, foo is replaced with an object\n *             containing foo\n */\nclass vt {\n    constructor(t) {\n        this.fields = t, \n        // TODO(dimond): validation of FieldMask\n        // Sort the field mask to support `FieldMask.isEqual()` and assert below.\n        t.sort(Z.comparator);\n    }\n    /**\n     * Verifies that `fieldPath` is included by at least one field in this field\n     * mask.\n     *\n     * This is an O(n) operation, where `n` is the size of the field mask.\n     */    covers(t) {\n        for (const n of this.fields) if (n.isPrefixOf(t)) return !0;\n        return !1;\n    }\n    isEqual(t) {\n        return pt(this.fields, t.fields, ((t, n) => t.isEqual(n)));\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Converts a Base64 encoded string to a binary string. */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Immutable class that represents a \"proto\" byte string.\n *\n * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when\n * sent on the wire. This class abstracts away this differentiation by holding\n * the proto byte string in a common class that must be converted into a string\n * before being sent as a proto.\n * @internal\n */\nclass Et {\n    constructor(t) {\n        this.binaryString = t;\n    }\n    static fromBase64String(t) {\n        const n = atob(t);\n        return new Et(n);\n    }\n    static fromUint8Array(t) {\n        const n = \n        /**\n * Helper function to convert an Uint8array to a binary string.\n */\n        function(t) {\n            let n = \"\";\n            for (let e = 0; e < t.length; ++e) n += String.fromCharCode(t[e]);\n            return n;\n        }\n        /**\n * Helper function to convert a binary string to an Uint8Array.\n */ (t);\n        return new Et(n);\n    }\n    toBase64() {\n        return t = this.binaryString, btoa(t);\n        /** Converts a binary string to a Base64 encoded string. */\n        var t;\n    }\n    toUint8Array() {\n        return function(t) {\n            const n = new Uint8Array(t.length);\n            for (let e = 0; e < t.length; e++) n[e] = t.charCodeAt(e);\n            return n;\n        }\n        /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n        // A RegExp matching ISO 8601 UTC timestamps with optional fraction.\n        (this.binaryString);\n    }\n    approximateByteSize() {\n        return 2 * this.binaryString.length;\n    }\n    compareTo(t) {\n        return mt(this.binaryString, t.binaryString);\n    }\n    isEqual(t) {\n        return this.binaryString === t.binaryString;\n    }\n}\n\nEt.EMPTY_BYTE_STRING = new Et(\"\");\n\nconst It = new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);\n\n/**\n * Converts the possible Proto values for a timestamp value into a \"seconds and\n * nanos\" representation.\n */ function Tt(t) {\n    // The json interface (for the browser) will return an iso timestamp string,\n    // while the proto js library (for node) will return a\n    // google.protobuf.Timestamp instance.\n    if (b(!!t), \"string\" == typeof t) {\n        // The date string can have higher precision (nanos) than the Date class\n        // (millis), so we do some custom parsing here.\n        // Parse the nanos right out of the string.\n        let n = 0;\n        const e = It.exec(t);\n        if (b(!!e), e[1]) {\n            // Pad the fraction out to 9 digits (nanos).\n            let t = e[1];\n            t = (t + \"000000000\").substr(0, 9), n = Number(t);\n        }\n        // Parse the date to get the seconds.\n                const r = new Date(t);\n        return {\n            seconds: Math.floor(r.getTime() / 1e3),\n            nanos: n\n        };\n    }\n    return {\n        seconds: At(t.seconds),\n        nanos: At(t.nanos)\n    };\n}\n\n/**\n * Converts the possible Proto types for numbers into a JavaScript number.\n * Returns 0 if the value is not numeric.\n */ function At(t) {\n    // TODO(bjornick): Handle int64 greater than 53 bits.\n    return \"number\" == typeof t ? t : \"string\" == typeof t ? Number(t) : 0;\n}\n\n/** Converts the possible Proto types for Blobs into a ByteString. */ function Pt(t) {\n    return \"string\" == typeof t ? Et.fromBase64String(t) : Et.fromUint8Array(t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a locally-applied ServerTimestamp.\n *\n * Server Timestamps are backed by MapValues that contain an internal field\n * `__type__` with a value of `server_timestamp`. The previous value and local\n * write time are stored in its `__previous_value__` and `__local_write_time__`\n * fields respectively.\n *\n * Notes:\n * - ServerTimestampValue instances are created as the result of applying a\n *   transform. They can only exist in the local view of a document. Therefore\n *   they do not need to be parsed or serialized.\n * - When evaluated locally (e.g. for snapshot.data()), they by default\n *   evaluate to `null`. This behavior can be configured by passing custom\n *   FieldValueOptions to value().\n * - With respect to other ServerTimestampValues, they sort by their\n *   localWriteTime.\n */ function Rt(t) {\n    var n, e;\n    return \"server_timestamp\" === (null === (e = ((null === (n = null == t ? void 0 : t.mapValue) || void 0 === n ? void 0 : n.fields) || {}).__type__) || void 0 === e ? void 0 : e.stringValue);\n}\n\n/**\n * Returns the value of the field before this ServerTimestamp was set.\n *\n * Preserving the previous values allows the user to display the last resoled\n * value until the backend responds with the timestamp.\n */ function Vt(t) {\n    const n = t.mapValue.fields.__previous_value__;\n    return Rt(n) ? Vt(n) : n;\n}\n\n/**\n * Returns the local time at which this timestamp was first set.\n */ function Nt(t) {\n    const n = Tt(t.mapValue.fields.__local_write_time__.timestampValue);\n    return new yt(n.seconds, n.nanos);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Extracts the backend's type order for the provided value. */ function Dt(t) {\n    return \"nullValue\" in t ? 0 /* NullValue */ : \"booleanValue\" in t ? 1 /* BooleanValue */ : \"integerValue\" in t || \"doubleValue\" in t ? 2 /* NumberValue */ : \"timestampValue\" in t ? 3 /* TimestampValue */ : \"stringValue\" in t ? 5 /* StringValue */ : \"bytesValue\" in t ? 6 /* BlobValue */ : \"referenceValue\" in t ? 7 /* RefValue */ : \"geoPointValue\" in t ? 8 /* GeoPointValue */ : \"arrayValue\" in t ? 9 /* ArrayValue */ : \"mapValue\" in t ? Rt(t) ? 4 /* ServerTimestampValue */ : 10 /* ObjectValue */ : g();\n}\n\n/** Tests `left` and `right` for equality based on the backend semantics. */ function $t(t, n) {\n    const e = Dt(t);\n    if (e !== Dt(n)) return !1;\n    switch (e) {\n      case 0 /* NullValue */ :\n        return !0;\n\n      case 1 /* BooleanValue */ :\n        return t.booleanValue === n.booleanValue;\n\n      case 4 /* ServerTimestampValue */ :\n        return Nt(t).isEqual(Nt(n));\n\n      case 3 /* TimestampValue */ :\n        return function(t, n) {\n            if (\"string\" == typeof t.timestampValue && \"string\" == typeof n.timestampValue && t.timestampValue.length === n.timestampValue.length) \n            // Use string equality for ISO 8601 timestamps\n            return t.timestampValue === n.timestampValue;\n            const e = Tt(t.timestampValue), r = Tt(n.timestampValue);\n            return e.seconds === r.seconds && e.nanos === r.nanos;\n        }(t, n);\n\n      case 5 /* StringValue */ :\n        return t.stringValue === n.stringValue;\n\n      case 6 /* BlobValue */ :\n        return function(t, n) {\n            return Pt(t.bytesValue).isEqual(Pt(n.bytesValue));\n        }(t, n);\n\n      case 7 /* RefValue */ :\n        return t.referenceValue === n.referenceValue;\n\n      case 8 /* GeoPointValue */ :\n        return function(t, n) {\n            return At(t.geoPointValue.latitude) === At(n.geoPointValue.latitude) && At(t.geoPointValue.longitude) === At(n.geoPointValue.longitude);\n        }(t, n);\n\n      case 2 /* NumberValue */ :\n        return function(t, n) {\n            if (\"integerValue\" in t && \"integerValue\" in n) return At(t.integerValue) === At(n.integerValue);\n            if (\"doubleValue\" in t && \"doubleValue\" in n) {\n                const e = At(t.doubleValue), r = At(n.doubleValue);\n                return e === r ? ut(e) === ut(r) : isNaN(e) && isNaN(r);\n            }\n            return !1;\n        }(t, n);\n\n      case 9 /* ArrayValue */ :\n        return pt(t.arrayValue.values || [], n.arrayValue.values || [], $t);\n\n      case 10 /* ObjectValue */ :\n        return function(t, n) {\n            const e = t.mapValue.fields || {}, r = n.mapValue.fields || {};\n            if (gt(e) !== gt(r)) return !1;\n            for (const t in e) if (e.hasOwnProperty(t) && (void 0 === r[t] || !$t(e[t], r[t]))) return !1;\n            return !0;\n        }\n        /** Returns true if the ArrayValue contains the specified element. */ (t, n);\n\n      default:\n        return g();\n    }\n}\n\nfunction Ft(t, n) {\n    return void 0 !== (t.values || []).find((t => $t(t, n)));\n}\n\nfunction St(t, n) {\n    const e = Dt(t), r = Dt(n);\n    if (e !== r) return mt(e, r);\n    switch (e) {\n      case 0 /* NullValue */ :\n        return 0;\n\n      case 1 /* BooleanValue */ :\n        return mt(t.booleanValue, n.booleanValue);\n\n      case 2 /* NumberValue */ :\n        return function(t, n) {\n            const e = At(t.integerValue || t.doubleValue), r = At(n.integerValue || n.doubleValue);\n            return e < r ? -1 : e > r ? 1 : e === r ? 0 : \n            // one or both are NaN.\n            isNaN(e) ? isNaN(r) ? 0 : -1 : 1;\n        }(t, n);\n\n      case 3 /* TimestampValue */ :\n        return qt(t.timestampValue, n.timestampValue);\n\n      case 4 /* ServerTimestampValue */ :\n        return qt(Nt(t), Nt(n));\n\n      case 5 /* StringValue */ :\n        return mt(t.stringValue, n.stringValue);\n\n      case 6 /* BlobValue */ :\n        return function(t, n) {\n            const e = Pt(t), r = Pt(n);\n            return e.compareTo(r);\n        }(t.bytesValue, n.bytesValue);\n\n      case 7 /* RefValue */ :\n        return function(t, n) {\n            const e = t.split(\"/\"), r = n.split(\"/\");\n            for (let t = 0; t < e.length && t < r.length; t++) {\n                const n = mt(e[t], r[t]);\n                if (0 !== n) return n;\n            }\n            return mt(e.length, r.length);\n        }(t.referenceValue, n.referenceValue);\n\n      case 8 /* GeoPointValue */ :\n        return function(t, n) {\n            const e = mt(At(t.latitude), At(n.latitude));\n            if (0 !== e) return e;\n            return mt(At(t.longitude), At(n.longitude));\n        }(t.geoPointValue, n.geoPointValue);\n\n      case 9 /* ArrayValue */ :\n        return function(t, n) {\n            const e = t.values || [], r = n.values || [];\n            for (let t = 0; t < e.length && t < r.length; ++t) {\n                const n = St(e[t], r[t]);\n                if (n) return n;\n            }\n            return mt(e.length, r.length);\n        }(t.arrayValue, n.arrayValue);\n\n      case 10 /* ObjectValue */ :\n        return function(t, n) {\n            const e = t.fields || {}, r = Object.keys(e), s = n.fields || {}, i = Object.keys(s);\n            // Even though MapValues are likely sorted correctly based on their insertion\n            // order (e.g. when received from the backend), local modifications can bring\n            // elements out of order. We need to re-sort the elements to ensure that\n            // canonical IDs are independent of insertion order.\n            r.sort(), i.sort();\n            for (let t = 0; t < r.length && t < i.length; ++t) {\n                const n = mt(r[t], i[t]);\n                if (0 !== n) return n;\n                const o = St(e[r[t]], s[i[t]]);\n                if (0 !== o) return o;\n            }\n            return mt(r.length, i.length);\n        }\n        /** Returns a reference value for the provided database and key. */ (t.mapValue, n.mapValue);\n\n      default:\n        throw g();\n    }\n}\n\nfunction qt(t, n) {\n    if (\"string\" == typeof t && \"string\" == typeof n && t.length === n.length) return mt(t, n);\n    const e = Tt(t), r = Tt(n), s = mt(e.seconds, r.seconds);\n    return 0 !== s ? s : mt(e.nanos, r.nanos);\n}\n\nfunction xt(t, n) {\n    return {\n        referenceValue: `projects/${t.projectId}/databases/${t.database}/documents/${n.path.canonicalString()}`\n    };\n}\n\n/** Returns true if `value` is an ArrayValue. */ function Ot(t) {\n    return !!t && \"arrayValue\" in t;\n}\n\n/** Returns true if `value` is a NullValue. */ function Ct(t) {\n    return !!t && \"nullValue\" in t;\n}\n\n/** Returns true if `value` is NaN. */ function Lt(t) {\n    return !!t && \"doubleValue\" in t && isNaN(Number(t.doubleValue));\n}\n\n/** Returns true if `value` is a MapValue. */ function Ut(t) {\n    return !!t && \"mapValue\" in t;\n}\n\n/** Creates a deep copy of `source`. */ function jt(t) {\n    if (t.geoPointValue) return {\n        geoPointValue: Object.assign({}, t.geoPointValue)\n    };\n    if (t.timestampValue && \"object\" == typeof t.timestampValue) return {\n        timestampValue: Object.assign({}, t.timestampValue)\n    };\n    if (t.mapValue) {\n        const n = {\n            mapValue: {\n                fields: {}\n            }\n        };\n        return bt(t.mapValue.fields, ((t, e) => n.mapValue.fields[t] = jt(e))), n;\n    }\n    if (t.arrayValue) {\n        const n = {\n            arrayValue: {\n                values: []\n            }\n        };\n        for (let e = 0; e < (t.arrayValue.values || []).length; ++e) n.arrayValue.values[e] = jt(t.arrayValue.values[e]);\n        return n;\n    }\n    return Object.assign({}, t);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An ObjectValue represents a MapValue in the Firestore Proto and offers the\n * ability to add and remove fields (via the ObjectValueBuilder).\n */ class kt {\n    constructor(t) {\n        this.value = t;\n    }\n    static empty() {\n        return new kt({\n            mapValue: {}\n        });\n    }\n    /**\n     * Returns the value at the given path or null.\n     *\n     * @param path - the path to search\n     * @returns The value at the path or null if the path is not set.\n     */    field(t) {\n        if (t.isEmpty()) return this.value;\n        {\n            let n = this.value;\n            for (let e = 0; e < t.length - 1; ++e) if (n = (n.mapValue.fields || {})[t.get(e)], \n            !Ut(n)) return null;\n            return n = (n.mapValue.fields || {})[t.lastSegment()], n || null;\n        }\n    }\n    /**\n     * Sets the field to the provided value.\n     *\n     * @param path - The field path to set.\n     * @param value - The value to set.\n     */    set(t, n) {\n        this.getFieldsMap(t.popLast())[t.lastSegment()] = jt(n);\n    }\n    /**\n     * Sets the provided fields to the provided values.\n     *\n     * @param data - A map of fields to values (or null for deletes).\n     */    setAll(t) {\n        let n = Z.emptyPath(), e = {}, r = [];\n        t.forEach(((t, s) => {\n            if (!n.isImmediateParentOf(s)) {\n                // Insert the accumulated changes at this parent location\n                const t = this.getFieldsMap(n);\n                this.applyChanges(t, e, r), e = {}, r = [], n = s.popLast();\n            }\n            t ? e[s.lastSegment()] = jt(t) : r.push(s.lastSegment());\n        }));\n        const s = this.getFieldsMap(n);\n        this.applyChanges(s, e, r);\n    }\n    /**\n     * Removes the field at the specified path. If there is no field at the\n     * specified path, nothing is changed.\n     *\n     * @param path - The field path to remove.\n     */    delete(t) {\n        const n = this.field(t.popLast());\n        Ut(n) && n.mapValue.fields && delete n.mapValue.fields[t.lastSegment()];\n    }\n    isEqual(t) {\n        return $t(this.value, t.value);\n    }\n    /**\n     * Returns the map that contains the leaf element of `path`. If the parent\n     * entry does not yet exist, or if it is not a map, a new map will be created.\n     */    getFieldsMap(t) {\n        let n = this.value;\n        n.mapValue.fields || (n.mapValue = {\n            fields: {}\n        });\n        for (let e = 0; e < t.length; ++e) {\n            let r = n.mapValue.fields[t.get(e)];\n            Ut(r) && r.mapValue.fields || (r = {\n                mapValue: {\n                    fields: {}\n                }\n            }, n.mapValue.fields[t.get(e)] = r), n = r;\n        }\n        return n.mapValue.fields;\n    }\n    /**\n     * Modifies `fieldsMap` by adding, replacing or deleting the specified\n     * entries.\n     */    applyChanges(t, n, e) {\n        bt(n, ((n, e) => t[n] = e));\n        for (const n of e) delete t[n];\n    }\n    clone() {\n        return new kt(jt(this.value));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a document in Firestore with a key, version, data and whether it\n * has local mutations applied to it.\n *\n * Documents can transition between states via `convertToFoundDocument()`,\n * `convertToNoDocument()` and `convertToUnknownDocument()`. If a document does\n * not transition to one of these states even after all mutations have been\n * applied, `isValidDocument()` returns false and the document should be removed\n * from all views.\n */ class Mt {\n    constructor(t, n, e, r, s) {\n        this.key = t, this.documentType = n, this.version = e, this.data = r, this.documentState = s;\n    }\n    /**\n     * Creates a document with no known version or data, but which can serve as\n     * base document for mutations.\n     */    static newInvalidDocument(t) {\n        return new Mt(t, 0 /* INVALID */ , _t.min(), kt.empty(), 0 /* SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist with the given data at the\n     * given version.\n     */    static newFoundDocument(t, n, e) {\n        return new Mt(t, 1 /* FOUND_DOCUMENT */ , n, e, 0 /* SYNCED */);\n    }\n    /** Creates a new document that is known to not exist at the given version. */    static newNoDocument(t, n) {\n        return new Mt(t, 2 /* NO_DOCUMENT */ , n, kt.empty(), 0 /* SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist at the given version but\n     * whose data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    static newUnknownDocument(t, n) {\n        return new Mt(t, 3 /* UNKNOWN_DOCUMENT */ , n, kt.empty(), 2 /* HAS_COMMITTED_MUTATIONS */);\n    }\n    /**\n     * Changes the document type to indicate that it exists and that its version\n     * and data are known.\n     */    convertToFoundDocument(t, n) {\n        return this.version = t, this.documentType = 1 /* FOUND_DOCUMENT */ , this.data = n, \n        this.documentState = 0 /* SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it doesn't exist at the given\n     * version.\n     */    convertToNoDocument(t) {\n        return this.version = t, this.documentType = 2 /* NO_DOCUMENT */ , this.data = kt.empty(), \n        this.documentState = 0 /* SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it exists at a given version but\n     * that its data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    convertToUnknownDocument(t) {\n        return this.version = t, this.documentType = 3 /* UNKNOWN_DOCUMENT */ , this.data = kt.empty(), \n        this.documentState = 2 /* HAS_COMMITTED_MUTATIONS */ , this;\n    }\n    setHasCommittedMutations() {\n        return this.documentState = 2 /* HAS_COMMITTED_MUTATIONS */ , this;\n    }\n    setHasLocalMutations() {\n        return this.documentState = 1 /* HAS_LOCAL_MUTATIONS */ , this;\n    }\n    get hasLocalMutations() {\n        return 1 /* HAS_LOCAL_MUTATIONS */ === this.documentState;\n    }\n    get hasCommittedMutations() {\n        return 2 /* HAS_COMMITTED_MUTATIONS */ === this.documentState;\n    }\n    get hasPendingWrites() {\n        return this.hasLocalMutations || this.hasCommittedMutations;\n    }\n    isValidDocument() {\n        return 0 /* INVALID */ !== this.documentType;\n    }\n    isFoundDocument() {\n        return 1 /* FOUND_DOCUMENT */ === this.documentType;\n    }\n    isNoDocument() {\n        return 2 /* NO_DOCUMENT */ === this.documentType;\n    }\n    isUnknownDocument() {\n        return 3 /* UNKNOWN_DOCUMENT */ === this.documentType;\n    }\n    isEqual(t) {\n        return t instanceof Mt && this.key.isEqual(t.key) && this.version.isEqual(t.version) && this.documentType === t.documentType && this.documentState === t.documentState && this.data.isEqual(t.data);\n    }\n    clone() {\n        return new Mt(this.key, this.documentType, this.version, this.data.clone(), this.documentState);\n    }\n    toString() {\n        return `Document(${this.key}, ${this.version}, ${JSON.stringify(this.data.value)}, {documentType: ${this.documentType}}), {documentState: ${this.documentState}})`;\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Visible for testing\nclass Bt {\n    constructor(t, n = null, e = [], r = [], s = null, i = null, o = null) {\n        this.path = t, this.collectionGroup = n, this.orderBy = e, this.filters = r, this.limit = s, \n        this.startAt = i, this.endAt = o, this.P = null;\n    }\n}\n\n/**\n * Initializes a Target with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n *\n * NOTE: you should always construct `Target` from `Query.toTarget` instead of\n * using this factory method, because `Query` provides an implicit `orderBy`\n * property.\n */ function Qt(t, n = null, e = [], r = [], s = null, i = null, o = null) {\n    return new Bt(t, n, e, r, s, i, o);\n}\n\nclass zt extends class {} {\n    constructor(t, n, e) {\n        super(), this.field = t, this.op = n, this.value = e;\n    }\n    /**\n     * Creates a filter based on the provided arguments.\n     */    static create(t, n, e) {\n        return t.isKeyField() ? \"in\" /* IN */ === n || \"not-in\" /* NOT_IN */ === n ? this.R(t, n, e) : new Wt(t, n, e) : \"array-contains\" /* ARRAY_CONTAINS */ === n ? new Kt(t, e) : \"in\" /* IN */ === n ? new Jt(t, e) : \"not-in\" /* NOT_IN */ === n ? new Zt(t, e) : \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ === n ? new Xt(t, e) : new zt(t, n, e);\n    }\n    static R(t, n, e) {\n        return \"in\" /* IN */ === n ? new Gt(t, e) : new Ht(t, e);\n    }\n    matches(t) {\n        const n = t.data.field(this.field);\n        // Types do not have to match in NOT_EQUAL filters.\n                return \"!=\" /* NOT_EQUAL */ === this.op ? null !== n && this.V(St(n, this.value)) : null !== n && Dt(this.value) === Dt(n) && this.V(St(n, this.value));\n        // Only compare types with matching backend order (such as double and int).\n        }\n    V(t) {\n        switch (this.op) {\n          case \"<\" /* LESS_THAN */ :\n            return t < 0;\n\n          case \"<=\" /* LESS_THAN_OR_EQUAL */ :\n            return t <= 0;\n\n          case \"==\" /* EQUAL */ :\n            return 0 === t;\n\n          case \"!=\" /* NOT_EQUAL */ :\n            return 0 !== t;\n\n          case \">\" /* GREATER_THAN */ :\n            return t > 0;\n\n          case \">=\" /* GREATER_THAN_OR_EQUAL */ :\n            return t >= 0;\n\n          default:\n            return g();\n        }\n    }\n    N() {\n        return [ \"<\" /* LESS_THAN */ , \"<=\" /* LESS_THAN_OR_EQUAL */ , \">\" /* GREATER_THAN */ , \">=\" /* GREATER_THAN_OR_EQUAL */ , \"!=\" /* NOT_EQUAL */ , \"not-in\" /* NOT_IN */ ].indexOf(this.op) >= 0;\n    }\n}\n\n/** Filter that matches on key fields (i.e. '__name__'). */\nclass Wt extends zt {\n    constructor(t, n, e) {\n        super(t, n, e), this.key = X.fromName(e.referenceValue);\n    }\n    matches(t) {\n        const n = X.comparator(t.key, this.key);\n        return this.V(n);\n    }\n}\n\n/** Filter that matches on key fields within an array. */ class Gt extends zt {\n    constructor(t, n) {\n        super(t, \"in\" /* IN */ , n), this.keys = Yt(\"in\" /* IN */ , n);\n    }\n    matches(t) {\n        return this.keys.some((n => n.isEqual(t.key)));\n    }\n}\n\n/** Filter that matches on key fields not present within an array. */ class Ht extends zt {\n    constructor(t, n) {\n        super(t, \"not-in\" /* NOT_IN */ , n), this.keys = Yt(\"not-in\" /* NOT_IN */ , n);\n    }\n    matches(t) {\n        return !this.keys.some((n => n.isEqual(t.key)));\n    }\n}\n\nfunction Yt(t, n) {\n    var e;\n    return ((null === (e = n.arrayValue) || void 0 === e ? void 0 : e.values) || []).map((t => X.fromName(t.referenceValue)));\n}\n\n/** A Filter that implements the array-contains operator. */ class Kt extends zt {\n    constructor(t, n) {\n        super(t, \"array-contains\" /* ARRAY_CONTAINS */ , n);\n    }\n    matches(t) {\n        const n = t.data.field(this.field);\n        return Ot(n) && Ft(n.arrayValue, this.value);\n    }\n}\n\n/** A Filter that implements the IN operator. */ class Jt extends zt {\n    constructor(t, n) {\n        super(t, \"in\" /* IN */ , n);\n    }\n    matches(t) {\n        const n = t.data.field(this.field);\n        return null !== n && Ft(this.value.arrayValue, n);\n    }\n}\n\n/** A Filter that implements the not-in operator. */ class Zt extends zt {\n    constructor(t, n) {\n        super(t, \"not-in\" /* NOT_IN */ , n);\n    }\n    matches(t) {\n        if (Ft(this.value.arrayValue, {\n            nullValue: \"NULL_VALUE\"\n        })) return !1;\n        const n = t.data.field(this.field);\n        return null !== n && !Ft(this.value.arrayValue, n);\n    }\n}\n\n/** A Filter that implements the array-contains-any operator. */ class Xt extends zt {\n    constructor(t, n) {\n        super(t, \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , n);\n    }\n    matches(t) {\n        const n = t.data.field(this.field);\n        return !(!Ot(n) || !n.arrayValue.values) && n.arrayValue.values.some((t => Ft(this.value.arrayValue, t)));\n    }\n}\n\n/**\n * Represents a bound of a query.\n *\n * The bound is specified with the given components representing a position and\n * whether it's just before or just after the position (relative to whatever the\n * query order is).\n *\n * The position represents a logical index position for a query. It's a prefix\n * of values for the (potentially implicit) order by clauses of a query.\n *\n * Bound provides a function to determine whether a document comes before or\n * after a bound. This is influenced by whether the position is just before or\n * just after the provided values.\n */ class tn {\n    constructor(t, n) {\n        this.position = t, this.before = n;\n    }\n}\n\n/**\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\n */ class nn {\n    constructor(t, n = \"asc\" /* ASCENDING */) {\n        this.field = t, this.dir = n;\n    }\n}\n\nfunction en(t, n) {\n    return t.dir === n.dir && t.field.isEqual(n.field);\n}\n\nfunction rn(t, n) {\n    if (null === t) return null === n;\n    if (null === n) return !1;\n    if (t.before !== n.before || t.position.length !== n.position.length) return !1;\n    for (let e = 0; e < t.position.length; e++) {\n        if (!$t(t.position[e], n.position[e])) return !1;\n    }\n    return !0;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Query encapsulates all the query attributes we support in the SDK. It can\n * be run against the LocalStore, as well as be converted to a `Target` to\n * query the RemoteStore results.\n *\n * Visible for testing.\n */ class sn {\n    /**\n     * Initializes a Query with a path and optional additional query constraints.\n     * Path must currently be empty if this is a collection group query.\n     */\n    constructor(t, n = null, e = [], r = [], s = null, i = \"F\" /* First */ , o = null, u = null) {\n        this.path = t, this.collectionGroup = n, this.explicitOrderBy = e, this.filters = r, \n        this.limit = s, this.limitType = i, this.startAt = o, this.endAt = u, this.D = null, \n        // The corresponding `Target` of this `Query` instance.\n        this.$ = null, this.startAt, this.endAt;\n    }\n}\n\n/** Creates a new Query for a query that matches all documents at `path` */ function on(t) {\n    return !ot(t.limit) && \"L\" /* Last */ === t.limitType;\n}\n\nfunction un(t) {\n    return t.explicitOrderBy.length > 0 ? t.explicitOrderBy[0].field : null;\n}\n\nfunction cn(t) {\n    for (const n of t.filters) if (n.N()) return n.field;\n    return null;\n}\n\n/**\n * Checks if any of the provided Operators are included in the query and\n * returns the first one that is, or null if none are.\n */\n/**\n * Returns whether the query matches a collection group rather than a specific\n * collection.\n */\nfunction an(t) {\n    return null !== t.collectionGroup;\n}\n\n/**\n * Returns the implicit order by constraint that is used to execute the Query,\n * which can be different from the order by constraints the user provided (e.g.\n * the SDK and backend always orders by `__name__`).\n */ function hn(t) {\n    const n = v(t);\n    if (null === n.D) {\n        n.D = [];\n        const t = cn(n), e = un(n);\n        if (null !== t && null === e) \n        // In order to implicitly add key ordering, we must also add the\n        // inequality filter field for it to be a valid query.\n        // Note that the default inequality field and key ordering is ascending.\n        t.isKeyField() || n.D.push(new nn(t)), n.D.push(new nn(Z.keyField(), \"asc\" /* ASCENDING */)); else {\n            let t = !1;\n            for (const e of n.explicitOrderBy) n.D.push(e), e.field.isKeyField() && (t = !0);\n            if (!t) {\n                // The order of the implicit key ordering always matches the last\n                // explicit order by\n                const t = n.explicitOrderBy.length > 0 ? n.explicitOrderBy[n.explicitOrderBy.length - 1].dir : \"asc\" /* ASCENDING */;\n                n.D.push(new nn(Z.keyField(), t));\n            }\n        }\n    }\n    return n.D;\n}\n\n/**\n * Converts this `Query` instance to it's corresponding `Target` representation.\n */ function ln(t) {\n    const n = v(t);\n    if (!n.$) if (\"F\" /* First */ === n.limitType) n.$ = Qt(n.path, n.collectionGroup, hn(n), n.filters, n.limit, n.startAt, n.endAt); else {\n        // Flip the orderBy directions since we want the last results\n        const t = [];\n        for (const e of hn(n)) {\n            const n = \"desc\" /* DESCENDING */ === e.dir ? \"asc\" /* ASCENDING */ : \"desc\" /* DESCENDING */;\n            t.push(new nn(e.field, n));\n        }\n        // We need to swap the cursors to match the now-flipped query ordering.\n                const e = n.endAt ? new tn(n.endAt.position, !n.endAt.before) : null, r = n.startAt ? new tn(n.startAt.position, !n.startAt.before) : null;\n        // Now return as a LimitType.First query.\n        n.$ = Qt(n.path, n.collectionGroup, t, n.filters, n.limit, e, r);\n    }\n    return n.$;\n}\n\nfunction fn(t, n) {\n    return function(t, n) {\n        if (t.limit !== n.limit) return !1;\n        if (t.orderBy.length !== n.orderBy.length) return !1;\n        for (let e = 0; e < t.orderBy.length; e++) if (!en(t.orderBy[e], n.orderBy[e])) return !1;\n        if (t.filters.length !== n.filters.length) return !1;\n        for (let s = 0; s < t.filters.length; s++) if (e = t.filters[s], r = n.filters[s], \n        e.op !== r.op || !e.field.isEqual(r.field) || !$t(e.value, r.value)) return !1;\n        var e, r;\n        return t.collectionGroup === n.collectionGroup && !!t.path.isEqual(n.path) && !!rn(t.startAt, n.startAt) && rn(t.endAt, n.endAt);\n    }(ln(t), ln(n)) && t.limitType === n.limitType;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns an DoubleValue for `value` that is encoded based the serializer's\n * `useProto3Json` setting.\n */\n/**\n * Returns a value for a number that's appropriate to put into a proto.\n * The return value is an IntegerValue if it can safely represent the value,\n * otherwise a DoubleValue is returned.\n */\nfunction dn(t, n) {\n    return function(t) {\n        return \"number\" == typeof t && Number.isInteger(t) && !ut(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;\n    }(n) ? \n    /**\n * Returns an IntegerValue for `value`.\n */\n    function(t) {\n        return {\n            integerValue: \"\" + t\n        };\n    }(n) : function(t, n) {\n        if (t.F) {\n            if (isNaN(n)) return {\n                doubleValue: \"NaN\"\n            };\n            if (n === 1 / 0) return {\n                doubleValue: \"Infinity\"\n            };\n            if (n === -1 / 0) return {\n                doubleValue: \"-Infinity\"\n            };\n        }\n        return {\n            doubleValue: ut(n) ? \"-0\" : n\n        };\n    }(t, n);\n}\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Used to represent a field transform on a mutation. */ class wn {\n    constructor() {\n        // Make sure that the structural type of `TransformOperation` is unique.\n        // See https://github.com/microsoft/TypeScript/issues/5451\n        this._ = void 0;\n    }\n}\n\n/** Transforms a value into a server-generated timestamp. */ class mn extends wn {}\n\n/** Transforms an array value via a union operation. */ class pn extends wn {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/** Transforms an array value via a remove operation. */ class yn extends wn {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/**\n * Implements the backend semantics for locally computed NUMERIC_ADD (increment)\n * transforms. Converts all field values to integers or doubles, but unlike the\n * backend does not cap integer values at 2^63. Instead, JavaScript number\n * arithmetic is used and precision loss can occur for values greater than 2^53.\n */ class _n extends wn {\n    constructor(t, n) {\n        super(), this.S = t, this.q = n;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** A field path and the TransformOperation to perform upon it. */ class gn {\n    constructor(t, n) {\n        this.field = t, this.transform = n;\n    }\n}\n\n/**\n * Encodes a precondition for a mutation. This follows the model that the\n * backend accepts with the special case of an explicit \"empty\" precondition\n * (meaning no precondition).\n */ class bn {\n    constructor(t, n) {\n        this.updateTime = t, this.exists = n;\n    }\n    /** Creates a new empty Precondition. */    static none() {\n        return new bn;\n    }\n    /** Creates a new Precondition with an exists flag. */    static exists(t) {\n        return new bn(void 0, t);\n    }\n    /** Creates a new Precondition based on a version a document exists at. */    static updateTime(t) {\n        return new bn(t);\n    }\n    /** Returns whether this Precondition is empty. */    get isNone() {\n        return void 0 === this.updateTime && void 0 === this.exists;\n    }\n    isEqual(t) {\n        return this.exists === t.exists && (this.updateTime ? !!t.updateTime && this.updateTime.isEqual(t.updateTime) : !t.updateTime);\n    }\n}\n\n/**\n * A mutation describes a self-contained change to a document. Mutations can\n * create, replace, delete, and update subsets of documents.\n *\n * Mutations not only act on the value of the document but also its version.\n *\n * For local mutations (mutations that haven't been committed yet), we preserve\n * the existing version for Set and Patch mutations. For Delete mutations, we\n * reset the version to 0.\n *\n * Here's the expected transition table.\n *\n * MUTATION           APPLIED TO            RESULTS IN\n *\n * SetMutation        Document(v3)          Document(v3)\n * SetMutation        NoDocument(v3)        Document(v0)\n * SetMutation        InvalidDocument(v0)   Document(v0)\n * PatchMutation      Document(v3)          Document(v3)\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\n * PatchMutation      InvalidDocument(v0)   UnknownDocument(v3)\n * DeleteMutation     Document(v3)          NoDocument(v0)\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\n * DeleteMutation     InvalidDocument(v0)   NoDocument(v0)\n *\n * For acknowledged mutations, we use the updateTime of the WriteResponse as\n * the resulting version for Set and Patch mutations. As deletes have no\n * explicit update time, we use the commitTime of the WriteResponse for\n * Delete mutations.\n *\n * If a mutation is acknowledged by the backend but fails the precondition check\n * locally, we transition to an `UnknownDocument` and rely on Watch to send us\n * the updated version.\n *\n * Field transforms are used only with Patch and Set Mutations. We use the\n * `updateTransforms` message to store transforms, rather than the `transforms`s\n * messages.\n *\n * ## Subclassing Notes\n *\n * Every type of mutation needs to implement its own applyToRemoteDocument() and\n * applyToLocalView() to implement the actual behavior of applying the mutation\n * to some source document (see `applySetMutationToRemoteDocument()` for an\n * example).\n */ class vn {}\n\n/**\n * A mutation that creates or replaces the document at the given key with the\n * object value contents.\n */ class En extends vn {\n    constructor(t, n, e, r = []) {\n        super(), this.key = t, this.value = n, this.precondition = e, this.fieldTransforms = r, \n        this.type = 0 /* Set */;\n    }\n}\n\n/**\n * A mutation that modifies fields of the document at the given key with the\n * given values. The values are applied through a field mask:\n *\n *  * When a field is in both the mask and the values, the corresponding field\n *    is updated.\n *  * When a field is in neither the mask nor the values, the corresponding\n *    field is unmodified.\n *  * When a field is in the mask but not in the values, the corresponding field\n *    is deleted.\n *  * When a field is not in the mask but is in the values, the values map is\n *    ignored.\n */ class In extends vn {\n    constructor(t, n, e, r, s = []) {\n        super(), this.key = t, this.data = n, this.fieldMask = e, this.precondition = r, \n        this.fieldTransforms = s, this.type = 1 /* Patch */;\n    }\n}\n\n/** A mutation that deletes the document at the given key. */ class Tn extends vn {\n    constructor(t, n) {\n        super(), this.key = t, this.precondition = n, this.type = 2 /* Delete */ , this.fieldTransforms = [];\n    }\n}\n\n/**\n * A mutation that verifies the existence of the document at the given key with\n * the provided precondition.\n *\n * The `verify` operation is only used in Transactions, and this class serves\n * primarily to facilitate serialization into protos.\n */ class An extends vn {\n    constructor(t, n) {\n        super(), this.key = t, this.precondition = n, this.type = 3 /* Verify */ , this.fieldTransforms = [];\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Pn = (() => {\n    const t = {\n        asc: \"ASCENDING\",\n        desc: \"DESCENDING\"\n    };\n    return t;\n})(), Rn = (() => {\n    const t = {\n        \"<\": \"LESS_THAN\",\n        \"<=\": \"LESS_THAN_OR_EQUAL\",\n        \">\": \"GREATER_THAN\",\n        \">=\": \"GREATER_THAN_OR_EQUAL\",\n        \"==\": \"EQUAL\",\n        \"!=\": \"NOT_EQUAL\",\n        \"array-contains\": \"ARRAY_CONTAINS\",\n        in: \"IN\",\n        \"not-in\": \"NOT_IN\",\n        \"array-contains-any\": \"ARRAY_CONTAINS_ANY\"\n    };\n    return t;\n})();\n\n/**\n * This class generates JsonObject values for the Datastore API suitable for\n * sending to either GRPC stub methods or via the JSON/HTTP REST API.\n *\n * The serializer supports both Protobuf.js and Proto3 JSON formats. By\n * setting `useProto3Json` to true, the serializer will use the Proto3 JSON\n * format.\n *\n * For a description of the Proto3 JSON format check\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * TODO(klimt): We can remove the databaseId argument if we keep the full\n * resource name in documents.\n */\nclass Vn {\n    constructor(t, n) {\n        this.databaseId = t, this.F = n;\n    }\n}\n\n/**\n * Returns a value for a number (or null) that's appropriate to put into\n * a google.protobuf.Int32Value proto.\n * DO NOT USE THIS FOR ANYTHING ELSE.\n * This method cheats. It's typed as returning \"number\" because that's what\n * our generated proto interfaces say Int32Value must be. But GRPC actually\n * expects a { value: <number> } struct.\n */\n/**\n * Returns a value for a Date that's appropriate to put into a proto.\n */\nfunction Nn(t, n) {\n    if (t.F) {\n        return `${new Date(1e3 * n.seconds).toISOString().replace(/\\.\\d*/, \"\").replace(\"Z\", \"\")}.${(\"000000000\" + n.nanoseconds).slice(-9)}Z`;\n    }\n    return {\n        seconds: \"\" + n.seconds,\n        nanos: n.nanoseconds\n    };\n}\n\n/**\n * Returns a value for bytes that's appropriate to put in a proto.\n *\n * Visible for testing.\n */\nfunction Dn(t, n) {\n    return t.F ? n.toBase64() : n.toUint8Array();\n}\n\nfunction $n(t, n) {\n    return Nn(t, n.toTimestamp());\n}\n\nfunction Fn(t) {\n    return b(!!t), _t.fromTimestamp(function(t) {\n        const n = Tt(t);\n        return new yt(n.seconds, n.nanos);\n    }(t));\n}\n\nfunction Sn(t, n) {\n    return function(t) {\n        return new K([ \"projects\", t.projectId, \"databases\", t.database ]);\n    }(t).child(\"documents\").child(n).canonicalString();\n}\n\nfunction qn(t, n) {\n    return Sn(t.databaseId, n.path);\n}\n\nfunction xn(t, n) {\n    const e = function(t) {\n        const n = K.fromString(t);\n        return b(Gn(n)), n;\n    }(n);\n    if (e.get(1) !== t.databaseId.projectId) throw new U(A, \"Tried to deserialize key from different project: \" + e.get(1) + \" vs \" + t.databaseId.projectId);\n    if (e.get(3) !== t.databaseId.database) throw new U(A, \"Tried to deserialize key from different database: \" + e.get(3) + \" vs \" + t.databaseId.database);\n    return new X((b((r = e).length > 4 && \"documents\" === r.get(4)), r.popFirst(5)));\n    var r;\n    /** Creates a Document proto from key and fields (but no create/update time) */}\n\nfunction On(t, n) {\n    return Sn(t.databaseId, n);\n}\n\nfunction Cn(t) {\n    return new K([ \"projects\", t.databaseId.projectId, \"databases\", t.databaseId.database ]).canonicalString();\n}\n\nfunction Ln(t, n, e) {\n    return {\n        name: qn(t, n),\n        fields: e.value.mapValue.fields\n    };\n}\n\nfunction Un(t, n) {\n    return \"found\" in n ? function(t, n) {\n        b(!!n.found), n.found.name, n.found.updateTime;\n        const e = xn(t, n.found.name), r = Fn(n.found.updateTime), s = new kt({\n            mapValue: {\n                fields: n.found.fields\n            }\n        });\n        return Mt.newFoundDocument(e, r, s);\n    }(t, n) : \"missing\" in n ? function(t, n) {\n        b(!!n.missing), b(!!n.readTime);\n        const e = xn(t, n.missing), r = Fn(n.readTime);\n        return Mt.newNoDocument(e, r);\n    }(t, n) : g();\n}\n\nfunction jn(t, n) {\n    let e;\n    if (n instanceof En) e = {\n        update: Ln(t, n.key, n.value)\n    }; else if (n instanceof Tn) e = {\n        delete: qn(t, n.key)\n    }; else if (n instanceof In) e = {\n        update: Ln(t, n.key, n.data),\n        updateMask: Wn(n.fieldMask)\n    }; else {\n        if (!(n instanceof An)) return g();\n        e = {\n            verify: qn(t, n.key)\n        };\n    }\n    return n.fieldTransforms.length > 0 && (e.updateTransforms = n.fieldTransforms.map((t => function(t, n) {\n        const e = n.transform;\n        if (e instanceof mn) return {\n            fieldPath: n.field.canonicalString(),\n            setToServerValue: \"REQUEST_TIME\"\n        };\n        if (e instanceof pn) return {\n            fieldPath: n.field.canonicalString(),\n            appendMissingElements: {\n                values: e.elements\n            }\n        };\n        if (e instanceof yn) return {\n            fieldPath: n.field.canonicalString(),\n            removeAllFromArray: {\n                values: e.elements\n            }\n        };\n        if (e instanceof _n) return {\n            fieldPath: n.field.canonicalString(),\n            increment: e.q\n        };\n        throw g();\n    }(0, t)))), n.precondition.isNone || (e.currentDocument = function(t, n) {\n        return void 0 !== n.updateTime ? {\n            updateTime: $n(t, n.updateTime)\n        } : void 0 !== n.exists ? {\n            exists: n.exists\n        } : g();\n    }(t, n.precondition)), e;\n}\n\nfunction kn(t, n) {\n    // Dissect the path into parent, collectionId, and optional key filter.\n    const e = {\n        structuredQuery: {}\n    }, r = n.path;\n    null !== n.collectionGroup ? (e.parent = On(t, r), e.structuredQuery.from = [ {\n        collectionId: n.collectionGroup,\n        allDescendants: !0\n    } ]) : (e.parent = On(t, r.popLast()), e.structuredQuery.from = [ {\n        collectionId: r.lastSegment()\n    } ]);\n    const s = function(t) {\n        if (0 === t.length) return;\n        const n = t.map((t => \n        // visible for testing\n        function(t) {\n            if (\"==\" /* EQUAL */ === t.op) {\n                if (Lt(t.value)) return {\n                    unaryFilter: {\n                        field: zn(t.field),\n                        op: \"IS_NAN\"\n                    }\n                };\n                if (Ct(t.value)) return {\n                    unaryFilter: {\n                        field: zn(t.field),\n                        op: \"IS_NULL\"\n                    }\n                };\n            } else if (\"!=\" /* NOT_EQUAL */ === t.op) {\n                if (Lt(t.value)) return {\n                    unaryFilter: {\n                        field: zn(t.field),\n                        op: \"IS_NOT_NAN\"\n                    }\n                };\n                if (Ct(t.value)) return {\n                    unaryFilter: {\n                        field: zn(t.field),\n                        op: \"IS_NOT_NULL\"\n                    }\n                };\n            }\n            return {\n                fieldFilter: {\n                    field: zn(t.field),\n                    op: Qn(t.op),\n                    value: t.value\n                }\n            };\n        }(t)));\n        if (1 === n.length) return n[0];\n        return {\n            compositeFilter: {\n                op: \"AND\",\n                filters: n\n            }\n        };\n    }(n.filters);\n    s && (e.structuredQuery.where = s);\n    const i = function(t) {\n        if (0 === t.length) return;\n        return t.map((t => \n        // visible for testing\n        function(t) {\n            return {\n                field: zn(t.field),\n                direction: Bn(t.dir)\n            };\n        }(t)));\n    }(n.orderBy);\n    i && (e.structuredQuery.orderBy = i);\n    const o = function(t, n) {\n        return t.F || ot(n) ? n : {\n            value: n\n        };\n    }(t, n.limit);\n    return null !== o && (e.structuredQuery.limit = o), n.startAt && (e.structuredQuery.startAt = Mn(n.startAt)), \n    n.endAt && (e.structuredQuery.endAt = Mn(n.endAt)), e;\n}\n\nfunction Mn(t) {\n    return {\n        before: t.before,\n        values: t.position\n    };\n}\n\n// visible for testing\nfunction Bn(t) {\n    return Pn[t];\n}\n\n// visible for testing\nfunction Qn(t) {\n    return Rn[t];\n}\n\nfunction zn(t) {\n    return {\n        fieldPath: t.canonicalString()\n    };\n}\n\nfunction Wn(t) {\n    const n = [];\n    return t.fields.forEach((t => n.push(t.canonicalString()))), {\n        fieldPaths: n\n    };\n}\n\nfunction Gn(t) {\n    // Resource names have at least 4 components (project ID, database ID)\n    return t.length >= 4 && \"projects\" === t.get(0) && \"databases\" === t.get(2);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function Hn(t) {\n    return new Vn(t, /* useProto3Json= */ !0);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A helper for running delayed tasks following an exponential backoff curve\n * between attempts.\n *\n * Each delay is made up of a \"base\" delay which follows the exponential\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\n * base delay. This prevents clients from accidentally synchronizing their\n * delays causing spikes of load to the backend.\n */\nclass Yn {\n    constructor(\n    /**\n     * The AsyncQueue to run backoff operations on.\n     */\n    t, \n    /**\n     * The ID to use when scheduling backoff operations on the AsyncQueue.\n     */\n    n, \n    /**\n     * The initial delay (used as the base delay on the first retry attempt).\n     * Note that jitter will still be applied, so the actual delay could be as\n     * little as 0.5*initialDelayMs.\n     */\n    e = 1e3\n    /**\n     * The multiplier to use to determine the extended base delay after each\n     * attempt.\n     */ , r = 1.5\n    /**\n     * The maximum base delay after which no further backoff is performed.\n     * Note that jitter will still be applied, so the actual delay could be as\n     * much as 1.5*maxDelayMs.\n     */ , s = 6e4) {\n        this.O = t, this.timerId = n, this.C = e, this.L = r, this.U = s, this.j = 0, this.k = null, \n        /** The last backoff attempt, as epoch milliseconds. */\n        this.M = Date.now(), this.reset();\n    }\n    /**\n     * Resets the backoff delay.\n     *\n     * The very next backoffAndWait() will have no delay. If it is called again\n     * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\n     * subsequent ones will increase according to the backoffFactor.\n     */    reset() {\n        this.j = 0;\n    }\n    /**\n     * Resets the backoff delay to the maximum delay (e.g. for use after a\n     * RESOURCE_EXHAUSTED error).\n     */    B() {\n        this.j = this.U;\n    }\n    /**\n     * Returns a promise that resolves after currentDelayMs, and increases the\n     * delay for any subsequent attempts. If there was a pending backoff operation\n     * already, it will be canceled.\n     */    W(t) {\n        // Cancel any pending backoff operation.\n        this.cancel();\n        // First schedule using the current base (which may be 0 and should be\n        // honored as such).\n        const n = Math.floor(this.j + this.G()), e = Math.max(0, Date.now() - this.M), r = Math.max(0, n - e);\n        // Guard against lastAttemptTime being in the future due to a clock change.\n                r > 0 && m(\"ExponentialBackoff\", `Backing off for ${r} ms (base delay: ${this.j} ms, delay with jitter: ${n} ms, last attempt: ${e} ms ago)`), \n        this.k = this.O.enqueueAfterDelay(this.timerId, r, (() => (this.M = Date.now(), \n        t()))), \n        // Apply backoff factor to determine next delay and ensure it is within\n        // bounds.\n        this.j *= this.L, this.j < this.C && (this.j = this.C), this.j > this.U && (this.j = this.U);\n    }\n    H() {\n        null !== this.k && (this.k.skipDelay(), this.k = null);\n    }\n    cancel() {\n        null !== this.k && (this.k.cancel(), this.k = null);\n    }\n    /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */    G() {\n        return (Math.random() - .5) * this.j;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Datastore and its related methods are a wrapper around the external Google\n * Cloud Datastore grpc API, which provides an interface that is more convenient\n * for the rest of the client SDK architecture to consume.\n */\n/**\n * An implementation of Datastore that exposes additional state for internal\n * consumption.\n */\nclass Kn extends class {} {\n    constructor(t, n, e) {\n        super(), this.credentials = t, this.Y = n, this.S = e, this.K = !1;\n    }\n    J() {\n        if (this.K) throw new U(F, \"The client has already been terminated.\");\n    }\n    /** Gets an auth token and invokes the provided RPC. */    l(t, n, e) {\n        return this.J(), this.credentials.getToken().then((r => this.Y.l(t, n, e, r))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === D && this.credentials.invalidateToken(), \n            t) : new U(T, t.toString());\n        }));\n    }\n    /** Gets an auth token and invokes the provided RPC with streamed results. */    v(t, n, e) {\n        return this.J(), this.credentials.getToken().then((r => this.Y.v(t, n, e, r))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === D && this.credentials.invalidateToken(), \n            t) : new U(T, t.toString());\n        }));\n    }\n    terminate() {\n        this.K = !0;\n    }\n}\n\n// TODO(firestorexp): Make sure there is only one Datastore instance per\n// firestore-exp client.\nasync function Jn(t, n) {\n    const e = v(t), r = Cn(e.S) + \"/documents\", s = {\n        writes: n.map((t => jn(e.S, t)))\n    };\n    await e.l(\"Commit\", r, s);\n}\n\nasync function Zn(t, n) {\n    const e = v(t), r = Cn(e.S) + \"/documents\", s = {\n        documents: n.map((t => qn(e.S, t)))\n    }, i = await e.v(\"BatchGetDocuments\", r, s), o = new Map;\n    i.forEach((t => {\n        const n = Un(e.S, t);\n        o.set(n.key.toString(), n);\n    }));\n    const u = [];\n    return n.forEach((t => {\n        const n = o.get(t.toString());\n        b(!!n), u.push(n);\n    })), u;\n}\n\nasync function Xn(t, n) {\n    const e = v(t), r = kn(e.S, ln(n));\n    return (await e.v(\"RunQuery\", r.parent, {\n        structuredQuery: r.structuredQuery\n    })).filter((t => !!t.document)).map((t => function(t, n, e) {\n        const r = xn(t, n.name), s = Fn(n.updateTime), i = new kt({\n            mapValue: {\n                fields: n.fields\n            }\n        }), o = Mt.newFoundDocument(r, s, i);\n        return e && o.setHasCommittedMutations(), e ? o.setHasCommittedMutations() : o;\n    }(e.S, t.document, void 0)));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const te = new Map;\n\n/**\n * An instance map that ensures only one Datastore exists per Firestore\n * instance.\n */\n/**\n * Returns an initialized and started Datastore for the given Firestore\n * instance. Callers must invoke removeComponents() when the Firestore\n * instance is terminated.\n */\nfunction ne(t) {\n    if (t._terminated) throw new U(F, \"The client has already been terminated.\");\n    if (!te.has(t)) {\n        m(\"ComponentProvider\", \"Initializing Datastore\");\n        const i = function(t) {\n            return new ft(t, fetch.bind(null));\n        }((n = t._databaseId, e = t.app.options.appId || \"\", r = t._persistenceKey, s = t._freezeSettings(), \n        new G(n, e, r, s.host, s.ssl, s.experimentalForceLongPolling, s.experimentalAutoDetectLongPolling, s.useFetchStreams))), o = Hn(t._databaseId), u = function(t, n, e) {\n            return new Kn(t, n, e);\n        }(t._credentials, i, o);\n        te.set(t, u);\n    }\n    var n, e, r, s;\n    /**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */    return te.get(t);\n}\n\n/**\n * Removes all components associated with the provided instance. Must be called\n * when the `Firestore` instance is terminated.\n */\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied `FirestoreSettings` object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */\nclass ee {\n    constructor(t) {\n        var n;\n        if (void 0 === t.host) {\n            if (void 0 !== t.ssl) throw new U(A, \"Can't provide ssl option if host option is not set\");\n            this.host = \"firestore.googleapis.com\", this.ssl = true;\n        } else this.host = t.host, this.ssl = null === (n = t.ssl) || void 0 === n || n;\n        if (this.credentials = t.credentials, this.ignoreUndefinedProperties = !!t.ignoreUndefinedProperties, \n        void 0 === t.cacheSizeBytes) this.cacheSizeBytes = 41943040; else {\n            if (-1 !== t.cacheSizeBytes && t.cacheSizeBytes < 1048576) throw new U(A, \"cacheSizeBytes must be at least 1048576\");\n            this.cacheSizeBytes = t.cacheSizeBytes;\n        }\n        this.experimentalForceLongPolling = !!t.experimentalForceLongPolling, this.experimentalAutoDetectLongPolling = !!t.experimentalAutoDetectLongPolling, \n        this.useFetchStreams = !!t.useFetchStreams, function(t, n, e, r) {\n            if (!0 === n && !0 === r) throw new U(A, `${t} and ${e} cannot be used together.`);\n        }(\"experimentalForceLongPolling\", t.experimentalForceLongPolling, \"experimentalAutoDetectLongPolling\", t.experimentalAutoDetectLongPolling);\n    }\n    isEqual(t) {\n        return this.host === t.host && this.ssl === t.ssl && this.credentials === t.credentials && this.cacheSizeBytes === t.cacheSizeBytes && this.experimentalForceLongPolling === t.experimentalForceLongPolling && this.experimentalAutoDetectLongPolling === t.experimentalAutoDetectLongPolling && this.ignoreUndefinedProperties === t.ignoreUndefinedProperties && this.useFetchStreams === t.useFetchStreams;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link getFirestore}.\n */ class re {\n    /** @hideconstructor */\n    constructor(t, n) {\n        this._credentials = n, \n        /**\n         * Whether it's a Firestore or Firestore Lite instance.\n         */\n        this.type = \"firestore-lite\", this._persistenceKey = \"(lite)\", this._settings = new ee({}), \n        this._settingsFrozen = !1, t instanceof H ? this._databaseId = t : (this._app = t, \n        this._databaseId = function(t) {\n            if (!Object.prototype.hasOwnProperty.apply(t.options, [ \"projectId\" ])) throw new U(A, '\"projectId\" not provided in firebase.initializeApp.');\n            return new H(t.options.projectId);\n        }\n        /**\n * Initializes a new instance of Cloud Firestore with the provided settings.\n * Can only be called before any other functions, including\n * {@link getFirestore}. If the custom settings are empty, this function is\n * equivalent to calling {@link getFirestore}.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} with which the `Firestore` instance will\n * be associated.\n * @param settings - A settings object to configure the `Firestore` instance.\n * @returns A newly initialized `Firestore` instance.\n */ (t));\n    }\n    /**\n     * The {@link @firebase/app#FirebaseApp} associated with this `Firestore` service\n     * instance.\n     */    get app() {\n        if (!this._app) throw new U(F, \"Firestore was not initialized using the Firebase SDK. 'app' is not available\");\n        return this._app;\n    }\n    get _initialized() {\n        return this._settingsFrozen;\n    }\n    get _terminated() {\n        return void 0 !== this._terminateTask;\n    }\n    _setSettings(t) {\n        if (this._settingsFrozen) throw new U(F, \"Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.\");\n        this._settings = new ee(t), void 0 !== t.credentials && (this._credentials = function(t) {\n            if (!t) return new M;\n            switch (t.type) {\n              case \"gapi\":\n                const n = t.client;\n                // Make sure this really is a Gapi client.\n                                return b(!(\"object\" != typeof n || null === n || !n.auth || !n.auth.getAuthHeaderValueForFirstParty)), \n                new W(n, t.sessionIndex || \"0\", t.iamToken || null);\n\n              case \"provider\":\n                return t.client;\n\n              default:\n                throw new U(A, \"makeCredentialsProvider failed due to invalid credential type\");\n            }\n        }(t.credentials));\n    }\n    _getSettings() {\n        return this._settings;\n    }\n    _freezeSettings() {\n        return this._settingsFrozen = !0, this._settings;\n    }\n    _delete() {\n        return this._terminateTask || (this._terminateTask = this._terminate()), this._terminateTask;\n    }\n    /** Returns a JSON-serializable representation of this `Firestore` instance. */    toJSON() {\n        return {\n            app: this._app,\n            databaseId: this._databaseId,\n            settings: this._settings\n        };\n    }\n    /**\n     * Terminates all components used by this client. Subclasses can override\n     * this method to clean up their own dependencies, but must also call this\n     * method.\n     *\n     * Only ever called once.\n     */    _terminate() {\n        return function(t) {\n            const n = te.get(t);\n            n && (m(\"ComponentProvider\", \"Removing Datastore\"), te.delete(t), n.terminate());\n        }(this), Promise.resolve();\n    }\n}\n\nfunction se(n, e) {\n    const r = t(n, \"firestore/lite\");\n    if (r.isInitialized()) throw new U(F, \"Firestore can only be initialized once per app.\");\n    return r.initialize({\n        options: e\n    });\n}\n\n/**\n * Returns the existing `Firestore` instance that is associated with the\n * provided {@link @firebase/app#FirebaseApp}. If no instance exists, initializes a new\n * instance with default settings.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned `Firestore`\n * instance is associated with.\n * @returns The `Firestore` instance of the provided app.\n */ function ie(e = n()) {\n    return t(e, \"firestore/lite\").getImmediate();\n}\n\n/**\n * Modify this instance to communicate with the Cloud Firestore emulator.\n *\n * Note: This must be called before this instance has been used to do any\n * operations.\n *\n * @param firestore - The `Firestore` instance to configure to connect to the\n * emulator.\n * @param host - the emulator host (ex: localhost).\n * @param port - the emulator port (ex: 9000).\n * @param options.mockUserToken - the mock auth token to use for unit testing\n * Security Rules.\n */ function oe(t, n, e, r = {}) {\n    var s;\n    const i = (t = st(t, re))._getSettings();\n    if (\"firestore.googleapis.com\" !== i.host && i.host !== n && y(\"Host has been set in both settings() and useEmulator(), emulator host will be used\"), \n    t._setSettings(Object.assign(Object.assign({}, i), {\n        host: `${n}:${e}`,\n        ssl: !1\n    })), r.mockUserToken) {\n        let n, e;\n        if (\"string\" == typeof r.mockUserToken) n = r.mockUserToken, e = l.MOCK_USER; else {\n            // Let createMockUserToken validate first (catches common mistakes like\n            // invalid field \"uid\" and missing field \"sub\" / \"user_id\".)\n            n = a(r.mockUserToken, null === (s = t._app) || void 0 === s ? void 0 : s.options.projectId);\n            const i = r.mockUserToken.sub || r.mockUserToken.user_id;\n            if (!i) throw new U(A, \"mockUserToken must contain 'sub' or 'user_id' field!\");\n            e = new l(i);\n        }\n        t._credentials = new B(new k(n, e));\n    }\n}\n\n/**\n * Terminates the provided `Firestore` instance.\n *\n * After calling `terminate()` only the `clearIndexedDbPersistence()` functions\n * may be used. Any other function will throw a `FirestoreError`. Termination\n * does not cancel any pending writes, and any promises that are awaiting a\n * response from the server will not be resolved.\n *\n * To restart after termination, create a new instance of `Firestore` with\n * {@link getFirestore}.\n *\n * Note: Under normal circumstances, calling `terminate()` is not required. This\n * function is useful only when you want to force this instance to release all of\n * its resources or in combination with {@link clearIndexedDbPersistence} to\n * ensure that all local state is destroyed between test runs.\n *\n * @param firestore - The `Firestore` instance to terminate.\n * @returns A `Promise` that is resolved when the instance has been successfully\n * terminated.\n */ function ue(t) {\n    return t = st(t, re), e(t.app, \"firestore/lite\"), t._delete();\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentReference` refers to a document location in a Firestore database\n * and can be used to write, read, or listen to the location. The document at\n * the referenced location may or may not exist.\n */\nclass ce {\n    /** @hideconstructor */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    n, e) {\n        this.converter = n, this._key = e, \n        /** The type of this Firestore reference. */\n        this.type = \"document\", this.firestore = t;\n    }\n    get _path() {\n        return this._key.path;\n    }\n    /**\n     * The document's identifier within its collection.\n     */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced document (relative\n     * to the root of the database).\n     */    get path() {\n        return this._key.path.canonicalString();\n    }\n    /**\n     * The collection this `DocumentReference` belongs to.\n     */    get parent() {\n        return new he(this.firestore, this.converter, this._key.path.popLast());\n    }\n    withConverter(t) {\n        return new ce(this.firestore, t, this._key);\n    }\n}\n\n/**\n * A `Query` refers to a query which you can read or listen to. You can also\n * construct refined `Query` objects by adding filters and ordering.\n */ class ae {\n    // This is the lite version of the Query class in the main SDK.\n    /** @hideconstructor protected */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    n, e) {\n        this.converter = n, this._query = e, \n        /** The type of this Firestore reference. */\n        this.type = \"query\", this.firestore = t;\n    }\n    withConverter(t) {\n        return new ae(this.firestore, t, this._query);\n    }\n}\n\n/**\n * A `CollectionReference` object can be used for adding documents, getting\n * document references, and querying for documents (using {@link query}).\n */ class he extends ae {\n    /** @hideconstructor */\n    constructor(t, n, e) {\n        super(t, n, new sn(e)), this._path = e, \n        /** The type of this Firestore reference. */\n        this.type = \"collection\";\n    }\n    /** The collection's identifier. */    get id() {\n        return this._query.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced collection (relative\n     * to the root of the database).\n     */    get path() {\n        return this._query.path.canonicalString();\n    }\n    /**\n     * A reference to the containing `DocumentReference` if this is a\n     * subcollection. If this isn't a subcollection, the reference is null.\n     */    get parent() {\n        const t = this._path.popLast();\n        return t.isEmpty() ? null : new ce(this.firestore, \n        /* converter= */ null, new X(t));\n    }\n    withConverter(t) {\n        return new he(this.firestore, t, this._path);\n    }\n}\n\nfunction le(t, n, ...e) {\n    if (t = h(t), tt(\"collection\", \"path\", n), t instanceof re) {\n        const r = K.fromString(n, ...e);\n        return et(r), new he(t, /* converter= */ null, r);\n    }\n    {\n        if (!(t instanceof ce || t instanceof he)) throw new U(A, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = K.fromString(t.path, ...e).child(K.fromString(n));\n        return et(r), new he(t.firestore, \n        /* converter= */ null, r);\n    }\n}\n\n// TODO(firestorelite): Consider using ErrorFactory -\n// https://github.com/firebase/firebase-js-sdk/blob/0131e1f/packages/util/src/errors.ts#L106\n/**\n * Creates and returns a new `Query` instance that includes all documents in the\n * database that are contained in a collection or subcollection with the\n * given `collectionId`.\n *\n * @param firestore - A reference to the root `Firestore` instance.\n * @param collectionId - Identifies the collections to query over. Every\n * collection or subcollection with this ID as the last segment of its path\n * will be included. Cannot contain a slash.\n * @returns The created `Query`.\n */ function fe(t, n) {\n    if (t = st(t, re), tt(\"collectionGroup\", \"collection id\", n), n.indexOf(\"/\") >= 0) throw new U(A, `Invalid collection ID '${n}' passed to function collectionGroup(). Collection IDs must not contain '/'.`);\n    return new ae(t, \n    /* converter= */ null, \n    /**\n * Creates a new Query for a collection group query that matches all documents\n * within the provided collection group.\n */\n    function(t) {\n        return new sn(K.emptyPath(), t);\n    }(n));\n}\n\nfunction de(t, n, ...e) {\n    if (t = h(t), \n    // We allow omission of 'pathString' but explicitly prohibit passing in both\n    // 'undefined' and 'null'.\n    1 === arguments.length && (n = wt.A()), tt(\"doc\", \"path\", n), t instanceof re) {\n        const r = K.fromString(n, ...e);\n        return nt(r), new ce(t, \n        /* converter= */ null, new X(r));\n    }\n    {\n        if (!(t instanceof ce || t instanceof he)) throw new U(A, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(K.fromString(n, ...e));\n        return nt(r), new ce(t.firestore, t instanceof he ? t.converter : null, new X(r));\n    }\n}\n\n/**\n * Returns true if the provided references are equal.\n *\n * @param left - A reference to compare.\n * @param right - A reference to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function we(t, n) {\n    return t = h(t), n = h(n), (t instanceof ce || t instanceof he) && (n instanceof ce || n instanceof he) && (t.firestore === n.firestore && t.path === n.path && t.converter === n.converter);\n}\n\n/**\n * Returns true if the provided queries point to the same collection and apply\n * the same constraints.\n *\n * @param left - A `Query` to compare.\n * @param right - A `Query` to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function me(t, n) {\n    return t = h(t), n = h(n), t instanceof ae && n instanceof ae && (t.firestore === n.firestore && fn(t._query, n._query) && t.converter === n.converter);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `FieldPath` refers to a field in a document. The path may consist of a\n * single field name (referring to a top-level field in the document), or a\n * list of field names (referring to a nested field in the document).\n *\n * Create a `FieldPath` by providing field names. If more than one field\n * name is provided, the path will point to a nested field in a document.\n */ class pe {\n    /**\n     * Creates a `FieldPath` from the provided field names. If more than one field\n     * name is provided, the path will point to a nested field in a document.\n     *\n     * @param fieldNames - A list of field names.\n     */\n    constructor(...t) {\n        for (let n = 0; n < t.length; ++n) if (0 === t[n].length) throw new U(A, \"Invalid field name at argument $(i + 1). Field names must not be empty.\");\n        this._internalPath = new Z(t);\n    }\n    /**\n     * Returns true if this `FieldPath` is equal to the provided one.\n     *\n     * @param other - The `FieldPath` to compare against.\n     * @returns true if this `FieldPath` is equal to the provided one.\n     */    isEqual(t) {\n        return this._internalPath.isEqual(t._internalPath);\n    }\n}\n\n/**\n * Returns a special sentinel `FieldPath` to refer to the ID of a document.\n * It can be used in queries to sort or filter by the document ID.\n */ function ye() {\n    return new pe(\"__name__\");\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing an array of bytes.\n */ class _e {\n    /** @hideconstructor */\n    constructor(t) {\n        this._byteString = t;\n    }\n    /**\n     * Creates a new `Bytes` object from the given Base64 string, converting it to\n     * bytes.\n     *\n     * @param base64 - The Base64 string used to create the `Bytes` object.\n     */    static fromBase64String(t) {\n        try {\n            return new _e(Et.fromBase64String(t));\n        } catch (t) {\n            throw new U(A, \"Failed to construct data from Base64 string: \" + t);\n        }\n    }\n    /**\n     * Creates a new `Bytes` object from the given Uint8Array.\n     *\n     * @param array - The Uint8Array used to create the `Bytes` object.\n     */    static fromUint8Array(t) {\n        return new _e(Et.fromUint8Array(t));\n    }\n    /**\n     * Returns the underlying bytes as a Base64-encoded string.\n     *\n     * @returns The Base64-encoded string created from the `Bytes` object.\n     */    toBase64() {\n        return this._byteString.toBase64();\n    }\n    /**\n     * Returns the underlying bytes in a new `Uint8Array`.\n     *\n     * @returns The Uint8Array created from the `Bytes` object.\n     */    toUint8Array() {\n        return this._byteString.toUint8Array();\n    }\n    /**\n     * Returns a string representation of the `Bytes` object.\n     *\n     * @returns A string representation of the `Bytes` object.\n     */    toString() {\n        return \"Bytes(base64: \" + this.toBase64() + \")\";\n    }\n    /**\n     * Returns true if this `Bytes` object is equal to the provided one.\n     *\n     * @param other - The `Bytes` object to compare against.\n     * @returns true if this `Bytes` object is equal to the provided one.\n     */    isEqual(t) {\n        return this._byteString.isEqual(t._byteString);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Sentinel values that can be used when writing document fields with `set()`\n * or `update()`.\n */ class ge {\n    /**\n     * @param _methodName - The public API endpoint that returns this class.\n     * @hideconstructor\n     */\n    constructor(t) {\n        this._methodName = t;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing a geographic location in Firestore. The\n * location is represented as latitude/longitude pair.\n *\n * Latitude values are in the range of [-90, 90].\n * Longitude values are in the range of [-180, 180].\n */ class be {\n    /**\n     * Creates a new immutable `GeoPoint` object with the provided latitude and\n     * longitude values.\n     * @param latitude - The latitude as number between -90 and 90.\n     * @param longitude - The longitude as number between -180 and 180.\n     */\n    constructor(t, n) {\n        if (!isFinite(t) || t < -90 || t > 90) throw new U(A, \"Latitude must be a number between -90 and 90, but was: \" + t);\n        if (!isFinite(n) || n < -180 || n > 180) throw new U(A, \"Longitude must be a number between -180 and 180, but was: \" + n);\n        this._lat = t, this._long = n;\n    }\n    /**\n     * The latitude of this `GeoPoint` instance.\n     */    get latitude() {\n        return this._lat;\n    }\n    /**\n     * The longitude of this `GeoPoint` instance.\n     */    get longitude() {\n        return this._long;\n    }\n    /**\n     * Returns true if this `GeoPoint` is equal to the provided one.\n     *\n     * @param other - The `GeoPoint` to compare against.\n     * @returns true if this `GeoPoint` is equal to the provided one.\n     */    isEqual(t) {\n        return this._lat === t._lat && this._long === t._long;\n    }\n    /** Returns a JSON-serializable representation of this GeoPoint. */    toJSON() {\n        return {\n            latitude: this._lat,\n            longitude: this._long\n        };\n    }\n    /**\n     * Actually private to JS consumers of our API, so this function is prefixed\n     * with an underscore.\n     */    _compareTo(t) {\n        return mt(this._lat, t._lat) || mt(this._long, t._long);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const ve = /^__.*__$/;\n\n/** The result of parsing document data (e.g. for a setData call). */ class Ee {\n    constructor(t, n, e) {\n        this.data = t, this.fieldMask = n, this.fieldTransforms = e;\n    }\n    toMutation(t, n) {\n        return null !== this.fieldMask ? new In(t, this.data, this.fieldMask, n, this.fieldTransforms) : new En(t, this.data, n, this.fieldTransforms);\n    }\n}\n\n/** The result of parsing \"update\" data (i.e. for an updateData call). */ class Ie {\n    constructor(t, \n    // The fieldMask does not include document transforms.\n    n, e) {\n        this.data = t, this.fieldMask = n, this.fieldTransforms = e;\n    }\n    toMutation(t, n) {\n        return new In(t, this.data, this.fieldMask, n, this.fieldTransforms);\n    }\n}\n\nfunction Te(t) {\n    switch (t) {\n      case 0 /* Set */ :\n // fall through\n              case 2 /* MergeSet */ :\n // fall through\n              case 1 /* Update */ :\n        return !0;\n\n      case 3 /* Argument */ :\n      case 4 /* ArrayArgument */ :\n        return !1;\n\n      default:\n        throw g();\n    }\n}\n\n/** A \"context\" object passed around while parsing user data. */ class Ae {\n    /**\n     * Initializes a ParseContext with the given source and path.\n     *\n     * @param settings - The settings for the parser.\n     * @param databaseId - The database ID of the Firestore instance.\n     * @param serializer - The serializer to use to generate the Value proto.\n     * @param ignoreUndefinedProperties - Whether to ignore undefined properties\n     * rather than throw.\n     * @param fieldTransforms - A mutable list of field transforms encountered\n     * while parsing the data.\n     * @param fieldMask - A mutable list of field paths encountered while parsing\n     * the data.\n     *\n     * TODO(b/34871131): We don't support array paths right now, so path can be\n     * null to indicate the context represents any location within an array (in\n     * which case certain features will not work and errors will be somewhat\n     * compromised).\n     */\n    constructor(t, n, e, r, s, i) {\n        this.settings = t, this.databaseId = n, this.S = e, this.ignoreUndefinedProperties = r, \n        // Minor hack: If fieldTransforms is undefined, we assume this is an\n        // external call and we need to validate the entire path.\n        void 0 === s && this.Z(), this.fieldTransforms = s || [], this.fieldMask = i || [];\n    }\n    get path() {\n        return this.settings.path;\n    }\n    get X() {\n        return this.settings.X;\n    }\n    /** Returns a new context with the specified settings overwritten. */    tt(t) {\n        return new Ae(Object.assign(Object.assign({}, this.settings), t), this.databaseId, this.S, this.ignoreUndefinedProperties, this.fieldTransforms, this.fieldMask);\n    }\n    nt(t) {\n        var n;\n        const e = null === (n = this.path) || void 0 === n ? void 0 : n.child(t), r = this.tt({\n            path: e,\n            et: !1\n        });\n        return r.rt(t), r;\n    }\n    st(t) {\n        var n;\n        const e = null === (n = this.path) || void 0 === n ? void 0 : n.child(t), r = this.tt({\n            path: e,\n            et: !1\n        });\n        return r.Z(), r;\n    }\n    it(t) {\n        // TODO(b/34871131): We don't support array paths right now; so make path\n        // undefined.\n        return this.tt({\n            path: void 0,\n            et: !0\n        });\n    }\n    ot(t) {\n        return ze(t, this.settings.methodName, this.settings.ut || !1, this.path, this.settings.ct);\n    }\n    /** Returns 'true' if 'fieldPath' was traversed when creating this context. */    contains(t) {\n        return void 0 !== this.fieldMask.find((n => t.isPrefixOf(n))) || void 0 !== this.fieldTransforms.find((n => t.isPrefixOf(n.field)));\n    }\n    Z() {\n        // TODO(b/34871131): Remove null check once we have proper paths for fields\n        // within arrays.\n        if (this.path) for (let t = 0; t < this.path.length; t++) this.rt(this.path.get(t));\n    }\n    rt(t) {\n        if (0 === t.length) throw this.ot(\"Document fields must not be empty\");\n        if (Te(this.X) && ve.test(t)) throw this.ot('Document fields cannot begin and end with \"__\"');\n    }\n}\n\n/**\n * Helper for parsing raw user input (provided via the API) into internal model\n * classes.\n */ class Pe {\n    constructor(t, n, e) {\n        this.databaseId = t, this.ignoreUndefinedProperties = n, this.S = e || Hn(t);\n    }\n    /** Creates a new top-level parse context. */    at(t, n, e, r = !1) {\n        return new Ae({\n            X: t,\n            methodName: n,\n            ct: e,\n            path: Z.emptyPath(),\n            et: !1,\n            ut: r\n        }, this.databaseId, this.S, this.ignoreUndefinedProperties);\n    }\n}\n\nfunction Re(t) {\n    const n = t._freezeSettings(), e = Hn(t._databaseId);\n    return new Pe(t._databaseId, !!n.ignoreUndefinedProperties, e);\n}\n\n/** Parse document data from a set() call. */ function Ve(t, n, e, r, s, i = {}) {\n    const o = t.at(i.merge || i.mergeFields ? 2 /* MergeSet */ : 0 /* Set */ , n, e, s);\n    ke(\"Data must be an object, but it was:\", o, r);\n    const u = Ue(r, o);\n    let c, a;\n    if (i.merge) c = new vt(o.fieldMask), a = o.fieldTransforms; else if (i.mergeFields) {\n        const t = [];\n        for (const r of i.mergeFields) {\n            const s = Me(n, r, e);\n            if (!o.contains(s)) throw new U(A, `Field '${s}' is specified in your field mask but missing from your input data.`);\n            We(t, s) || t.push(s);\n        }\n        c = new vt(t), a = o.fieldTransforms.filter((t => c.covers(t.field)));\n    } else c = null, a = o.fieldTransforms;\n    return new Ee(new kt(u), c, a);\n}\n\nclass Ne extends ge {\n    _toFieldTransform(t) {\n        if (2 /* MergeSet */ !== t.X) throw 1 /* Update */ === t.X ? t.ot(`${this._methodName}() can only appear at the top level of your update data`) : t.ot(`${this._methodName}() cannot be used with set() unless you pass {merge:true}`);\n        // No transform to add for a delete, but we need to add it to our\n        // fieldMask so it gets deleted.\n        return t.fieldMask.push(t.path), null;\n    }\n    isEqual(t) {\n        return t instanceof Ne;\n    }\n}\n\n/**\n * Creates a child context for parsing SerializableFieldValues.\n *\n * This is different than calling `ParseContext.contextWith` because it keeps\n * the fieldTransforms and fieldMask separate.\n *\n * The created context has its `dataSource` set to `UserDataSource.Argument`.\n * Although these values are used with writes, any elements in these FieldValues\n * are not considered writes since they cannot contain any FieldValue sentinels,\n * etc.\n *\n * @param fieldValue - The sentinel FieldValue for which to create a child\n *     context.\n * @param context - The parent context.\n * @param arrayElement - Whether or not the FieldValue has an array.\n */ function De(t, n, e) {\n    return new Ae({\n        X: 3 /* Argument */ ,\n        ct: n.settings.ct,\n        methodName: t._methodName,\n        et: e\n    }, n.databaseId, n.S, n.ignoreUndefinedProperties);\n}\n\nclass $e extends ge {\n    _toFieldTransform(t) {\n        return new gn(t.path, new mn);\n    }\n    isEqual(t) {\n        return t instanceof $e;\n    }\n}\n\nclass Fe extends ge {\n    constructor(t, n) {\n        super(t), this.ht = n;\n    }\n    _toFieldTransform(t) {\n        const n = De(this, t, \n        /*array=*/ !0), e = this.ht.map((t => Le(t, n))), r = new pn(e);\n        return new gn(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass Se extends ge {\n    constructor(t, n) {\n        super(t), this.ht = n;\n    }\n    _toFieldTransform(t) {\n        const n = De(this, t, \n        /*array=*/ !0), e = this.ht.map((t => Le(t, n))), r = new yn(e);\n        return new gn(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass qe extends ge {\n    constructor(t, n) {\n        super(t), this.lt = n;\n    }\n    _toFieldTransform(t) {\n        const n = new _n(t.S, dn(t.S, this.lt));\n        return new gn(t.path, n);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\n/** Parse update data from an update() call. */ function xe(t, n, e, r) {\n    const s = t.at(1 /* Update */ , n, e);\n    ke(\"Data must be an object, but it was:\", s, r);\n    const i = [], o = kt.empty();\n    bt(r, ((t, r) => {\n        const u = Qe(n, t, e);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                r = h(r);\n        const c = s.st(u);\n        if (r instanceof Ne) \n        // Add it to the field mask, but don't add anything to updateData.\n        i.push(u); else {\n            const t = Le(r, c);\n            null != t && (i.push(u), o.set(u, t));\n        }\n    }));\n    const u = new vt(i);\n    return new Ie(o, u, s.fieldTransforms);\n}\n\n/** Parse update data from a list of field/value arguments. */ function Oe(t, n, e, r, s, i) {\n    const o = t.at(1 /* Update */ , n, e), u = [ Me(n, r, e) ], c = [ s ];\n    if (i.length % 2 != 0) throw new U(A, `Function ${n}() needs to be called with an even number of arguments that alternate between field names and values.`);\n    for (let t = 0; t < i.length; t += 2) u.push(Me(n, i[t])), c.push(i[t + 1]);\n    const a = [], l = kt.empty();\n    // We iterate in reverse order to pick the last value for a field if the\n    // user specified the field multiple times.\n    for (let t = u.length - 1; t >= 0; --t) if (!We(a, u[t])) {\n        const n = u[t];\n        let e = c[t];\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                e = h(e);\n        const r = o.st(n);\n        if (e instanceof Ne) \n        // Add it to the field mask, but don't add anything to updateData.\n        a.push(n); else {\n            const t = Le(e, r);\n            null != t && (a.push(n), l.set(n, t));\n        }\n    }\n    const f = new vt(a);\n    return new Ie(l, f, o.fieldTransforms);\n}\n\n/**\n * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\n * bound).\n *\n * @param allowArrays - Whether the query value is an array that may directly\n * contain additional arrays (e.g. the operand of an `in` query).\n */ function Ce(t, n, e, r = !1) {\n    return Le(e, t.at(r ? 4 /* ArrayArgument */ : 3 /* Argument */ , n));\n}\n\n/**\n * Parses user data to Protobuf Values.\n *\n * @param input - Data to be parsed.\n * @param context - A context object representing the current path being parsed,\n * the source of the data being parsed, etc.\n * @returns The parsed value, or null if the value was a FieldValue sentinel\n * that should not be included in the resulting parsed data.\n */ function Le(t, n) {\n    if (je(\n    // Unwrap the API type from the Compat SDK. This will return the API type\n    // from firestore-exp.\n    t = h(t))) return ke(\"Unsupported field value:\", n, t), Ue(t, n);\n    if (t instanceof ge) \n    // FieldValues usually parse into transforms (except FieldValue.delete())\n    // in which case we do not want to include this field in our parsed data\n    // (as doing so will overwrite the field directly prior to the transform\n    // trying to transform it). So we don't add this location to\n    // context.fieldMask and we return null as our parsing result.\n    /**\n * \"Parses\" the provided FieldValueImpl, adding any necessary transforms to\n * context.fieldTransforms.\n */\n    return function(t, n) {\n        // Sentinels are only supported with writes, and not within arrays.\n        if (!Te(n.X)) throw n.ot(`${t._methodName}() can only be used with update() and set()`);\n        if (!n.path) throw n.ot(`${t._methodName}() is not currently supported inside arrays`);\n        const e = t._toFieldTransform(n);\n        e && n.fieldTransforms.push(e);\n    }\n    /**\n * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)\n *\n * @returns The parsed value\n */ (t, n), null;\n    if (void 0 === t && n.ignoreUndefinedProperties) \n    // If the input is undefined it can never participate in the fieldMask, so\n    // don't handle this below. If `ignoreUndefinedProperties` is false,\n    // `parseScalarValue` will reject an undefined value.\n    return null;\n    if (\n    // If context.path is null we are inside an array and we don't support\n    // field mask paths more granular than the top-level array.\n    n.path && n.fieldMask.push(n.path), t instanceof Array) {\n        // TODO(b/34871131): Include the path containing the array in the error\n        // message.\n        // In the case of IN queries, the parsed data is an array (representing\n        // the set of values to be included for the IN query) that may directly\n        // contain additional arrays (each representing an individual field\n        // value), so we disable this validation.\n        if (n.settings.et && 4 /* ArrayArgument */ !== n.X) throw n.ot(\"Nested arrays are not supported\");\n        return function(t, n) {\n            const e = [];\n            let r = 0;\n            for (const s of t) {\n                let t = Le(s, n.it(r));\n                null == t && (\n                // Just include nulls in the array for fields being replaced with a\n                // sentinel.\n                t = {\n                    nullValue: \"NULL_VALUE\"\n                }), e.push(t), r++;\n            }\n            return {\n                arrayValue: {\n                    values: e\n                }\n            };\n        }(t, n);\n    }\n    return function(t, n) {\n        if (null === (t = h(t))) return {\n            nullValue: \"NULL_VALUE\"\n        };\n        if (\"number\" == typeof t) return dn(n.S, t);\n        if (\"boolean\" == typeof t) return {\n            booleanValue: t\n        };\n        if (\"string\" == typeof t) return {\n            stringValue: t\n        };\n        if (t instanceof Date) {\n            const e = yt.fromDate(t);\n            return {\n                timestampValue: Nn(n.S, e)\n            };\n        }\n        if (t instanceof yt) {\n            // Firestore backend truncates precision down to microseconds. To ensure\n            // offline mode works the same with regards to truncation, perform the\n            // truncation immediately without waiting for the backend to do that.\n            const e = new yt(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));\n            return {\n                timestampValue: Nn(n.S, e)\n            };\n        }\n        if (t instanceof be) return {\n            geoPointValue: {\n                latitude: t.latitude,\n                longitude: t.longitude\n            }\n        };\n        if (t instanceof _e) return {\n            bytesValue: Dn(n.S, t._byteString)\n        };\n        if (t instanceof ce) {\n            const e = n.databaseId, r = t.firestore._databaseId;\n            if (!r.isEqual(e)) throw n.ot(`Document reference is for database ${r.projectId}/${r.database} but should be for database ${e.projectId}/${e.database}`);\n            return {\n                referenceValue: Sn(t.firestore._databaseId || n.databaseId, t._key.path)\n            };\n        }\n        throw n.ot(`Unsupported field value: ${rt(t)}`);\n    }\n    /**\n * Checks whether an object looks like a JSON object that should be converted\n * into a struct. Normal class/prototype instances are considered to look like\n * JSON objects since they should be converted to a struct value. Arrays, Dates,\n * GeoPoints, etc. are not considered to look like JSON objects since they map\n * to specific FieldValue types other than ObjectValue.\n */ (t, n);\n}\n\nfunction Ue(t, n) {\n    const e = {};\n    return !function(t) {\n        for (const n in t) if (Object.prototype.hasOwnProperty.call(t, n)) return !1;\n        return !0;\n    }(t) ? bt(t, ((t, r) => {\n        const s = Le(r, n.nt(t));\n        null != s && (e[t] = s);\n    })) : \n    // If we encounter an empty object, we explicitly add it to the update\n    // mask to ensure that the server creates a map entry.\n    n.path && n.path.length > 0 && n.fieldMask.push(n.path), {\n        mapValue: {\n            fields: e\n        }\n    };\n}\n\nfunction je(t) {\n    return !(\"object\" != typeof t || null === t || t instanceof Array || t instanceof Date || t instanceof yt || t instanceof be || t instanceof _e || t instanceof ce || t instanceof ge);\n}\n\nfunction ke(t, n, e) {\n    if (!je(e) || !function(t) {\n        return \"object\" == typeof t && null !== t && (Object.getPrototypeOf(t) === Object.prototype || null === Object.getPrototypeOf(t));\n    }(e)) {\n        const r = rt(e);\n        throw \"an object\" === r ? n.ot(t + \" a custom object\") : n.ot(t + \" \" + r);\n    }\n}\n\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */ function Me(t, n, e) {\n    if ((\n    // If required, replace the FieldPath Compat class with with the firestore-exp\n    // FieldPath.\n    n = h(n)) instanceof pe) return n._internalPath;\n    if (\"string\" == typeof n) return Qe(t, n);\n    throw ze(\"Field path arguments must be of type string or FieldPath.\", t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, e);\n}\n\n/**\n * Matches any characters in a field path string that are reserved.\n */ const Be = new RegExp(\"[~\\\\*/\\\\[\\\\]]\");\n\n/**\n * Wraps fromDotSeparatedString with an error message about the method that\n * was thrown.\n * @param methodName - The publicly visible method name\n * @param path - The dot-separated string form of a field path which will be\n * split on dots.\n * @param targetDoc - The document against which the field path will be\n * evaluated.\n */ function Qe(t, n, e) {\n    if (n.search(Be) >= 0) throw ze(`Invalid field path (${n}). Paths must not contain '~', '*', '/', '[', or ']'`, t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, e);\n    try {\n        return new pe(...n.split(\".\"))._internalPath;\n    } catch (r) {\n        throw ze(`Invalid field path (${n}). Paths must not be empty, begin with '.', end with '.', or contain '..'`, t, \n        /* hasConverter= */ !1, \n        /* path= */ void 0, e);\n    }\n}\n\nfunction ze(t, n, e, r, s) {\n    const i = r && !r.isEmpty(), o = void 0 !== s;\n    let u = `Function ${n}() called with invalid data`;\n    e && (u += \" (via `toFirestore()`)\"), u += \". \";\n    let c = \"\";\n    return (i || o) && (c += \" (found\", i && (c += ` in field ${r}`), o && (c += ` in document ${s}`), \n    c += \")\"), new U(A, u + t + c);\n}\n\n/** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */ function We(t, n) {\n    return t.some((t => t.isEqual(n)));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */ class Ge {\n    // Note: This class is stripped down version of the DocumentSnapshot in\n    // the legacy SDK. The changes are:\n    // - No support for SnapshotMetadata.\n    // - No support for SnapshotOptions.\n    /** @hideconstructor protected */\n    constructor(t, n, e, r, s) {\n        this._firestore = t, this._userDataWriter = n, this._key = e, this._document = r, \n        this._converter = s;\n    }\n    /** Property of the `DocumentSnapshot` that provides the document's ID. */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * The `DocumentReference` for the document included in the `DocumentSnapshot`.\n     */    get ref() {\n        return new ce(this._firestore, this._converter, this._key);\n    }\n    /**\n     * Signals whether or not the document at the snapshot's location exists.\n     *\n     * @returns true if the document exists.\n     */    exists() {\n        return null !== this._document;\n    }\n    /**\n     * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n     * the document doesn't exist.\n     *\n     * @returns An `Object` containing all fields in the document or `undefined`\n     * if the document doesn't exist.\n     */    data() {\n        if (this._document) {\n            if (this._converter) {\n                // We only want to use the converter and create a new DocumentSnapshot\n                // if a converter has been provided.\n                const t = new He(this._firestore, this._userDataWriter, this._key, this._document, \n                /* converter= */ null);\n                return this._converter.fromFirestore(t);\n            }\n            return this._userDataWriter.convertValue(this._document.data.value);\n        }\n    }\n    /**\n     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n     * document or field doesn't exist.\n     *\n     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n     * field.\n     * @returns The data at the specified field location or undefined if no such\n     * field exists in the document.\n     */\n    // We are using `any` here to avoid an explicit cast by our users.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get(t) {\n        if (this._document) {\n            const n = this._document.data.field(Je(\"DocumentSnapshot.get\", t));\n            if (null !== n) return this._userDataWriter.convertValue(n);\n        }\n    }\n}\n\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */ class He extends Ge {\n    /**\n     * Retrieves all fields in the document as an `Object`.\n     *\n     * @override\n     * @returns An `Object` containing all fields in the document.\n     */\n    data() {\n        return super.data();\n    }\n}\n\n/**\n * A `QuerySnapshot` contains zero or more `DocumentSnapshot` objects\n * representing the results of a query. The documents can be accessed as an\n * array via the `docs` property or enumerated using the `forEach` method. The\n * number of documents can be determined via the `empty` and `size`\n * properties.\n */ class Ye {\n    /** @hideconstructor */\n    constructor(t, n) {\n        this._docs = n, this.query = t;\n    }\n    /** An array of all the documents in the `QuerySnapshot`. */    get docs() {\n        return [ ...this._docs ];\n    }\n    /** The number of documents in the `QuerySnapshot`. */    get size() {\n        return this.docs.length;\n    }\n    /** True if there are no documents in the `QuerySnapshot`. */    get empty() {\n        return 0 === this.docs.length;\n    }\n    /**\n     * Enumerates all of the documents in the `QuerySnapshot`.\n     *\n     * @param callback - A callback to be called with a `QueryDocumentSnapshot` for\n     * each document in the snapshot.\n     * @param thisArg - The `this` binding for the callback.\n     */    forEach(t, n) {\n        this._docs.forEach(t, n);\n    }\n}\n\n/**\n * Returns true if the provided snapshots are equal.\n *\n * @param left - A snapshot to compare.\n * @param right - A snapshot to compare.\n * @returns true if the snapshots are equal.\n */ function Ke(t, n) {\n    return t = h(t), n = h(n), t instanceof Ge && n instanceof Ge ? t._firestore === n._firestore && t._key.isEqual(n._key) && (null === t._document ? null === n._document : t._document.isEqual(n._document)) && t._converter === n._converter : t instanceof Ye && n instanceof Ye && (me(t.query, n.query) && pt(t.docs, n.docs, Ke));\n}\n\n/**\n * Helper that calls `fromDotSeparatedString()` but wraps any error thrown.\n */ function Je(t, n) {\n    return \"string\" == typeof n ? Qe(t, n) : n instanceof pe ? n._internalPath : n._delegate._internalPath;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Firestore query. `QueryConstraint`s are created by invoking {@link where},\n * {@link orderBy}, {@link (startAt:1)}, {@link (startAfter:1)}, {@link\n * endBefore:1}, {@link (endAt:1)}, {@link limit} or {@link limitToLast} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */\nclass Ze {}\n\n/**\n * Creates a new immutable instance of {@link Query} that is extended to also include\n * additional query constraints.\n *\n * @param query - The {@link Query} instance to use as a base for the new constraints.\n * @param queryConstraints - The list of {@link QueryConstraint}s to apply.\n * @throws if any of the provided query constraints cannot be combined with the\n * existing or new constraints.\n */ function Xe(t, ...n) {\n    for (const e of n) t = e._apply(t);\n    return t;\n}\n\nclass tr extends Ze {\n    constructor(t, n, e) {\n        super(), this.ft = t, this.dt = n, this.wt = e, this.type = \"where\";\n    }\n    _apply(t) {\n        const n = Re(t.firestore), e = function(t, n, e, r, s, i, o) {\n            let u;\n            if (s.isKeyField()) {\n                if (\"array-contains\" /* ARRAY_CONTAINS */ === i || \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ === i) throw new U(A, `Invalid Query. You can't perform '${i}' queries on FieldPath.documentId().`);\n                if (\"in\" /* IN */ === i || \"not-in\" /* NOT_IN */ === i) {\n                    mr(o, i);\n                    const n = [];\n                    for (const e of o) n.push(wr(r, t, e));\n                    u = {\n                        arrayValue: {\n                            values: n\n                        }\n                    };\n                } else u = wr(r, t, o);\n            } else \"in\" /* IN */ !== i && \"not-in\" /* NOT_IN */ !== i && \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ !== i || mr(o, i), \n            u = Ce(e, n, o, \n            /* allowArrays= */ \"in\" /* IN */ === i || \"not-in\" /* NOT_IN */ === i);\n            const c = zt.create(s, i, u);\n            return function(t, n) {\n                if (n.N()) {\n                    const e = cn(t);\n                    if (null !== e && !e.isEqual(n.field)) throw new U(A, `Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '${e.toString()}' and '${n.field.toString()}'`);\n                    const r = un(t);\n                    null !== r && pr(t, n.field, r);\n                }\n                const e = function(t, n) {\n                    for (const e of t.filters) if (n.indexOf(e.op) >= 0) return e.op;\n                    return null;\n                }(t, \n                /**\n * Given an operator, returns the set of operators that cannot be used with it.\n *\n * Operators in a query must adhere to the following set of rules:\n * 1. Only one array operator is allowed.\n * 2. Only one disjunctive operator is allowed.\n * 3. `NOT_EQUAL` cannot be used with another `NOT_EQUAL` operator.\n * 4. `NOT_IN` cannot be used with array, disjunctive, or `NOT_EQUAL` operators.\n *\n * Array operators: `ARRAY_CONTAINS`, `ARRAY_CONTAINS_ANY`\n * Disjunctive operators: `IN`, `ARRAY_CONTAINS_ANY`, `NOT_IN`\n */\n                function(t) {\n                    switch (t) {\n                      case \"!=\" /* NOT_EQUAL */ :\n                        return [ \"!=\" /* NOT_EQUAL */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"array-contains\" /* ARRAY_CONTAINS */ :\n                        return [ \"array-contains\" /* ARRAY_CONTAINS */ , \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"in\" /* IN */ :\n                        return [ \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"in\" /* IN */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ :\n                        return [ \"array-contains\" /* ARRAY_CONTAINS */ , \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"in\" /* IN */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"not-in\" /* NOT_IN */ :\n                        return [ \"array-contains\" /* ARRAY_CONTAINS */ , \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"in\" /* IN */ , \"not-in\" /* NOT_IN */ , \"!=\" /* NOT_EQUAL */ ];\n\n                      default:\n                        return [];\n                    }\n                }(n.op));\n                if (null !== e) \n                // Special case when it's a duplicate op to give a slightly clearer error message.\n                throw e === n.op ? new U(A, `Invalid query. You cannot use more than one '${n.op.toString()}' filter.`) : new U(A, `Invalid query. You cannot use '${n.op.toString()}' filters with '${e.toString()}' filters.`);\n            }(t, c), c;\n        }(t._query, \"where\", n, t.firestore._databaseId, this.ft, this.dt, this.wt);\n        return new ae(t.firestore, t.converter, function(t, n) {\n            const e = t.filters.concat([ n ]);\n            return new sn(t.path, t.collectionGroup, t.explicitOrderBy.slice(), e, t.limit, t.limitType, t.startAt, t.endAt);\n        }(t._query, e));\n    }\n}\n\n/**\n * Creates a {@link QueryConstraint} that enforces that documents must contain the\n * specified field and that the value should satisfy the relation constraint\n * provided.\n *\n * @param fieldPath - The path to compare\n * @param opStr - The operation string (e.g \"&lt;\", \"&lt;=\", \"==\", \"&lt;\",\n *   \"&lt;=\", \"!=\").\n * @param value - The value for comparison\n * @returns The created {@link Query}.\n */ function nr(t, n, e) {\n    const r = n, s = Je(\"where\", t);\n    return new tr(s, r, e);\n}\n\nclass er extends Ze {\n    constructor(t, n) {\n        super(), this.ft = t, this.yt = n, this.type = \"orderBy\";\n    }\n    _apply(t) {\n        const n = function(t, n, e) {\n            if (null !== t.startAt) throw new U(A, \"Invalid query. You must not call startAt() or startAfter() before calling orderBy().\");\n            if (null !== t.endAt) throw new U(A, \"Invalid query. You must not call endAt() or endBefore() before calling orderBy().\");\n            const r = new nn(n, e);\n            return function(t, n) {\n                if (null === un(t)) {\n                    // This is the first order by. It must match any inequality.\n                    const e = cn(t);\n                    null !== e && pr(t, e, n.field);\n                }\n            }(t, r), r;\n        }\n        /**\n * Create a `Bound` from a query and a document.\n *\n * Note that the `Bound` will always include the key of the document\n * and so only the provided document will compare equal to the returned\n * position.\n *\n * Will throw if the document does not contain all fields of the order by\n * of the query or if any of the fields in the order by are an uncommitted\n * server timestamp.\n */ (t._query, this.ft, this.yt);\n        return new ae(t.firestore, t.converter, function(t, n) {\n            // TODO(dimond): validate that orderBy does not list the same key twice.\n            const e = t.explicitOrderBy.concat([ n ]);\n            return new sn(t.path, t.collectionGroup, e, t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);\n        }(t._query, n));\n    }\n}\n\n/**\n * Creates a {@link QueryConstraint} that sorts the query result by the\n * specified field, optionally in descending order instead of ascending.\n *\n * @param fieldPath - The field to sort by.\n * @param directionStr - Optional direction to sort by ('asc' or 'desc'). If\n * not specified, order will be ascending.\n * @returns The created {@link Query}.\n */ function rr(t, n = \"asc\") {\n    const e = n, r = Je(\"orderBy\", t);\n    return new er(r, e);\n}\n\nclass sr extends Ze {\n    constructor(t, n, e) {\n        super(), this.type = t, this._t = n, this.gt = e;\n    }\n    _apply(t) {\n        return new ae(t.firestore, t.converter, function(t, n, e) {\n            return new sn(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), n, e, t.startAt, t.endAt);\n        }(t._query, this._t, this.gt));\n    }\n}\n\n/**\n * Creates a {@link QueryConstraint} that only returns the first matching documents.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link Query}.\n */ function ir(t) {\n    return it(\"limit\", t), new sr(\"limit\", t, \"F\" /* First */);\n}\n\n/**\n * Creates a {@link QueryConstraint} that only returns the last matching documents.\n *\n * You must specify at least one `orderBy` clause for `limitToLast` queries,\n * otherwise an exception will be thrown during execution.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link Query}.\n */ function or(t) {\n    return it(\"limitToLast\", t), new sr(\"limitToLast\", t, \"L\" /* Last */);\n}\n\nclass ur extends Ze {\n    constructor(t, n, e) {\n        super(), this.type = t, this.bt = n, this.vt = e;\n    }\n    _apply(t) {\n        const n = dr(t, this.type, this.bt, this.vt);\n        return new ae(t.firestore, t.converter, function(t, n) {\n            return new sn(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, n, t.endAt);\n        }(t._query, n));\n    }\n}\n\nfunction cr(...t) {\n    return new ur(\"startAt\", t, /*before=*/ !0);\n}\n\nfunction ar(...t) {\n    return new ur(\"startAfter\", t, \n    /*before=*/ !1);\n}\n\nclass hr extends Ze {\n    constructor(t, n, e) {\n        super(), this.type = t, this.bt = n, this.vt = e;\n    }\n    _apply(t) {\n        const n = dr(t, this.type, this.bt, this.vt);\n        return new ae(t.firestore, t.converter, function(t, n) {\n            return new sn(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, n);\n        }(t._query, n));\n    }\n}\n\nfunction lr(...t) {\n    return new hr(\"endBefore\", t, /*before=*/ !0);\n}\n\nfunction fr(...t) {\n    return new hr(\"endAt\", t, /*before=*/ !1);\n}\n\n/** Helper function to create a bound from a document or fields */ function dr(t, n, e, r) {\n    if (e[0] = h(e[0]), e[0] instanceof Ge) return function(t, n, e, r, s) {\n        if (!r) throw new U(R, `Can't use a DocumentSnapshot that doesn't exist for ${e}().`);\n        const i = [];\n        // Because people expect to continue/end a query at the exact document\n        // provided, we need to use the implicit sort order rather than the explicit\n        // sort order, because it's guaranteed to contain the document key. That way\n        // the position becomes unambiguous and the query continues/ends exactly at\n        // the provided document. Without the key (by using the explicit sort\n        // orders), multiple documents could match the position, yielding duplicate\n        // results.\n                for (const e of hn(t)) if (e.field.isKeyField()) i.push(xt(n, r.key)); else {\n            const t = r.data.field(e.field);\n            if (Rt(t)) throw new U(A, 'Invalid query. You are trying to start or end a query using a document for which the field \"' + e.field + '\" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');\n            if (null === t) {\n                const t = e.field.canonicalString();\n                throw new U(A, `Invalid query. You are trying to start or end a query using a document for which the field '${t}' (used as the orderBy) does not exist.`);\n            }\n            i.push(t);\n        }\n        return new tn(i, s);\n    }\n    /**\n * Converts a list of field values to a `Bound` for the given query.\n */ (t._query, t.firestore._databaseId, n, e[0]._document, r);\n    {\n        const s = Re(t.firestore);\n        return function(t, n, e, r, s, i) {\n            // Use explicit order by's because it has to match the query the user made\n            const o = t.explicitOrderBy;\n            if (s.length > o.length) throw new U(A, `Too many arguments provided to ${r}(). The number of arguments must be less than or equal to the number of orderBy() clauses`);\n            const u = [];\n            for (let i = 0; i < s.length; i++) {\n                const c = s[i];\n                if (o[i].field.isKeyField()) {\n                    if (\"string\" != typeof c) throw new U(A, `Invalid query. Expected a string for document ID in ${r}(), but got a ${typeof c}`);\n                    if (!an(t) && -1 !== c.indexOf(\"/\")) throw new U(A, `Invalid query. When querying a collection and ordering by FieldPath.documentId(), the value passed to ${r}() must be a plain document ID, but '${c}' contains a slash.`);\n                    const e = t.path.child(K.fromString(c));\n                    if (!X.isDocumentKey(e)) throw new U(A, `Invalid query. When querying a collection group and ordering by FieldPath.documentId(), the value passed to ${r}() must result in a valid document path, but '${e}' is not because it contains an odd number of segments.`);\n                    const s = new X(e);\n                    u.push(xt(n, s));\n                } else {\n                    const t = Ce(e, r, c);\n                    u.push(t);\n                }\n            }\n            return new tn(u, i);\n        }\n        /**\n * Parses the given `documentIdValue` into a `ReferenceValue`, throwing\n * appropriate errors if the value is anything other than a `DocumentReference`\n * or `string`, or if the string is malformed.\n */ (t._query, t.firestore._databaseId, s, n, e, r);\n    }\n}\n\nfunction wr(t, n, e) {\n    if (\"string\" == typeof (e = h(e))) {\n        if (\"\" === e) throw new U(A, \"Invalid query. When querying with FieldPath.documentId(), you must provide a valid document ID, but it was an empty string.\");\n        if (!an(n) && -1 !== e.indexOf(\"/\")) throw new U(A, `Invalid query. When querying a collection by FieldPath.documentId(), you must provide a plain document ID, but '${e}' contains a '/' character.`);\n        const r = n.path.child(K.fromString(e));\n        if (!X.isDocumentKey(r)) throw new U(A, `Invalid query. When querying a collection group by FieldPath.documentId(), the value provided must result in a valid document path, but '${r}' is not because it has an odd number of segments (${r.length}).`);\n        return xt(t, new X(r));\n    }\n    if (e instanceof ce) return xt(t, e._key);\n    throw new U(A, `Invalid query. When querying with FieldPath.documentId(), you must provide a valid string or a DocumentReference, but it was: ${rt(e)}.`);\n}\n\n/**\n * Validates that the value passed into a disjunctive filter satisfies all\n * array requirements.\n */ function mr(t, n) {\n    if (!Array.isArray(t) || 0 === t.length) throw new U(A, `Invalid Query. A non-empty array is required for '${n.toString()}' filters.`);\n    if (t.length > 10) throw new U(A, `Invalid Query. '${n.toString()}' filters support a maximum of 10 elements in the value array.`);\n}\n\nfunction pr(t, n, e) {\n    if (!e.isEqual(n)) throw new U(A, `Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '${n.toString()}' and so you must also use '${n.toString()}' as your first argument to orderBy(), but your first orderBy() is on field '${e.toString()}' instead.`);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts Firestore's internal types to the JavaScript types that we expose\n * to the user.\n *\n * @internal\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts custom model object of type T into `DocumentData` by applying the\n * converter if it exists.\n *\n * This function is used when converting user objects to `DocumentData`\n * because we want to provide the user with a more specific error message if\n * their `set()` or fails due to invalid data originating from a `toFirestore()`\n * call.\n */\nfunction yr(t, n, e) {\n    let r;\n    // Cast to `any` in order to satisfy the union type constraint on\n    // toFirestore().\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return r = t ? e && (e.merge || e.mergeFields) ? t.toFirestore(n, e) : t.toFirestore(n) : n, \n    r;\n}\n\nclass _r extends class {\n    convertValue(t, n = \"none\") {\n        switch (Dt(t)) {\n          case 0 /* NullValue */ :\n            return null;\n\n          case 1 /* BooleanValue */ :\n            return t.booleanValue;\n\n          case 2 /* NumberValue */ :\n            return At(t.integerValue || t.doubleValue);\n\n          case 3 /* TimestampValue */ :\n            return this.convertTimestamp(t.timestampValue);\n\n          case 4 /* ServerTimestampValue */ :\n            return this.convertServerTimestamp(t, n);\n\n          case 5 /* StringValue */ :\n            return t.stringValue;\n\n          case 6 /* BlobValue */ :\n            return this.convertBytes(Pt(t.bytesValue));\n\n          case 7 /* RefValue */ :\n            return this.convertReference(t.referenceValue);\n\n          case 8 /* GeoPointValue */ :\n            return this.convertGeoPoint(t.geoPointValue);\n\n          case 9 /* ArrayValue */ :\n            return this.convertArray(t.arrayValue, n);\n\n          case 10 /* ObjectValue */ :\n            return this.convertObject(t.mapValue, n);\n\n          default:\n            throw g();\n        }\n    }\n    convertObject(t, n) {\n        const e = {};\n        return bt(t.fields, ((t, r) => {\n            e[t] = this.convertValue(r, n);\n        })), e;\n    }\n    convertGeoPoint(t) {\n        return new be(At(t.latitude), At(t.longitude));\n    }\n    convertArray(t, n) {\n        return (t.values || []).map((t => this.convertValue(t, n)));\n    }\n    convertServerTimestamp(t, n) {\n        switch (n) {\n          case \"previous\":\n            const e = Vt(t);\n            return null == e ? null : this.convertValue(e, n);\n\n          case \"estimate\":\n            return this.convertTimestamp(Nt(t));\n\n          default:\n            return null;\n        }\n    }\n    convertTimestamp(t) {\n        const n = Tt(t);\n        return new yt(n.seconds, n.nanos);\n    }\n    convertDocumentKey(t, n) {\n        const e = K.fromString(t);\n        b(Gn(e));\n        const r = new H(e.get(1), e.get(3)), s = new X(e.popFirst(5));\n        return r.isEqual(n) || \n        // TODO(b/64130202): Somehow support foreign references.\n        p(`Document ${s} contains a document reference within a different database (${r.projectId}/${r.database}) which is not supported. It will be treated as a reference in the current database (${n.projectId}/${n.database}) instead.`), \n        s;\n    }\n} {\n    constructor(t) {\n        super(), this.firestore = t;\n    }\n    convertBytes(t) {\n        return new _e(t);\n    }\n    convertReference(t) {\n        const n = this.convertDocumentKey(t, this.firestore._databaseId);\n        return new ce(this.firestore, /* converter= */ null, n);\n    }\n}\n\n/**\n * Reads the document referred to by the specified document reference.\n *\n * All documents are directly fetched from the server, even if the document was\n * previously read or modified. Recent modifications are only reflected in the\n * retrieved `DocumentSnapshot` if they have already been applied by the\n * backend. If the client is offline, the read fails. If you like to use\n * caching or see local modifications, please use the full Firestore SDK.\n *\n * @param reference - The reference of the document to fetch.\n * @returns A Promise resolved with a `DocumentSnapshot` containing the current\n * document contents.\n */ function gr(t) {\n    const n = ne((t = st(t, ce)).firestore), e = new _r(t.firestore);\n    return Zn(n, [ t._key ]).then((n => {\n        b(1 === n.length);\n        const r = n[0];\n        return new Ge(t.firestore, e, t._key, r.isFoundDocument() ? r : null, t.converter);\n    }));\n}\n\n/**\n * Executes the query and returns the results as a {@link QuerySnapshot}.\n *\n * All queries are executed directly by the server, even if the the query was\n * previously executed. Recent modifications are only reflected in the retrieved\n * results if they have already been applied by the backend. If the client is\n * offline, the operation fails. To see previously cached result and local\n * modifications, use the full Firestore SDK.\n *\n * @param query - The `Query` to execute.\n * @returns A Promise that will be resolved with the results of the query.\n */ function br(t) {\n    !function(t) {\n        if (on(t) && 0 === t.explicitOrderBy.length) throw new U(x, \"limitToLast() queries require specifying at least one orderBy() clause\");\n    }((t = st(t, ae))._query);\n    const n = ne(t.firestore), e = new _r(t.firestore);\n    return Xn(n, t._query).then((n => {\n        const r = n.map((n => new He(t.firestore, e, n.key, n, t.converter)));\n        return on(t._query) && \n        // Limit to last queries reverse the orderBy constraint that was\n        // specified by the user. As such, we need to reverse the order of the\n        // results to return the documents in the expected order.\n        r.reverse(), new Ye(t, r);\n    }));\n}\n\nfunction vr(t, n, e) {\n    const r = yr((t = st(t, ce)).converter, n, e), s = Ve(Re(t.firestore), \"setDoc\", t._key, r, null !== t.converter, e);\n    return Jn(ne(t.firestore), [ s.toMutation(t._key, bn.none()) ]);\n}\n\nfunction Er(t, n, e, ...r) {\n    const s = Re((t = st(t, ce)).firestore);\n    // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n        let i;\n    i = \"string\" == typeof (n = h(n)) || n instanceof pe ? Oe(s, \"updateDoc\", t._key, n, e, r) : xe(s, \"updateDoc\", t._key, n);\n    return Jn(ne(t.firestore), [ i.toMutation(t._key, bn.exists(!0)) ]);\n}\n\n/**\n * Deletes the document referred to by the specified `DocumentReference`.\n *\n * The deletion will only be reflected in document reads that occur after the\n * returned promise resolves. If the client is offline, the\n * delete fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the document to delete.\n * @returns A `Promise` resolved once the document has been successfully\n * deleted from the backend.\n */ function Ir(t) {\n    return Jn(ne((t = st(t, ce)).firestore), [ new Tn(t._key, bn.none()) ]);\n}\n\n/**\n * Add a new document to specified `CollectionReference` with the given data,\n * assigning it a document ID automatically.\n *\n * The result of this write will only be reflected in document reads that occur\n * after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the collection to add this document to.\n * @param data - An Object containing the data for the new document.\n * @returns A `Promise` resolved with a `DocumentReference` pointing to the\n * newly created document after it has been written to the backend.\n */ function Tr(t, n) {\n    const e = de(t = st(t, he)), r = yr(t.converter, n), s = Ve(Re(t.firestore), \"addDoc\", e._key, r, null !== e.converter, {});\n    return Jn(ne(t.firestore), [ s.toMutation(e._key, bn.exists(!1)) ]).then((() => e));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns a sentinel for use with {@link @firebase/firestore/lite#(updateDoc:1)} or\n * {@link @firebase/firestore/lite#(setDoc:1)} with `{merge: true}` to mark a field for deletion.\n */ function Ar() {\n    return new Ne(\"deleteField\");\n}\n\n/**\n * Returns a sentinel used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link @firebase/firestore/lite#(updateDoc:1)} to\n * include a server-generated timestamp in the written data.\n */ function Pr() {\n    return new $e(\"serverTimestamp\");\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to union the given elements with any array\n * value that already exists on the server. Each specified element that doesn't\n * already exist in the array will be added to the end. If the field being\n * modified is not already an array it will be overwritten with an array\n * containing exactly the specified elements.\n *\n * @param elements - The elements to union into the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`.\n */ function Rr(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new Fe(\"arrayUnion\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link (setDoc:1)} or {@link\n * updateDoc:1} that tells the server to remove the given elements from any\n * array value that already exists on the server. All instances of each element\n * specified will be removed from the array. If the field being modified is not\n * already an array it will be overwritten with an empty array.\n *\n * @param elements - The elements to remove from the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function Vr(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new Se(\"arrayRemove\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to increment the field's current value by\n * the given value.\n *\n * If either the operand or the current field value uses floating point\n * precision, all arithmetic follows IEEE 754 semantics. If both values are\n * integers, values outside of JavaScript's safe number range\n * (`Number.MIN_SAFE_INTEGER` to `Number.MAX_SAFE_INTEGER`) are also subject to\n * precision loss. Furthermore, once processed by the Firestore backend, all\n * integer operations are capped between -2^63 and 2^63-1.\n *\n * If the current field value is not of type `number`, or if the field does not\n * yet exist, the transformation sets the field to the given value.\n *\n * @param n - The value to increment by.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function Nr(t) {\n    return new qe(\"increment\", t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A write batch, used to perform multiple writes as a single atomic unit.\n *\n * A `WriteBatch` object can be acquired by calling {@link writeBatch}. It\n * provides methods for adding writes to the write batch. None of the writes\n * will be committed (or visible locally) until {@link WriteBatch.commit} is\n * called.\n */ class Dr {\n    /** @hideconstructor */\n    constructor(t, n) {\n        this._firestore = t, this._commitHandler = n, this._mutations = [], this._committed = !1, \n        this._dataReader = Re(t);\n    }\n    set(t, n, e) {\n        this._verifyNotCommitted();\n        const r = $r(t, this._firestore), s = yr(r.converter, n, e), i = Ve(this._dataReader, \"WriteBatch.set\", r._key, s, null !== r.converter, e);\n        return this._mutations.push(i.toMutation(r._key, bn.none())), this;\n    }\n    update(t, n, e, ...r) {\n        this._verifyNotCommitted();\n        const s = $r(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (n = h(n)) || n instanceof pe ? Oe(this._dataReader, \"WriteBatch.update\", s._key, n, e, r) : xe(this._dataReader, \"WriteBatch.update\", s._key, n), \n        this._mutations.push(i.toMutation(s._key, bn.exists(!0))), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `WriteBatch` instance. Used for chaining method calls.\n     */    delete(t) {\n        this._verifyNotCommitted();\n        const n = $r(t, this._firestore);\n        return this._mutations = this._mutations.concat(new Tn(n._key, bn.none())), this;\n    }\n    /**\n     * Commits all of the writes in this write batch as a single atomic unit.\n     *\n     * The result of these writes will only be reflected in document reads that\n     * occur after the returned promise resolves. If the client is offline, the\n     * write fails. If you would like to see local modifications or buffer writes\n     * until the client is online, use the full Firestore SDK.\n     *\n     * @returns A `Promise` resolved once all of the writes in the batch have been\n     * successfully written to the backend as an atomic unit (note that it won't\n     * resolve while you're offline).\n     */    commit() {\n        return this._verifyNotCommitted(), this._committed = !0, this._mutations.length > 0 ? this._commitHandler(this._mutations) : Promise.resolve();\n    }\n    _verifyNotCommitted() {\n        if (this._committed) throw new U(F, \"A write batch can no longer be used after commit() has been called.\");\n    }\n}\n\nfunction $r(t, n) {\n    if ((t = h(t)).firestore !== n) throw new U(A, \"Provided document reference is from a different Firestore instance.\");\n    return t;\n}\n\n/**\n * Creates a write batch, used for performing multiple writes as a single\n * atomic operation. The maximum number of writes allowed in a single WriteBatch\n * is 500.\n *\n * The result of these writes will only be reflected in document reads that\n * occur after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @returns A `WriteBatch` that can be used to atomically execute multiple\n * writes.\n */ function Fr(t) {\n    const n = ne(t = st(t, re));\n    return new Dr(t, (t => Jn(n, t)));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Internal transaction object responsible for accumulating the mutations to\n * perform and the base versions for any documents read.\n */ class Sr {\n    constructor(t) {\n        this.datastore = t, \n        // The version of each document that was read during this transaction.\n        this.readVersions = new Map, this.mutations = [], this.committed = !1, \n        /**\n         * A deferred usage error that occurred previously in this transaction that\n         * will cause the transaction to fail once it actually commits.\n         */\n        this.lastWriteError = null, \n        /**\n         * Set of documents that have been written in the transaction.\n         *\n         * When there's more than one write to the same key in a transaction, any\n         * writes after the first are handled differently.\n         */\n        this.writtenDocs = new Set;\n    }\n    async lookup(t) {\n        if (this.ensureCommitNotCalled(), this.mutations.length > 0) throw new U(A, \"Firestore transactions require all reads to be executed before all writes.\");\n        const n = await Zn(this.datastore, t);\n        return n.forEach((t => this.recordVersion(t))), n;\n    }\n    set(t, n) {\n        this.write(n.toMutation(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    update(t, n) {\n        try {\n            this.write(n.toMutation(t, this.preconditionForUpdate(t)));\n        } catch (t) {\n            this.lastWriteError = t;\n        }\n        this.writtenDocs.add(t.toString());\n    }\n    delete(t) {\n        this.write(new Tn(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    async commit() {\n        if (this.ensureCommitNotCalled(), this.lastWriteError) throw this.lastWriteError;\n        const t = this.readVersions;\n        // For each mutation, note that the doc was written.\n                this.mutations.forEach((n => {\n            t.delete(n.key.toString());\n        })), \n        // For each document that was read but not written to, we want to perform\n        // a `verify` operation.\n        t.forEach(((t, n) => {\n            const e = X.fromPath(n);\n            this.mutations.push(new An(e, this.precondition(e)));\n        })), await Jn(this.datastore, this.mutations), this.committed = !0;\n    }\n    recordVersion(t) {\n        let n;\n        if (t.isFoundDocument()) n = t.version; else {\n            if (!t.isNoDocument()) throw g();\n            // For deleted docs, we must use baseVersion 0 when we overwrite them.\n            n = _t.min();\n        }\n        const e = this.readVersions.get(t.key.toString());\n        if (e) {\n            if (!n.isEqual(e)) \n            // This transaction will fail no matter what.\n            throw new U(S, \"Document version changed between two reads.\");\n        } else this.readVersions.set(t.key.toString(), n);\n    }\n    /**\n     * Returns the version of this document when it was read in this transaction,\n     * as a precondition, or no precondition if it was not read.\n     */    precondition(t) {\n        const n = this.readVersions.get(t.toString());\n        return !this.writtenDocs.has(t.toString()) && n ? bn.updateTime(n) : bn.none();\n    }\n    /**\n     * Returns the precondition for a document if the operation is an update.\n     */    preconditionForUpdate(t) {\n        const n = this.readVersions.get(t.toString());\n        // The first time a document is written, we want to take into account the\n        // read time and existence\n                if (!this.writtenDocs.has(t.toString()) && n) {\n            if (n.isEqual(_t.min())) \n            // The document doesn't exist, so fail the transaction.\n            // This has to be validated locally because you can't send a\n            // precondition that a document does not exist without changing the\n            // semantics of the backend write to be an insert. This is the reverse\n            // of what we want, since we want to assert that the document doesn't\n            // exist but then send the update and have it fail. Since we can't\n            // express that to the backend, we have to validate locally.\n            // Note: this can change once we can send separate verify writes in the\n            // transaction.\n            throw new U(A, \"Can't update a document that doesn't exist.\");\n            // Document exists, base precondition on document update time.\n                        return bn.updateTime(n);\n        }\n        // Document was not read, so we just use the preconditions for a blind\n        // update.\n        return bn.exists(!0);\n    }\n    write(t) {\n        this.ensureCommitNotCalled(), this.mutations.push(t);\n    }\n    ensureCommitNotCalled() {}\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * TransactionRunner encapsulates the logic needed to run and retry transactions\n * with backoff.\n */\nclass qr {\n    constructor(t, n, e, r) {\n        this.asyncQueue = t, this.datastore = n, this.updateFunction = e, this.deferred = r, \n        this.Et = 5, this.It = new Yn(this.asyncQueue, \"transaction_retry\" /* TransactionRetry */);\n    }\n    /** Runs the transaction and sets the result on deferred. */    run() {\n        this.Et -= 1, this.Tt();\n    }\n    Tt() {\n        this.It.W((async () => {\n            const t = new Sr(this.datastore), n = this.At(t);\n            n && n.then((n => {\n                this.asyncQueue.enqueueAndForget((() => t.commit().then((() => {\n                    this.deferred.resolve(n);\n                })).catch((t => {\n                    this.Pt(t);\n                }))));\n            })).catch((t => {\n                this.Pt(t);\n            }));\n        }));\n    }\n    At(t) {\n        try {\n            const n = this.updateFunction(t);\n            return !ot(n) && n.catch && n.then ? n : (this.deferred.reject(Error(\"Transaction callback must return a Promise\")), \n            null);\n        } catch (t) {\n            // Do not retry errors thrown by user provided updateFunction.\n            return this.deferred.reject(t), null;\n        }\n    }\n    Pt(t) {\n        this.Et > 0 && this.Rt(t) ? (this.Et -= 1, this.asyncQueue.enqueueAndForget((() => (this.Tt(), \n        Promise.resolve())))) : this.deferred.reject(t);\n    }\n    Rt(t) {\n        if (\"FirebaseError\" === t.name) {\n            // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and\n            // non-matching document versions with ABORTED. These errors should be retried.\n            const n = t.code;\n            return \"aborted\" === n || \"failed-precondition\" === n || !\n            /**\n * Determines whether an error code represents a permanent error when received\n * in response to a non-write operation.\n *\n * See isPermanentWriteError for classifying write errors.\n */\n            function(t) {\n                switch (t) {\n                  case E:\n                    return g();\n\n                  case I:\n                  case T:\n                  case P:\n                  case $:\n                  case O:\n                  case C:\n // Unauthenticated means something went wrong with our token and we need\n                    // to retry with new credentials which will happen automatically.\n                                      case D:\n                    return !1;\n\n                  case A:\n                  case R:\n                  case V:\n                  case N:\n                  case F:\n // Aborted might be retried in some scenarios, but that is dependant on\n                    // the context and should handled individually by the calling code.\n                    // See https://cloud.google.com/apis/design/errors.\n                                      case S:\n                  case q:\n                  case x:\n                  case L:\n                    return !0;\n\n                  default:\n                    return g();\n                }\n            }(n);\n        }\n        return !1;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** The Platform's 'document' implementation or null if not available. */ function xr() {\n    // `document` is not always available, e.g. in ReactNative and WebWorkers.\n    // eslint-disable-next-line no-restricted-globals\n    return \"undefined\" != typeof document ? document : null;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an operation scheduled to be run in the future on an AsyncQueue.\n *\n * It is created via DelayedOperation.createAndSchedule().\n *\n * Supports cancellation (via cancel()) and early execution (via skipDelay()).\n *\n * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type\n * in newer versions of TypeScript defines `finally`, which is not available in\n * IE.\n */ class Or {\n    constructor(t, n, e, r, s) {\n        this.asyncQueue = t, this.timerId = n, this.targetTimeMs = e, this.op = r, this.removalCallback = s, \n        this.deferred = new j, this.then = this.deferred.promise.then.bind(this.deferred.promise), \n        // It's normal for the deferred promise to be canceled (due to cancellation)\n        // and so we attach a dummy catch callback to avoid\n        // 'UnhandledPromiseRejectionWarning' log spam.\n        this.deferred.promise.catch((t => {}));\n    }\n    /**\n     * Creates and returns a DelayedOperation that has been scheduled to be\n     * executed on the provided asyncQueue after the provided delayMs.\n     *\n     * @param asyncQueue - The queue to schedule the operation on.\n     * @param id - A Timer ID identifying the type of operation this is.\n     * @param delayMs - The delay (ms) before the operation should be scheduled.\n     * @param op - The operation to run.\n     * @param removalCallback - A callback to be called synchronously once the\n     *   operation is executed or canceled, notifying the AsyncQueue to remove it\n     *   from its delayedOperations list.\n     *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and\n     *   the DelayedOperation class public.\n     */    static createAndSchedule(t, n, e, r, s) {\n        const i = Date.now() + e, o = new Or(t, n, i, r, s);\n        return o.start(e), o;\n    }\n    /**\n     * Starts the timer. This is called immediately after construction by\n     * createAndSchedule().\n     */    start(t) {\n        this.timerHandle = setTimeout((() => this.handleDelayElapsed()), t);\n    }\n    /**\n     * Queues the operation to run immediately (if it hasn't already been run or\n     * canceled).\n     */    skipDelay() {\n        return this.handleDelayElapsed();\n    }\n    /**\n     * Cancels the operation if it hasn't already been executed or canceled. The\n     * promise will be rejected.\n     *\n     * As long as the operation has not yet been run, calling cancel() provides a\n     * guarantee that the operation will not be run.\n     */    cancel(t) {\n        null !== this.timerHandle && (this.clearTimeout(), this.deferred.reject(new U(I, \"Operation cancelled\" + (t ? \": \" + t : \"\"))));\n    }\n    handleDelayElapsed() {\n        this.asyncQueue.enqueueAndForget((() => null !== this.timerHandle ? (this.clearTimeout(), \n        this.op().then((t => this.deferred.resolve(t)))) : Promise.resolve()));\n    }\n    clearTimeout() {\n        null !== this.timerHandle && (this.removalCallback(this), clearTimeout(this.timerHandle), \n        this.timerHandle = null);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class Cr {\n    constructor() {\n        // The last promise in the queue.\n        this.Vt = Promise.resolve(), \n        // A list of retryable operations. Retryable operations are run in order and\n        // retried with backoff.\n        this.Nt = [], \n        // Is this AsyncQueue being shut down? Once it is set to true, it will not\n        // be changed again.\n        this.Dt = !1, \n        // Operations scheduled to be queued in the future. Operations are\n        // automatically removed after they are run or canceled.\n        this.$t = [], \n        // visible for testing\n        this.Ft = null, \n        // Flag set while there's an outstanding AsyncQueue operation, used for\n        // assertion sanity-checks.\n        this.St = !1, \n        // Enabled during shutdown on Safari to prevent future access to IndexedDB.\n        this.qt = !1, \n        // List of TimerIds to fast-forward delays for.\n        this.xt = [], \n        // Backoff timer used to schedule retries for retryable operations\n        this.It = new Yn(this, \"async_queue_retry\" /* AsyncQueueRetry */), \n        // Visibility handler that triggers an immediate retry of all retryable\n        // operations. Meant to speed up recovery when we regain file system access\n        // after page comes into foreground.\n        this.Ot = () => {\n            const t = xr();\n            t && m(\"AsyncQueue\", \"Visibility state changed to \" + t.visibilityState), this.It.H();\n        };\n        const t = xr();\n        t && \"function\" == typeof t.addEventListener && t.addEventListener(\"visibilitychange\", this.Ot);\n    }\n    get isShuttingDown() {\n        return this.Dt;\n    }\n    /**\n     * Adds a new operation to the queue without waiting for it to complete (i.e.\n     * we ignore the Promise result).\n     */    enqueueAndForget(t) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.enqueue(t);\n    }\n    enqueueAndForgetEvenWhileRestricted(t) {\n        this.Ct(), \n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.Lt(t);\n    }\n    enterRestrictedMode(t) {\n        if (!this.Dt) {\n            this.Dt = !0, this.qt = t || !1;\n            const n = xr();\n            n && \"function\" == typeof n.removeEventListener && n.removeEventListener(\"visibilitychange\", this.Ot);\n        }\n    }\n    enqueue(t) {\n        if (this.Ct(), this.Dt) \n        // Return a Promise which never resolves.\n        return new Promise((() => {}));\n        // Create a deferred Promise that we can return to the callee. This\n        // allows us to return a \"hanging Promise\" only to the callee and still\n        // advance the queue even when the operation is not run.\n                const n = new j;\n        return this.Lt((() => this.Dt && this.qt ? Promise.resolve() : (t().then(n.resolve, n.reject), \n        n.promise))).then((() => n.promise));\n    }\n    enqueueRetryable(t) {\n        this.enqueueAndForget((() => (this.Nt.push(t), this.Ut())));\n    }\n    /**\n     * Runs the next operation from the retryable queue. If the operation fails,\n     * reschedules with backoff.\n     */    async Ut() {\n        if (0 !== this.Nt.length) {\n            try {\n                await this.Nt[0](), this.Nt.shift(), this.It.reset();\n            } catch (t) {\n                if (!\n                /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n                /** Verifies whether `e` is an IndexedDbTransactionError. */\n                function(t) {\n                    // Use name equality, as instanceof checks on errors don't work with errors\n                    // that wrap other errors.\n                    return \"IndexedDbTransactionError\" === t.name;\n                }\n                /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (t)) throw t;\n // Failure will be handled by AsyncQueue\n                                m(\"AsyncQueue\", \"Operation failed with retryable error: \" + t);\n            }\n            this.Nt.length > 0 && \n            // If there are additional operations, we re-schedule `retryNextOp()`.\n            // This is necessary to run retryable operations that failed during\n            // their initial attempt since we don't know whether they are already\n            // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`\n            // needs to  be re-run, we will run `op1`, `op1`, `op2` using the\n            // already enqueued calls to `retryNextOp()`. `op3()` will then run in the\n            // call scheduled here.\n            // Since `backoffAndRun()` cancels an existing backoff and schedules a\n            // new backoff on every call, there is only ever a single additional\n            // operation in the queue.\n            this.It.W((() => this.Ut()));\n        }\n    }\n    Lt(t) {\n        const n = this.Vt.then((() => (this.St = !0, t().catch((t => {\n            this.Ft = t, this.St = !1;\n            // Re-throw the error so that this.tail becomes a rejected Promise and\n            // all further attempts to chain (via .then) will just short-circuit\n            // and return the rejected Promise.\n            throw p(\"INTERNAL UNHANDLED ERROR: \", \n            /**\n * Chrome includes Error.message in Error.stack. Other browsers do not.\n * This returns expected output of message + stack when available.\n * @param error - Error or FirestoreError\n */\n            function(t) {\n                let n = t.message || \"\";\n                t.stack && (n = t.stack.includes(t.message) ? t.stack : t.message + \"\\n\" + t.stack);\n                return n;\n            }\n            /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n            // TODO(mrschmidt) Consider using `BaseTransaction` as the base class in the\n            // legacy SDK.\n            /**\n * A reference to a transaction.\n *\n * The `Transaction` object passed to a transaction's `updateFunction` provides\n * the methods to read and write data within the transaction context. See\n * {@link runTransaction}.\n */ (t)), t;\n        })).then((t => (this.St = !1, t))))));\n        return this.Vt = n, n;\n    }\n    enqueueAfterDelay(t, n, e) {\n        this.Ct(), \n        // Fast-forward delays for timerIds that have been overriden.\n        this.xt.indexOf(t) > -1 && (n = 0);\n        const r = Or.createAndSchedule(this, t, n, e, (t => this.jt(t)));\n        return this.$t.push(r), r;\n    }\n    Ct() {\n        this.Ft && g();\n    }\n    verifyOperationInProgress() {}\n    /**\n     * Waits until all currently queued tasks are finished executing. Delayed\n     * operations are not run.\n     */    async kt() {\n        // Operations in the queue prior to draining may have enqueued additional\n        // operations. Keep draining the queue until the tail is no longer advanced,\n        // which indicates that no more new operations were enqueued and that all\n        // operations were executed.\n        let t;\n        do {\n            t = this.Vt, await t;\n        } while (t !== this.Vt);\n    }\n    /**\n     * For Tests: Determine if a delayed operation with a particular TimerId\n     * exists.\n     */    Mt(t) {\n        for (const n of this.$t) if (n.timerId === t) return !0;\n        return !1;\n    }\n    /**\n     * For Tests: Runs some or all delayed operations early.\n     *\n     * @param lastTimerId - Delayed operations up to and including this TimerId\n     * will be drained. Pass TimerId.All to run all delayed operations.\n     * @returns a Promise that resolves once all operations have been run.\n     */    Bt(t) {\n        // Note that draining may generate more delayed ops, so we do that first.\n        return this.kt().then((() => {\n            // Run ops in the same order they'd run if they ran naturally.\n            this.$t.sort(((t, n) => t.targetTimeMs - n.targetTimeMs));\n            for (const n of this.$t) if (n.skipDelay(), \"all\" /* All */ !== t && n.timerId === t) break;\n            return this.kt();\n        }));\n    }\n    /**\n     * For Tests: Skip all subsequent delays for a timer id.\n     */    Qt(t) {\n        this.xt.push(t);\n    }\n    /** Called once a DelayedOperation is run or canceled. */    jt(t) {\n        // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.\n        const n = this.$t.indexOf(t);\n        this.$t.splice(n, 1);\n    }\n}\n\nclass Lr {\n    /** @hideconstructor */\n    constructor(t, n) {\n        this._firestore = t, this._transaction = n, this._dataReader = Re(t);\n    }\n    /**\n     * Reads the document referenced by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be read.\n     * @returns A `DocumentSnapshot` with the read data.\n     */    get(t) {\n        const n = $r(t, this._firestore), e = new _r(this._firestore);\n        return this._transaction.lookup([ n._key ]).then((t => {\n            if (!t || 1 !== t.length) return g();\n            const r = t[0];\n            if (r.isFoundDocument()) return new Ge(this._firestore, e, r.key, r, n.converter);\n            if (r.isNoDocument()) return new Ge(this._firestore, e, n._key, null, n.converter);\n            throw g();\n        }));\n    }\n    set(t, n, e) {\n        const r = $r(t, this._firestore), s = yr(r.converter, n, e), i = Ve(this._dataReader, \"Transaction.set\", r._key, s, null !== r.converter, e);\n        return this._transaction.set(r._key, i), this;\n    }\n    update(t, n, e, ...r) {\n        const s = $r(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (n = h(n)) || n instanceof pe ? Oe(this._dataReader, \"Transaction.update\", s._key, n, e, r) : xe(this._dataReader, \"Transaction.update\", s._key, n), \n        this._transaction.update(s._key, i), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `Transaction` instance. Used for chaining method calls.\n     */    delete(t) {\n        const n = $r(t, this._firestore);\n        return this._transaction.delete(n._key), this;\n    }\n}\n\n/**\n * Executes the given `updateFunction` and then attempts to commit the changes\n * applied within the transaction. If any document read within the transaction\n * has changed, Cloud Firestore retries the `updateFunction`. If it fails to\n * commit after 5 attempts, the transaction fails.\n *\n * The maximum number of writes allowed in a single transaction is 500.\n *\n * @param firestore - A reference to the Firestore database to run this\n * transaction against.\n * @param updateFunction - The function to execute within the transaction\n * context.\n * @returns If the transaction completed successfully or was explicitly aborted\n * (the `updateFunction` returned a failed promise), the promise returned by the\n * `updateFunction `is returned here. Otherwise, if the transaction failed, a\n * rejected promise with the corresponding failure error is returned.\n */ function Ur(t, n) {\n    const e = ne(t = st(t, re)), r = new j;\n    return new qr(new Cr, e, (e => n(new Lr(t, e))), r).run(), r.promise;\n}\n\n/**\n * Firestore Lite\n *\n * @remarks Firestore Lite is a small online-only SDK that allows read\n * and write access to your Firestore database. All operations connect\n * directly to the backend, and `onSnapshot()` APIs are not supported.\n * @packageDocumentation\n */ !function(t) {\n    f = t;\n}(`${i}_lite`), r(new o(\"firestore/lite\", ((t, {options: n}) => {\n    const e = t.getProvider(\"app\").getImmediate(), r = new re(e, new Q(t.getProvider(\"auth-internal\")));\n    return n && r._setSettings(n), r;\n}), \"PUBLIC\" /* PUBLIC */)), s(\"firestore-lite\", \"3.0.1\", \"node\");\n\nexport { _e as Bytes, he as CollectionReference, ce as DocumentReference, Ge as DocumentSnapshot, pe as FieldPath, ge as FieldValue, re as Firestore, U as FirestoreError, be as GeoPoint, ae as Query, Ze as QueryConstraint, He as QueryDocumentSnapshot, Ye as QuerySnapshot, yt as Timestamp, Lr as Transaction, Dr as WriteBatch, Tr as addDoc, Vr as arrayRemove, Rr as arrayUnion, le as collection, fe as collectionGroup, oe as connectFirestoreEmulator, Ir as deleteDoc, Ar as deleteField, de as doc, ye as documentId, fr as endAt, lr as endBefore, gr as getDoc, br as getDocs, ie as getFirestore, Nr as increment, se as initializeFirestore, ir as limit, or as limitToLast, rr as orderBy, Xe as query, me as queryEqual, we as refEqual, Ur as runTransaction, Pr as serverTimestamp, vr as setDoc, w as setLogLevel, Ke as snapshotEqual, ar as startAfter, cr as startAt, ue as terminate, Er as updateDoc, nr as where, Fr as writeBatch };\n//# sourceMappingURL=index.browser.esm2017.js.map\n","import { Item } from './item'\nimport { app } from './firebaseApp'\nimport { getFirestore, collection, getDocs } from 'firebase/firestore/lite'\n\n// Create firestore object\nconst db = getFirestore(app)\n\n/* Class Context Creates unlimited context (or \"context\") objects\nwith the ability to add delete and read tasks */\nclass Context extends Item {\n  constructor(context) {\n    super(context.text)\n    this.active = true\n  }\n\n  async init() {\n    this.taskList = await this.getTasksfromDB('XEhjtsRDNLZKo9FFLfDE')\n  }\n\n  async getTasksfromDB(contextId) {\n    const contextTasksCol = collection(db, `lists/${contextId}/tasks`)\n    const tasksSnapshot = await getDocs(contextTasksCol)\n    const tasks = tasksSnapshot.docs.map((doc) => doc.data())\n    return tasks\n  }\n\n  appendTask(task) {\n    this.taskList.push(task)\n  }\n\n  deleteTask(taskId) {\n    const taskListIndex = this.getIndexOfTask(taskId)\n    this.taskList.splice(taskListIndex, 1)\n  }\n\n  getTask(taskId) {\n    const taskIndexInList = this.getIndexOfTask(taskId)\n    return this.taskList[taskIndexInList]\n  }\n\n  /*  Index of task is sometimes needed in todoController \n  to e.g. update information with reference to the right task */\n  getIndexOfTask(taskId) {\n    taskId = parseInt(taskId)\n    const taskListIndex = this.taskList.findIndex(function (currentTask) {\n      if (currentTask.id === taskId) {\n        return true\n      }\n      return false\n    })\n    return taskListIndex\n  }\n\n  update(text) {\n    this.text = text\n  }\n}\n\nexport { Context }\n","import { Context } from './context'\nimport { app } from './firebaseApp'\nimport { getFirestore, collection, getDocs } from 'firebase/firestore/lite'\n\n// Create firestore object\nconst db = getFirestore(app)\n\n/* Class ContextList Creates a single object with \nall existing contexts(or \"lists\") */\nclass ContextList {\n  constructor(Context) {\n    this.Context = Context\n    this.list = []\n  }\n\n  async init() {\n    const contexts = await this.getContextFromDB()\n    const activeDbContext = contexts.find((context) => context.active === true)\n    const activeContext = new Context(activeDbContext)\n    await activeContext.init()\n\n    this.addNewContext(activeContext)\n    this.setActiveContext(activeContext)\n  }\n\n  async getContextFromDB() {\n    const contextsCol = collection(db, 'lists')\n    const contextsSnapshot = await getDocs(contextsCol)\n    const contexts = contextsSnapshot.docs.map((doc) => doc.data())\n    return contexts\n  }\n\n  addNewContext(context) {\n    this.list.push(context)\n  }\n\n  deleteContext(contextId) {\n    const contextListIndex = this.getIndexOfContext(contextId)\n    this.list.splice(contextListIndex, 1)\n  }\n\n  getContext(contextId) {\n    const contextIndexInList = this.getIndexOfContext(contextId)\n    return this.list[contextIndexInList]\n  }\n\n  /*  Index of context is sometimes needed in todoController \n  to e.g. update information with reference to the right context */\n  getIndexOfContext(contextId) {\n    contextId = parseInt(contextId)\n    const contextListIndex = this.list.findIndex(function (currentContext) {\n      if (currentContext.id === contextId) {\n        return true\n      }\n      return false\n    })\n    return contextListIndex\n  }\n\n  setActiveContext(context) {\n    this.activeContext = context\n  }\n\n  getActiveContext() {\n    return this.activeContext\n  }\n\n  getAllContexts() {\n    return this.list\n  }\n}\n\nexport { ContextList }\n","/* Class TodoDisplay generates an object which renders the\ncurrent state of objects */\nclass TodoDisplay {\n  constructor() {\n    this.bodyElement = document.querySelector('body')\n    this.contextContainer = document.getElementById('context-container')\n    this.contextInput = document.getElementById('context-input')\n    this.contextButton = document.getElementById('context-add-button')\n    this.taskContainer = document.getElementById('task-container')\n    this.taskList = document.getElementById('tasks')\n    this.taskInput = document.getElementById('task-input')\n    this.taskButton = document.getElementById('task-add-button')\n    this.taskHeading = document.getElementById('heading-task-container')\n    this.activeContext = null\n\n    // Logic of these handlers is implemented in Class Todocontroller\n    this.onClickAddContext = null\n    this.onClickDeleteItem = null\n    this.onClickChangeContext = null\n    this.onDclickEditContext = null\n    this.onEnterSaveInput = null\n    this.onClickOutsideSave = null\n    this.onClickAddTask = null\n    this.onMsDwnCopyTask = null\n    this.onMsUpAnalyzePosition = null\n  }\n\n  /* Only addContext and addTask can be assigned to Elements\n  Because for all other handlers the elements needed get generated\n  after UI interactions */\n  initListeners() {\n    this.contextButton.addEventListener('click', this.onClickAddContext)\n    this.taskButton.addEventListener('click', this.onClickAddTask)\n  }\n\n  renderAllContexts(contexts, activeContext) {\n    // Render context elements\n    contexts.forEach(this.appendNewContext.bind(this))\n    // Highlight active context element\n    this.activeContext = document.querySelector(\n      `[data-itemid=\"${activeContext.id}\"]`\n    )\n    this.highlightActiveContext(this.activeContext)\n  }\n\n  appendNewContext(context) {\n    const delBtn = this.createDelBtn()\n    const innerContent = this.createInnerContent(context.text, delBtn)\n    const className = 'context'\n    const contextElement = this.createItemElement(\n      context.id,\n      innerContent,\n      className\n    )\n    contextElement.addEventListener('click', this.onClickChangeContext)\n    this.contextContainer.appendChild(contextElement)\n  }\n\n  highlightActiveContext(element) {\n    this.activeContext.style.fontWeight = 'normal'\n    this.activeContext = element\n    element.style.fontWeight = 'bold'\n  }\n\n  renderTasks(tasks) {\n    this.taskList.innerHTML = ''\n    tasks.forEach(this.appendNewTask.bind(this))\n  }\n\n  appendNewTask(task) {\n    const delBtn = this.createDelBtn()\n    const innerContent = this.createInnerContent(task.text, delBtn)\n    const className = 'task'\n    const taskElement = this.createItemElement(task.id, innerContent, className)\n    taskElement.classList.add('task') // Better extra Method\n    taskElement.addEventListener('mousedown', this.onMsDwnCopyTask)\n    this.taskList.appendChild(taskElement)\n  }\n\n  /* Helper functions to create Task or Context:\n  createItemElement, createDelBtn, createInnerContent */\n\n  createItemElement(id, innerContent, className) {\n    const para = document.createElement('p')\n    para.dataset.itemid = id\n    para.classList.add(className)\n    para.addEventListener('dblclick', this.onDclickEditItem)\n    para.appendChild(innerContent)\n    return para\n  }\n\n  createDelBtn() {\n    const deleteButton = document.createElement('i')\n    deleteButton.classList.add('fa')\n    deleteButton.classList.add('fa-trash-o')\n    deleteButton.addEventListener('click', this.onClickDeleteItem)\n    return deleteButton\n  }\n\n  createInnerContent(text, delBtn) {\n    // Here you could create an extra method to separate span\n    const innerContent = document.createElement('div')\n    const span = document.createElement('span')\n    span.innerHTML = text\n    innerContent.appendChild(span)\n    innerContent.appendChild(delBtn)\n    return innerContent\n  }\n\n  /* Edit functions: prepareItemEdit, createInputBox,\n  saveItemElements, createEditableElement, updateItemAfterEdit */\n\n  prepareItemEdit(para) {\n    this.saveItemElements(para)\n    const maxLength = this.defineMaxLength()\n    const inputBox = this.createInputBox(para, maxLength)\n    this.createEditableElement(inputBox)\n    // Implement click Listener for whole page to exit edit\n    // except current element\n    this.bodyElement.addEventListener('click', this.onClickOutsideSave)\n    inputBox.addEventListener('click', (event) => event.stopPropagation())\n    this.addContextListeners()\n  }\n\n  saveItemElements(para) {\n    this.itemElements = para.firstChild\n  }\n\n  defineMaxLength() {\n    const itemType = this.itemElements.parentNode.className\n    if (itemType === 'task') return 25\n    if (itemType === 'context') return 8\n  }\n\n  createInputBox(para, length) {\n    const inputBox = document.createElement('input')\n    const inputBoxValue = para.firstChild.textContent\n    inputBox.type = 'text'\n    inputBox.id = 'edit-item-field'\n    inputBox.maxLength = length\n    inputBox.value = inputBoxValue\n    inputBox.addEventListener('keyup', this.onEnterSaveInput)\n    return inputBox\n  }\n\n  createEditableElement(inputBox) {\n    const para = this.itemElements.parentNode\n    para.id = 'edit-item'\n    para.firstChild.remove()\n    para.appendChild(inputBox)\n    // Put cursor directly into text to edit it\n    inputBox.focus()\n  }\n\n  updateDomAfterEdit(para, text) {\n    this.itemElements.firstChild.innerHTML = text\n    // Remove inputBox\n    para.firstChild.remove()\n    // Append updated Text and Delete Button\n    para.appendChild(this.itemElements)\n    // Remove edit id for new use\n    para.removeAttribute('id')\n    // Remove event listener from body\n    this.bodyElement.removeEventListener('click', this.onClickOutsideSave)\n    // Append event listeners to contexts\n    this.addContextListeners()\n  }\n\n  /* Move task to other context functions: attachTasktoMouse, onMsOverHighlight, onMsOutNormal\n  createTaskCopy, moveTaskWithMouse, removeTaskCopy, undoTaskMoveActions */\n\n  attachTaskToMouse(elementWithHandler) {\n    const taskElementCopy = this.createTaskCopy(elementWithHandler)\n\n    // Append mousemovement listener for moving the task with mouse\n    this.bodyElement.addEventListener(\n      'mousemove',\n      this.moveTaskWithMouse.bind(null, this, taskElementCopy)\n    )\n\n    // Append mouseup listener to whole page\n    this.bodyElement.addEventListener('mouseup', this.onMsUpAnalyzePosition)\n\n    // Add mousehover event Listener to every context element\n    const contexts = document.querySelectorAll('.context')\n    const _this = this\n    contexts.forEach(function (element) {\n      element.addEventListener('mouseover', _this.onMsOverHighlight)\n      element.addEventListener('mouseout', _this.onMsOutNormal)\n      element.addEventListener('mouseup', _this.onMsUpAnalyzePosition)\n    })\n    this.changeUserSelect('none')\n  }\n\n  onMsOverHighlight() {\n    this.style.opacity = '0.7'\n  }\n\n  onMsOutNormal() {\n    this.style.opacity = '1'\n  }\n\n  createTaskCopy(elementWithHandler) {\n    this.temporarySavedTaskElement = elementWithHandler\n    const taskElementCopy = this.temporarySavedTaskElement.cloneNode(true)\n    taskElementCopy.id = 'task-copy'\n    taskElementCopy.style.width = '25vw'\n    taskElementCopy.style.display = 'none'\n    this.bodyElement.appendChild(taskElementCopy)\n    return taskElementCopy\n  }\n\n  moveTaskWithMouse(_this, taskElementCopy, event) {\n    // Put copy at specified position\n    const mousePositionHorizontal = event.x\n    const mousePositionVertical = event.y\n    taskElementCopy.style.position = 'absolute'\n    taskElementCopy.style.top = `${mousePositionVertical}px`\n    taskElementCopy.style.left = `${mousePositionHorizontal + 10}px`\n    taskElementCopy.style.display = 'block'\n  }\n\n  removeTaskCopy() {\n    const taskElementCopy = document.getElementById('task-copy')\n    taskElementCopy.remove()\n  }\n\n  undoTaskMoveActions() {\n    this.removeTaskCopy()\n    this.bodyElement.removeEventListener('mouseup', this.onMsUpAnalyzePosition)\n\n    const contexts = document.querySelectorAll('.context')\n    const _this = this\n    contexts.forEach(function (element) {\n      element.removeEventListener('mouseover', _this.onMsOverHighlight)\n      element.removeEventListener('mouseout', _this.onMsOutNormal)\n      element.removeEventListener('mouseup', _this.onMsUpAnalyzePosition)\n      element.style.opacity = '1'\n    })\n    this.changeUserSelect('auto')\n  }\n\n  setContextHeading(newHeading) {\n    this.taskHeading.innerText = newHeading\n  }\n\n  changeUserSelect(mode) {\n    document.querySelectorAll('*').forEach((node) => {\n      node.style.userSelect = mode\n    })\n  }\n\n  // Simple Helper functions\n\n  getItemId(element) {\n    return element.dataset.itemid\n  }\n\n  getEditItem() {\n    const itemElement = document.getElementById('edit-item')\n    return itemElement\n  }\n\n  getContextInputValue() {\n    return this.contextInput.value\n  }\n\n  resetContextInput() {\n    this.contextInput.value = ''\n  }\n\n  removeElement(element) {\n    element.remove()\n  }\n\n  removeTasks() {\n    this.taskList.innerHTML = ''\n  }\n\n  getElementToDelete(event) {\n    return event.target.parentNode.parentNode\n  }\n\n  getTaskInputValue() {\n    return this.taskInput.value\n  }\n\n  resetTaskInput() {\n    this.taskInput.value = ''\n  }\n\n  getEditInput() {\n    const inputField = document.getElementById('edit-item-field')\n    return inputField.value\n  }\n\n  getClassName(element) {\n    return element.classList\n  }\n\n  removeContextListeners() {\n    document.querySelectorAll('.context').forEach((context) => {\n      context.removeEventListener('click', this.onClickChangeContext)\n    })\n  }\n\n  addContextListeners() {\n    document.querySelectorAll('.context').forEach((context) => {\n      context.addEventListener('click', this.onClickChangeContext)\n    })\n  }\n}\n\nexport { TodoDisplay }\n","import { Task } from './task'\nimport { Context } from './context'\nimport { ContextList } from './contextList'\nimport { TodoDisplay } from './todoDisplay'\n\n/* Class TodoController generates an object which acts as \nthe bridge between the model classes and todoDisplay */\nclass TodoController {\n  constructor(TodoDisplay, Task, Context, ContextList) {\n    // Several task and context objects are created later\n    this.Task = Task\n    this.Context = Context\n    this.ContextList = ContextList\n\n    // Only one contextList and one todoDisplay object needed\n    this.todoDisplay = new TodoDisplay()\n\n    this.init()\n  }\n\n  // The logic of all event handlers created in todoDisplay is implemented in init()\n  init() {\n    // this.setDefaultTasks()\n    this.todoDisplay.onClickAddContext = this.onClickAddContext.bind(this)\n    this.todoDisplay.onClickAddTask = this.onClickAddTask.bind(this)\n    /* initListeners() adds listeners to addContextButton and addTaskButton\n    All other listeners below are only needed after UI interactions */\n    this.todoDisplay.initListeners()\n\n    // https://stackoverflow.com/questions/256754/how-to-pass-arguments-to-addeventlistener-listener-function/54731362#54731362\n    // Writing conlickDeleteContext so, that following arguments are passed:\n    // this which equals TodoController object\n    // event of event Listener which isn't seen here\n    // but can be accessed as last parameter in onClickDeleteContext\n    this.todoDisplay.onClickDeleteItem = this.onClickDeleteItem.bind(null, this)\n    this.todoDisplay.onEnterSaveInput = this.saveInput.bind(null, this)\n    this.todoDisplay.onClickOutsideSave = this.saveInput.bind(null, this)\n\n    /* We need to save todoController as this into _this in order \n    to pass todoController(_this) and the element where the handler \n    sits on (this) into handler functions below */\n    const _this = this\n    this.todoDisplay.onClickChangeContext = function () {\n      _this.onClickChangeContext(this, _this)\n    }\n    this.todoDisplay.onDclickEditItem = function () {\n      _this.onDclickEditItem(this, _this)\n    }\n    this.todoDisplay.onMsDwnCopyTask = function () {\n      _this.onMsDwnCopyTask(this, _this)\n    }\n    this.todoDisplay.onMsUpAnalyzePosition = function (event) {\n      _this.onMsUpAnalyzePosition(event, this, _this)\n    }\n\n    this.loadStartPage()\n  }\n\n  setDefaultTasks() {\n    this.activeContext = this.contextList.getActiveContext()\n    this.createNewTask('Double click me to edit my name')\n    this.createNewTask('Create a new list')\n    this.createNewTask('Click and hold me to move me to the new list')\n  }\n\n  async loadStartPage() {\n    this.contextList = new this.ContextList(this.Context)\n    await this.contextList.init()\n\n    const contexts = this.contextList.getAllContexts()\n    this.activeContext = this.contextList.getActiveContext()\n    const activeContextTasks = await this.activeContext.taskList\n\n    this.todoDisplay.renderTasks(activeContextTasks)\n    this.todoDisplay.renderAllContexts(contexts, this.activeContext)\n    this.todoDisplay.setContextHeading(this.activeContext.text)\n  }\n\n  onClickAddContext(event) {\n    event.preventDefault()\n    const userInput =\n      this.todoDisplay.getContextInputValue() || 'Give me a name'\n    this.createNewContext(userInput)\n    this.todoDisplay.resetContextInput()\n  }\n\n  onClickAddTask(event) {\n    event.preventDefault()\n    const userInput = this.todoDisplay.getTaskInputValue() || 'Give me a name'\n    this.createNewTask(userInput)\n    this.todoDisplay.resetTaskInput()\n  }\n\n  createNewTask(text) {\n    const task = new this.Task(text)\n    this.contextList.getActiveContext().appendTask(task)\n    this.todoDisplay.appendNewTask(task)\n  }\n\n  createNewContext(text) {\n    const context = new this.Context(text)\n    context.onClickChangeContext = this.onClickChangeContext\n    this.contextList.addNewContext(context)\n    this.todoDisplay.appendNewContext(context)\n  }\n\n  onClickDeleteItem(_this, event) {\n    const elementToDelete = _this.todoDisplay.getElementToDelete(event)\n    const itemToDeleteId = _this.todoDisplay.getItemId(elementToDelete)\n    const className = _this.todoDisplay.getClassName(elementToDelete)\n\n    if (className.contains('context')) {\n      _this.contextList.deleteContext(itemToDeleteId)\n      _this.todoDisplay.removeTasks()\n    } else if (className.contains('task')) {\n      _this.contextList.activeContext.deleteTask(itemToDeleteId)\n    }\n\n    _this.todoDisplay.removeElement(elementToDelete)\n  }\n\n  onClickChangeContext(elementWithHandler, _this) {\n    const clickedContextElementId = _this.todoDisplay.getItemId(\n      elementWithHandler\n    )\n    const clickedContext = _this.contextList.getContext(clickedContextElementId)\n    // Change active Context\n    this.contextList.setActiveContext(clickedContext)\n    // Display Tasks of active Context\n    const tasks = clickedContext.taskList\n    this.todoDisplay.renderTasks(tasks)\n    // Highlight active Context\n    this.todoDisplay.highlightActiveContext(elementWithHandler)\n    this.todoDisplay.setContextHeading(clickedContext.text)\n  }\n\n  onDclickEditItem(elementWithHandler, _this) {\n    _this.todoDisplay.prepareItemEdit(elementWithHandler)\n  }\n\n  saveInput(_this, event) {\n    if (event.key === 'Enter' || event.type === 'click') {\n      const input = _this.todoDisplay.getEditInput()\n      const itemElement = _this.todoDisplay.getEditItem()\n      const itemId = _this.todoDisplay.getItemId(itemElement)\n      const className = _this.todoDisplay.getClassName(itemElement)\n\n      if (className.contains('context')) {\n        const contextIndex = _this.contextList.getIndexOfContext(itemId)\n        _this.contextList.list[contextIndex].update(input)\n      } else if (className.contains('task')) {\n        const taskIndex = _this.contextList.activeContext.getIndexOfTask(itemId)\n        // For Line below should be implemented a setter method in Context\n        _this.contextList.activeContext.taskList[taskIndex].text = input\n      }\n      _this.todoDisplay.updateDomAfterEdit(itemElement, input)\n    }\n  }\n\n  // Soll das wirklich hier rein? Nicht besser direkt in todoDisplay,\n  // nur eine Methode von todoDisplay aufgerufen wird?!!\n  onMsDwnCopyTask(elementWithHandler, _this) {\n    _this.todoDisplay.attachTaskToMouse(elementWithHandler)\n  }\n\n  onMsUpAnalyzePosition(event, elementWithHandler, _this) {\n    if (elementWithHandler.classList.contains('context')) {\n      const activeContext = _this.contextList.getActiveContext()\n      const taskToMoveElement = _this.todoDisplay.temporarySavedTaskElement\n      const taskToMoveId = _this.todoDisplay.getItemId(taskToMoveElement)\n      const taskToMove = _this.contextList.activeContext.getTask(taskToMoveId)\n      const chosenContextElementId = _this.todoDisplay.getItemId(\n        elementWithHandler\n      )\n      const chosenContext = _this.contextList.getContext(chosenContextElementId)\n\n      chosenContext.appendTask(taskToMove)\n      activeContext.deleteTask(taskToMove)\n      _this.todoDisplay.removeElement(taskToMoveElement)\n      // Prevents executing the mouseup event which is also attached to body\n      event.stopPropagation()\n    }\n\n    _this.todoDisplay.undoTaskMoveActions()\n  }\n}\n\n/* Here a todoController object is created\nIt would be probably better practice to do this\nin index.js  and export just class TodoController */\nconst todoController = new TodoController(\n  TodoDisplay,\n  Task,\n  Context,\n  ContextList\n)\n\nexport { todoController }\n"],"sourceRoot":""}