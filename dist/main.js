(()=>{class t{constructor(e){this.text=e,this.id=t.countInstances()}static countInstances(){return t.count=(t.count||0)+1,t.count}}class e extends t{constructor(t){super(t),this.taskList=[],this.active=!0}appendTask(t){this.taskList.push(t)}deleteTask(t){const e=this.taskList.findIndex((e=>e.id===t.id));this.taskList.splice(e,1)}}const s=new class{constructor(t,e,s,n){this.Task=e,this.Context=s,this.contextList=new n(this.Context),this.todoDisplay=new t,this.init()}init(){this.loadStartPage()}loadStartPage(){this.activeContext=this.contextList.getActiveContext(),this.todoDisplay.renderContexts(this.contextList.getAllContexts())}createNewTask(t){const e=new this.Task(t);this.contextList.getActiveContext().appendTask(e)}removeTask(t){this.contextList.getActiveContext().deleteTask(t)}}(class{constructor(){this.contextContainer=document.getElementById("context-container"),this.contextInput=document.getElementById("context-input"),this.contextButton=document.getElementById("context-add"),this.taskContainer=document.getElementById("task-container"),this.taskInput=document.getElementById("task-input"),this.taskButton=document.getElementById("task-add")}renderContexts(t){t.forEach(this.appendContext.bind(this))}appendContext(t){const e=document.createElement("p");e.innerHTML=t.text,e.classList.add("context"),this.contextContainer.appendChild(e)}renderTasks(t){}},class extends t{constructor(t){super(t),this.favorite=!1}},e,class{constructor(t){this.Context=t,this.list=[],this.init()}init(){const t=new e("inbox");this.appendContext(t),this.setActiveContext(t)}appendContext(t){this.list.push(t)}setActiveContext(t){this.activeContext=t}getActiveContext(){return this.activeContext}getAllContexts(){return this.list}});s.createNewTask("taskA"),s.createNewTask("taskB"),console.log(s)})();
//# sourceMappingURL=main.js.map